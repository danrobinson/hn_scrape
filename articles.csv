by,descendants,id,score,time,title,type,url,html
pavelludiq,30,11823902,166,1464885377,Show HN: Full Stack Lisp – A book in progress about writing Common Lisp apps,story,http://fullstacklisp.com/,"<!DOCTYPE HTML>
<html>
  <head>
    <title>Full Stack Lisp Book!</title>
    <style>
      body {
      background-color: #fdf6e3;
      color: #002b36;
      }
      div {
      margin-left: auto;
      margin-right: auto;
      width: 600px;
      }
      img {
      width: 100%;
      }
    </style>
  </head>
  <body>
    <div>
      <h1>Full Stack Lisp</h1>
      <p>A Work in Progress Book about modern Common Lisp applications<br/><small>By Pavel Penev</small></p>
      <p><a href=""http://samples.leanpub.com/fullstacklisp-sample.pdf"">Download a sample chapter<p></p>
      <p><a href=""http://leanpub.com/fullstacklisp"">Purchase from Leanpub<p></p>
      <p><a href=""https://github.com/pvlpenev/fullstacklisp"">Source on Github<p></p>
      <small>(click on cover to continue to read online for free)</small>
      <a href=""https://leanpub.com/fullstacklisp/read""><img src=""images/title_page.png"" /></a>
    </div>
  <body>
</html>
"
sctb,8,11824372,76,1464888567,Carts without horses,story,http://www.aaronkharris.com/carts-without-horses,"<!DOCTYPE html>
<html class='no-js'>
  <head>
    <title></title>

    <meta content='width=device-width,initial-scale=1' name='viewport'>

    <meta name=""description"" content=""Investing in emerging markets such as India, Kenya, and Nigeria isn’t quite what I naively thought it would be. Before I started, I thought that finding a good company in an emerging market would...""/>
<meta property=""og:title"" content=""Carts without horses""/>
<meta property=""og:type"" content=""article""/>
<meta property=""og:url"" content=""http://www.aaronkharris.com/carts-without-horses""/>
<meta property=""og:site_name"" content=""Aaron&#x27;s Blog""/>
<meta property=""og:description"" content=""Investing in emerging markets such as India, Kenya, and Nigeria isn’t quite what I naively thought it would be. Before I started, I thought that finding a good company in an emerging market would...""/>

    <link href=""https://phthemes.s3.amazonaws.com/1/lpmGCkGbHyh0vsId/images/favicon.ico?v=1464646282"" rel='shortcut icon' type='image/x-icon'>
    <link href=""//fonts.googleapis.com/css?family=Oxygen:400,700,300|Crimson+Text:400,400italic&amp;subset=latin,latin-ext""
          media=""screen"" rel=""stylesheet"" type=""text/css"" />
    <link rel=""stylesheet"" href=""https://phthemes.s3.amazonaws.com/1/lpmGCkGbHyh0vsId/blog.css?v=1464827351"">

    <link rel=""alternate"" type=""application/atom+xml"" href=""http://www.aaronkharris.com/posts.atom"">
      <script>
        window.Posthaven = window.Posthaven || {};
        window.Posthaven.currentPage = {""postIds"":""1058740"",""pageCounter"":""post-1058740""};
        window.Posthaven.domain = 'posthaven.com';
        window.Posthaven.scribdId = 'pub-93932668657726994124';
      </script>
      <link href=""//posthaven-assets.s3.amazonaws.com/assets/blog-internal-041a94228b326cba7c13a78e4126c383.css""
            media=""all"" rel=""stylesheet"" />
      
      
      
      <script>
          window.fbAsyncInit = function() {
            FB.init({
              appId      : '488600357843531',
              xfbml      : true,
              version    : 'v2.6'
            });
          };

          (function(d, s, id){
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) {return;}
            js = d.createElement(s); js.id = id;
            js.src = ""//connect.facebook.net/en_US/sdk.js"";
            fjs.parentNode.insertBefore(js, fjs);
          }(document, 'script', 'facebook-jssdk'));
        </script>

    
  </head>

  <body id='site_6517'>
    <div id='container'>
      <nav class='posthaven-user-menu posthaven-control'>
<span class='posthaven-user-required' style='display: none;'>
<span class='posthaven-admin-required' style='display: none;'>
<a href=""https://posthaven.com/dashboard#sites/6517"">Manage</a>
<a href=""https://posthaven.com/dashboard#sites/6517/posts/1058740/edit"">Edit Post</a>
<a href=""https://posthaven.com/dashboard#sites/6517/posts/new"">New Post</a>
</span>
<a href=""/posthaven/xd/logout"" data-posthaven-method=""delete"">Logout</a>
</span>
<span class='posthaven-anon'>
<a href=""https://posthaven.com/users/sign_in?return_host=www.aaronkharris.com"" class=""posthaven-login"">Login</a>
</span>
</nav>


      <header id='topbar'>
        <a href=""https://posthaven.com/""><div class='posthaven-tab'></div></a>
      </header>

      <div id='flash'>
        
      </div>

      
        <header id='header'>
          <h1>
            <a href=""http://www.aaronkharris.com"">Aaron&#x27;s Blog</a>
          </h1>

          
            <h2>Learning by doing, because I can&#x27;t follow instructions</h2>
          

          
            <div class=""back-to-blog"">
              <a href=""http://www.aaronkharris.com"">&laquo;&nbsp;Back to blog</a>
            </div>
          
        </header>
      

      <div id='main_container'>
        

<div id=""main"">
  <article class=""post"">
    
  <header>
    

    <div class=""post-title"">
      <h2><a href=""http://www.aaronkharris.com/carts-without-horses"">Carts without horses</a></h2>

      
    </div>

    
  </header>

  <div class=""post-body"" id=""post_body_1058740"">
    
      <p>Investing in emerging markets such as India, Kenya, and Nigeria isn’t quite what I naively thought it would be. Before I started, I thought that finding a good company in an emerging market would just mean copying models that worked in developed markets. All I’d have to do is figure out how the business would need to be tweaked for a lower price point,  identify the best founders working on the problem in the new market, and invest in them. Any structural difference in the new market would just serve as a barrier to other companies from moving in. In the last few years, though, I’ve learned that while this is one way to invest, it’s unlikely to identify the largest companies that have yet to be built.  I now think that the better way to invest in startups in the developing world is to ask “How would you solve a problem if you started fresh with today’s technology?”</p><p>This probably seems like an obvious question, and one that founders and investors should be asking themselves with any opportunity. But, one of the more surprising things that I've learned is the degree to which the sequence of technological adoption changes the opportunity set available to startups and how we think about them. This isn't something you can actually see when looking at a single market, it's similar to comparative literature where each pair of markets that you examine in tandem illustrate the differences and gaps.</p><p>Credit cards and payments are a good way to illustrate this dynamic. We'll use the US as the base case. The US has an extensive and well established financial system, from trustworthy savings banks to a wide array of credit options to standardized and reasonably secure systems for transferring money. When M-PESA, Kenya's mobile money transfer system launched in 2007, Kenya did not have many of these pieces of infrastructure. What they did have was an unmet need to quickly and safely transfer money over long distances. They also had Safaricom, the largest cellular operator in the country. Not only did Safaricom provide the phones and coverage needed to make transfers possible, their network reached more of the population than the branches of any bank. On top of that, the banks lacked the lobbying power to kill off an upstart that was actually being run by a powerful company.[1]</p><p>Contrast this situation with the one faced by companies like Venmo on launching in the US. The foundation of the market is different here, with huge amounts of regulation governing money transfer alongside a fairly sophisticated (if not perfect) system to send money. Mobile money is just a convenience in the US and also faces barriers to widespread adoption from entrenched technologies, user behaviors, and regulations. In contrast, mobile money is a solution to a deep and unmet need in Kenya with a relatively green field from competition, regulation, and behavioral norms.</p><p>M-PESA wasn’t a startup that investors had access to, but let’s pretend it was. If those investors had focused on how a payments company would ever make significant revenue given the small size of the average transfer, they would have missed the opportunity to invest in a system that was handling 25% of Kenya’s GNP in 2013!</p><p>Something similar is currently playing out in India. Imagine if the first credit cards had been created today, with ubiquitous smartphones, rather than in the late 40s. Instead of serial numbers printed on paper[2], you’d probably have an app tied to your phone and some uniquely verifiable identity token. It would be easier and more efficient to create a vertically integrated system that combined the features of multiple players within the payments stack. This is the situation in India, where there are around 20 million credit cards and 220 million smartphones. Credit and debit cards aren’t a big thing there, which is why payment is so often handled in cash. In fact, they have a Cash on Delivery (COD) rate of close to 80% for goods purchased online[3]. That means that there are opportunities to build startups in India that look like credit card processors in the developed world, but there’s an even bigger opportunity to invent a new way for people to pay, and to own all the pieces.</p><p>It probably makes sense to always try to identify the optimal solution to a problem no matter where you are investing. However, finding ideal solutions is harder to do in developed markets because there are layers and layers of infrastructure, technology, and regulation that have gradually built up around most big problems. No matter what approach you take to a problem, those factors will influence how you think about it.[4]</p><p>It seems to me that the best investors are those that can most clearly articulate this thought process and hold onto it while accommodating the particulars of a given market. This is the underlying logic for investors who talk about the importance of identifying new platforms, or of catching the next wave. The companies that fit these criteria rewrite the rules of how their markets work by building entirely new foundations of infrastructure and user expectations. By doing so, they unlock the types of huge opportunities that you'd otherwise only expect in a developing world market with a clean slate.</p><p>While some great founders may think this way, many of the best simply have a vision of the world as it should exist that’s only possible with what they are making. Rather than trying to work around barriers, these founders either ignore them or are naive about their existence. Either way, they end up building things that others would have deemed too hard or pointless because of all the things other people had done. I think that's why so many great companies start as projects without much attention to commercial relevance.[5] When you start thinking about all the million different things that an existing market imposes on a new idea, it can be enough to stop you in your tracks. That's not to say that great founders ignore the market. What they actually do is react rapidly to what their companies encounter on first contact and move quickly to adjust and get better.</p><p>Developing markets are a kind of mirror of the future, or maybe of the present if things had happened differently. As such, they're hugely instructive in understanding the types of companies that can be built, and of the founders who can build them. I think it’s clear that there will be huge startups built in the developing world. More importantly, though, thinking about how and where those startups will occur forces us to think about solving problems from first principles. Starting with a clean slate lets founders and investors think about how to change the world as quickly as possible, rather than incrementing their way forward.</p>
__<br>
[1] The Economist has a great analysis of M-PESA’s success here: <a href=""http://www.economist.com/blogs/economist-explains/2013/05/economist-explains-18"">http://www.economist.com/blogs/economist-explains/2013/05/economist-explains-18</a>. Sorry about the paywall.<br>
[2] I was recently in the office of a Final (<a href=""https://getfinal.com/"">https://getfinal.com/</a>), where Aaron Frank showed me a bunch of the early charge and credit cards. They have them in lucite boxes, like really valuable baseball cards, which I thought was really cool.<br>
[3] As crazy as it might seem to hand cash to the UPS driver when he delivers your latest Amazon order, that’s exactly what happens in India (minus UPS and probably Amazon).<br>
[4] There’s an echo here of George Oppen’s belief that it is impossible to actually be objective when writing because of the degree to which bias is ingrained into the subconscious and influences everything we do.<br>
[5] There are, of course, founders who started with full knowledge of the challenges of their market and built huge companies designed to capitalize on existing inefficiencies.<br><br><i>Thanks to Scott Bell, Garry Tan, Geoff Ralston, and Nitya Sharma for your help thinking this through.</i><br>
    
  </div>


  </article>

  <footer id=""post_responses"" class=""post-responses"">
    <div class=""post-responses"">
  <div class='posthaven-share-links'>
<div class='posthaven-share-item'>
<a class='posthaven-upvote posthaven-control' data-post-id='1058740' href='#'>
<span class='posthaven-upvote-holder'>
<span class='posthaven-upvote-icon'>
<span class='posthaven-upvote-side'></span>
<span class='posthaven-upvote-arrow'></span>
</span>
<span class='posthaven-upvote-label-area'>
<span class='posthaven-upvote-label'>Upvote</span>
<span class='posthaven-upvoted-label'>Upvoted</span>
<span class='posthaven-upvote-number'>
0
</span>
</span>
</span>
</a>

</div>
<div class='posthaven-share-item posthaven-twitter-share'>
<a class='twitter-share-button share-item' data-text='Carts without horses' data-url='http://www.aaronkharris.com/carts-without-horses' href='https://twitter.com/share'>Tweet</a>
</div>
<div class='posthaven-share-item posthaven-facebook-share'>
<div class='fb-share-button' data-href='http://www.aaronkharris.com/carts-without-horses' data-layout='button_count'></div>
</div>
</div>


  
    <div class=""subscribe"">
      <strong class=""subscribe-like"">Like this post?</strong>
      <form action='/posthaven/subscription' class='posthaven-subscribe-form posthaven-control'>
<a class='posthaven-anon posthaven-subscribe-prompt' href='javascript:void(0)'>
<strong>Subscribe by email&nbsp;&raquo;</strong>
<span>We'll email you when there are new posts here.</span>
</a>
<div class='posthaven-user-required' style='display:none'>
<div class='posthaven-user-unsubscribe' style='display: none'>
You're following this blog.
<a data-method='DELETE' href='javascript:void(0);'>Unfollow&nbsp;&raquo;</a>
</div>
<div class='posthaven-user-subscribe'>
<a data-method='POST' href='javascript:void(0);'>
Follow this Posthaven&nbsp;&raquo;
</a>
</div>
</div>
<div class='posthaven-anon posthaven-subscribe-anon' style='display:none'>
Enter your email address to get email alerts about new posts on this site.
Unsubscribe anytime.
<div class='posthaven-subscribe-error' style='display:none'>Email address is invalid.</div>
<input name='email_address' placeholder='Email Address' type='text'>
<input type='submit' value='Subscribe'>
</div>
</form>

    </div>
  

  
    <div class=""count"">
      <span class=""comment-icon""></span>
      4 responses
    </div>
    <div class=""responses"">
      
        
  <div class=""response"">
    <div class=""comment"">
      Thanks for the write up, Aaron. I think the ""first principles"" approach you describe is a great way to tackle any problem, regardless of geography. The fundamental differentiator of a successful company versus an unsuccessful one remains traction, regardless of the instrument used to achieve it. <br><br>In the example of MPESA, if they had (hypothetically) conceived a way to automatically create a bank account from just a mobile phone number, you'd have the same end result (ability to transfer money seamlessly between different parties). Different means, but potentially similar results in the end.<br><br>Traction is king.
    </div>
    <div class=""byline"">
      <span class=""mdash"">&mdash;</span>
      Yazin
      <span class=""time-ago""><span class=""posthaven-formatted-date"" data-format=""RELATIVE""
                  data-unix-time=""1464888999""></span></span>
    </div>
  </div>


      
        
  <div class=""response"">
    <div class=""comment"">
      I was hoping for the explanation of the title: ""Carts without horses"" in the article
    </div>
    <div class=""byline"">
      <span class=""mdash"">&mdash;</span>
      Yohann AppsFresh com
      <span class=""time-ago""><span class=""posthaven-formatted-date"" data-format=""RELATIVE""
                  data-unix-time=""1464891003""></span></span>
    </div>
  </div>


      
        
  <div class=""response"">
    <div class=""comment"">
      Yohann - It's a reference to ""cart before the horse"" <a href=""https://en.wikipedia.org/wiki/Cart_before_the_horse"" rel=""nofollow"">https://en.wikipedia.org/wiki/Cart_before_the_h...</a>.
    </div>
    <div class=""byline"">
      <span class=""mdash"">&mdash;</span>
      Aaron Harris
      <span class=""time-ago""><span class=""posthaven-formatted-date"" data-format=""RELATIVE""
                  data-unix-time=""1464891833""></span></span>
    </div>
  </div>


      
        
  <div class=""response"">
    <div class=""comment"">
      Aaron - Great post! As someone who grew up in Pakistan, I've a constant ongoing inner dialogue comparing opportunities in the developing world with those in the developed world.<br><br>You're right - there's a huge potential in developing countries (especially Pakistan &amp; India). In the past, we've seen these countries make giant leaps forward by leapfrogging over what I view as 'intermediary technologies.' One such example is landline phones. By the time landline phones became affordable for the mass population in Pakistan, Chinese manufacturers were already producing (and shipping) cell phones for less than $25 USD to Lahore, Islamabad and Karachi. So Pakistan never really had to develop a vast, expansive network of landline phones that extended to rural areas. <br><br>We will likely see a similar scenario roll out with credit cards.<br><br>Also, as you may know, there have been multiple attempts to replicate the success of M-Pesa in Pakistan/India. One such example is Lahore-based Easy Paisa (<a href=""https://www.easypaisa.com.pk/"" rel=""nofollow"">https://www.easypaisa.com.pk/</a>). They've had quite some success in driving adoption. I remember frequently using Easy Paisa for P2P transfers back in 2008 (I had nothing to do with payments back then!).<br><br>Happy to chat if you'd ever like to talk FinTech in the developing world!
    </div>
    <div class=""byline"">
      <span class=""mdash"">&mdash;</span>
      Gul
      <span class=""time-ago""><span class=""posthaven-formatted-date"" data-format=""RELATIVE""
                  data-unix-time=""1464896443""></span></span>
    </div>
  </div>


      
      
    </div>
  
</div>

    <form accept-charset=""UTF-8"" action=""/posthaven/posts/1058740/comments"" class=""posthaven-comment-form posthaven-control"" method=""post""><div style=""margin:0;padding:0;display:inline""></div>
<div class='posthaven-anon'>
<input disabled=""disabled"" id=""recaptcha_challenge"" name=""recaptcha_challenge"" type=""hidden"" />
<input disabled=""disabled"" id=""recaptcha_response"" name=""recaptcha_response"" type=""hidden"" />
<div class='posthaven-field posthaven-comment-name-field'>
<label for=""response_commenter_name"">Your Name</label>
<input id=""response_commenter_name"" name=""response[commenter_name]"" type=""text"" />
</div>
<div class='posthaven-field posthaven-comment-email-field'>
<label for=""response_commenter_email"">Email</label>
<input id=""response_commenter_email"" name=""response[commenter_email]"" type=""text"" />
</div>
<div class='posthaven-field posthaven-comment-url-field' style='display: none'>
<label for=""response_commenter_url"">URL</label>
<input id=""response_commenter_url"" name=""response[commenter_url]"" type=""text"" />
</div>
<div class='posthaven-comment-add-url'>
<a href=""javascript:void(0)"">Add Website URL&nbsp;&raquo;</a>
</div>
</div>
<div class='posthaven-field posthaven-comment-body-field'>
<label for=""response_body"">Your Comment</label>
<textarea id=""response_body"" name=""response[body]"">
</textarea>
</div>
<div class='posthaven-field posthaven-comment-notify-field'>
<input id=""response_notify_commenter"" name=""response[notify_commenter]"" type=""checkbox"" value=""true"" />
<label for=""response_notify_commenter"">Notify me by email when new comments are added</label>
</div>
<div class='posthaven-comment-verification'></div>
<div class='posthaven-comment-loading' style='display: none'><img alt=""Loading"" src=""//posthaven-assets.s3.amazonaws.com/assets/loading-90da2830db59adf4a9060301bf2f2d2d.gif"" /></div>
<input class=""posthaven-comment-submit"" name=""commit"" type=""submit"" value=""Comment"" />
</form>


  </footer>
</div>

<aside id='sidebar'>
  

  <section id='bio'>
  <h3>Aaron Harris</h3>
  Co-founded Tutorspree.
Partner at Y Combinator.
@harris

  

</section>


  <section class=""post-date"">
    <div class=""display-date"">
      Posted
      <a href=""http://www.aaronkharris.com/carts-without-horses""><span class=""posthaven-formatted-date"" data-format=""RELATIVE""
                  data-unix-time=""1464887395""></span></a>

      <div class=""actual-date"">
        <span class=""posthaven-formatted-date"" data-format=""%B %e, %Y at %l:%M %p""
                  data-unix-time=""1464887395""></span>
      </div>
    </div>
  </section>

  <section class=""stats"">
    <span class=""stat"">
      <span class=""posthaven-post-count-placeholder"" data-post-id=""1058740""></span>
    </span>

    <span class=""measure"">
      views
    </span>
  </section>

  
</aside>

      </div>
    </div>

    <script src=""//www.scribd.com/javascripts/scribd_api.js"" type=""text/javascript""></script>
      <script async=""async"" src=""//platform.twitter.com/widgets.js""
              type=""text/javascript""></script>
      <script src=""//posthaven-assets.s3.amazonaws.com/assets/blog-4620ccbc91ba7475492d35c45326c4a7.js""
              type=""text/javascript""></script>
      <script type=""text/javascript"">
          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-38525690-2']);
          _gaq.push(['_setAllowLinker', true]);
          _gaq.push(['_trackPageview']);
        </script>
        <script>
          _gaq.push(['b._setAccount', 'UA-46706262-1']);
          _gaq.push(['b._trackPageview']);
        </script>
        <script>
          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') +
                    '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();
        </script>
  </body>
</html>
"
yurisagalov,69,11823251,113,1464881369,Amazon Alexa Comes to Pebble Core,story,https://blog.getpebble.com/2016/06/02/ks3u03/,"<!DOCTYPE html>
<!--[if IE 8]>
<html id=""ie8"" lang=""en-US"">
<![endif]-->
<!--[if !(IE 8) ]><!-->
<html lang=""en-US"">
<!--<![endif]-->
<head>
<meta charset=""UTF-8"" />
<meta name=""viewport"" content=""width=device-width, initial-scale=1"" />

    <style>

        @font-face{font-family:'PFD-Black';src:url(""/assets/PFDinDisplayPro-Black-14e583467c17de7cf1a45fa621186231.ttf"") format(""truetype"")}

        .font-black{font-family:PFD-Black,'Helvetica Neue', Helvetica, Arial, sans-serif;font-weight:normal;font-style:normal}
        @font-face{font-family:'PFD-Black-Light';src:url(""https://d3rrgxxoyz0alr.cloudfront.net/assets/PFDinDisplayPro-Blacklt.ttf"") format(""truetype"")}
        .font-black-light{font-family:PFD-Black-Light,'Helvetica Neue', Helvetica, Arial, sans-serif;font-weight:lighter;font-style:normal}
        @font-face{font-family:'PFD-Bold';src:url(""https://d3rrgxxoyz0alr.cloudfront.net/assets/assets/PFDinDisplayPro-Bold-34181ea1add55e3dd3fa3990b3a75290.ttf"") format(""truetype"")}

        .pebble-button {
            text-transform: uppercase;
            font-size: 18px;
            text-align: center;
            padding: .5em;
            background-color: #ff4700;
            color: white;
            white-space: nowrap;
            cursor: pointer;
            max-width: 100%;
            -webkit-border-radius: 5px;
            -moz-border-radius: 5px;
            border-radius: 5px;
            float: right;
            width: 160px;
            line-height: 1;
            margin: 24px 0px;
            height: 34px;
            font-weight: bold;

        }

        .navbar-inner-2 {
            min-height: 85px!important;
        }

        .navbar .brand{
            padding-top: 20px!important;
        }

        .new-background{
            background-image: url(https://blog.getpebble.com/wp-content/uploads/2013/10/run-1200-2b01b61df89bab9ccafcc8e3434e32d0.jpg);
            background-repeat: no-repeat;
            background-size: cover;
        }
        #footer-body .nav-links {
            list-style: none;
            text-align: center;
        }
        #footer-body .nav-links li {
            list-style: none;
            display: inline-block;
            margin: 0 10px;
        }

        #footer-body .nav-links li a{
           color: #FFFFFF;
        }

        #footer-body .copyright {
            color: #dbdbdb;
            margin: 25px 0;
        }

        #footer-body  {
            font-size: 20px;
            text-transform: uppercase;
            text-align: center;
            font-family: PFD-Regular, ""Helvetica Neue"", ""Helvetica"", Helvetica, Arial, sans-serif;
        }

    </style>
<title>Pebble  &#8211;  Now We’re Talking: Amazon Alexa Comes to Pebble Core</title><meta name=""description"" content=""Today, we’re proud to announce Amazon Alexa integration with Pebble Core, bringing Amazon’s acclaimed voice services to a fully-independent, 3G-connected wearable device for the first time ever. Pebble Core backers on Kickstarter will be the first to experience Amazon Alexa on Pebble’s infinitely hackable ultra-wearable when shipping begins in early 2017. “Experiencing Amazon Alexa on-the-go "" /><link rel=""profile"" href=""http://gmpg.org/xfn/11"" />
<link rel=""pingback"" href=""https://blog.getpebble.com/xmlrpc.php"" />
<!--[if lt IE 9]>
<script src=""https://blog.getpebble.com/wp-content/themes/keilir/assets/js/html5.js"" type=""text/javascript""></script>
<![endif]-->

<script>var _gaq = _gaq || [];
       _gaq.push(['_setAccount', 'UA-30638158-1']);
       _gaq.push(['_trackPageview']);

       (function() {
       var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
       ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
       var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
       })();

(function(d, s) {
  var js, fjs = d.getElementsByTagName(s)[0];
  js = d.createElement(s);
  js.src = ""//naytev.global.ssl.fastly.net/js/embed/5397b71ae4b0a68e2b7ee4e5.js"";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script'));



var _kmk = _kmk || '8b61f3f8c4c15a04f4146f7c5b88e3b0efa6a7c6';
function _kms(u){
  setTimeout(function(){
    var d = document, f = d.getElementsByTagName('script')[0],
    s = d.createElement('script');
    s.type = 'text/javascript'; s.async = true; s.src = u;
    f.parentNode.insertBefore(s, f);
  }, 1);
}
_kms('//i.kissmetrics.com/i.js');
_kms('//doug1izaerwt3.cloudfront.net/' + _kmk + '.1.js');
</script><script type=""text/javascript""> var fb_comments = false; window.locale = { email_input: ""Search..."", comment: ""Comment"", comments: ""Comments"", no_comments: ""No Comments"" } </script><link rel=""alternate"" type=""application/rss+xml"" title=""Pebble &raquo; Feed"" href=""https://blog.getpebble.com/feed/"" />
<link rel=""alternate"" type=""application/rss+xml"" title=""Pebble &raquo; Comments Feed"" href=""https://blog.getpebble.com/comments/feed/"" />
<link rel=""alternate"" type=""application/rss+xml"" title=""Pebble &raquo; Now We’re Talking: Amazon Alexa Comes to Pebble Core Comments Feed"" href=""https://blog.getpebble.com/2016/06/02/ks3u03/feed/"" />
		<script type=""text/javascript"">
			window._wpemojiSettings = {""baseUrl"":""https:\/\/s.w.org\/images\/core\/emoji\/72x72\/"",""ext"":"".png"",""source"":{""concatemoji"":""https:\/\/blog.getpebble.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.5.2""}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement(""canvas""),g=f.getContext&&f.getContext(""2d""),h=String.fromCharCode;if(!g||!g.fillText)return!1;switch(g.textBaseline=""top"",g.font=""600 32px Arial"",a){case""flag"":return g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3;case""diversity"":return g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,d=c[0]+"",""+c[1]+"",""+c[2]+"",""+c[3],g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+"",""+c[1]+"",""+c[2]+"",""+c[3],d!==e;case""simple"":return g.fillText(h(55357,56835),0,0),0!==g.getImageData(16,16,1,1).data[0];case""unicode8"":return g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement(""script"");c.src=a,c.type=""text/javascript"",b.getElementsByTagName(""head"")[0].appendChild(c)}var f,g,h,i;for(i=Array(""simple"",""flag"",""unicode8"",""diversity""),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],""flag""!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener(""DOMContentLoaded"",g,!1),a.addEventListener(""load"",g,!1)):(a.attachEvent(""onload"",g),b.attachEvent(""onreadystatechange"",function(){""complete""===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type=""text/css"">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='keilir-bootstrap-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/bootstrap.min.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-style-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/style.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-responsive-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/style-responsive.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-fontello-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/fontello.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-nivo-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/nivo-slider.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-magnific-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/magnific-popup.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-snippet-css'  href='https://blog.getpebble.com/wp-content/themes/keilir/assets/css/jquery.snippet.min.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='keilir-googlefonts-css'  href='https://fonts.googleapis.com/css?family=Crete+Round%3A400%2C400italic%7CLato%3A400%2C700%2C400italic%7CLato%3A400%2C700%2C400italic%7CLato%3A400%2C700%2C400italic&#038;ver=4.5.2' type='text/css' media='all' />
<script type='text/javascript' src='https://blog.getpebble.com/wp-includes/js/jquery/jquery.js?ver=1.12.3'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.0'></script>
<script type=""text/javascript"">
	window.analytics=window.analytics||[],window.analytics.methods=[""identify"",""group"",""track"",""page"",""pageview"",""alias"",""ready"",""on"",""once"",""off"",""trackLink"",""trackForm"",""trackClick"",""trackSubmit""],window.analytics.factory=function(t){return function(){var a=Array.prototype.slice.call(arguments);return a.unshift(t),window.analytics.push(a),window.analytics}};for(var i=0;i<window.analytics.methods.length;i++){var key=window.analytics.methods[i];window.analytics[key]=window.analytics.factory(key)}window.analytics.load=function(t){if(!document.getElementById(""analytics-js"")){var a=document.createElement(""script"");a.type=""text/javascript"",a.id=""analytics-js"",a.async=!0,a.src=(""https:""===document.location.protocol?""https://"":""http://"")+""cdn.segment.io/analytics.js/v1/""+t+""/analytics.min.js"";var n=document.getElementsByTagName(""script"")[0];n.parentNode.insertBefore(a,n)}},window.analytics.SNIPPET_VERSION=""2.0.9"";
		window.analytics.load(""9o4t68wg34"");
	window.analytics.page();
	</script><link rel='https://api.w.org/' href='https://blog.getpebble.com/wp-json/' />
<link rel=""EditURI"" type=""application/rsd+xml"" title=""RSD"" href=""https://blog.getpebble.com/xmlrpc.php?rsd"" />
<link rel=""wlwmanifest"" type=""application/wlwmanifest+xml"" href=""https://blog.getpebble.com/wp-includes/wlwmanifest.xml"" /> 
<link rel='prev' title='Off to a Running Start!' href='https://blog.getpebble.com/2016/05/27/ks3u02/' />
<link rel=""canonical"" href=""https://blog.getpebble.com/2016/06/02/ks3u03/"" />
<link rel='shortlink' href='https://blog.getpebble.com/?p=882' />
<link rel=""alternate"" type=""application/json+oembed"" href=""https://blog.getpebble.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F"" />
<link rel=""alternate"" type=""text/xml+oembed"" href=""https://blog.getpebble.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F&#038;format=xml"" />

<script type=""text/javascript"">var _sf_startpt=(new Date()).getTime()</script>

<style>
h1,h2,h3,h4,h5{font-family: ""Crete Round"",serif;} .widget_calendar table > caption{font-family: ""Crete Round"",serif;} body{font-family: ""Lato"",Helvetica,sans-serif;} .navbar .nav > li > a, .navbar .brand p{font-family: ""Lato"",Helvetica,sans-serif;} .navbar .brand-text{font-family: ""Lato"",Helvetica,sans-serif;} </style>
<link rel=""Shortcut Icon"" type=""image/x-icon"" href=""https://blog.getpebble.com/wp-content/uploads/2013/10/fav.png"" /><meta property=""og:image"" content=""https://blog.getpebble.com/wp-content/uploads/2016/06/00-Upload-PNG.png"" />	
			<meta property=""og:type"" content=""article"" />
			<meta property=""og:url"" content=""https://blog.getpebble.com/2016/06/02/ks3u03/"" />
			<meta property=""og:description"" content=""Today, we’re proud to announce Amazon Alexa integration with Pebble Core, bringing Amazon’s acclaimed voice services to a fully-independent, 3G-connected w"" /><meta property=""og:title"" content=""Pebble - Now We’re Talking: Amazon Alexa Comes to Pebble Core"" />	
			<meta property=""og:site_name"" content=""Pebble"" />
			<style type=""text/css"">
	.dropdown-menu > li > a:hover{ background: rgba(0,0,0,0.05); }body{ background: #f4f4f4; } header.entry-header{ background: #ff4700; } .dropdown-menu,header#masthead,.navbar-inverse .navbar-inner{ background: #ffffff; } div.navbar-inverse .nav-collapse .nav > li > a, .navbar-inverse .nav-collapse .dropdown-menu a{color:#ffffff!important; } .widget-head{ background: #ff4700; } .widget-head{color:#ffffff;} footer.site-footer{ background:#757575;} .post-format-standard{background-color: #F69087}.tab_standard{background-color:#F69087;}.format-standard .entry-content .post-meta ~ * a, .format-standard .entry-content .post-meta a:hover, .format-standard .entry-content .entry-title a:hover{color: #F69087;} #related-posts .box.related-standard{border-top: 3px solid #F69087;}.post-format-gallery{background-color: #4782A6}.tab_gallery{background-color:#4782A6;}.format-gallery .entry-content .post-meta ~ * a, .format-gallery .entry-content .post-meta a:hover, .format-gallery .entry-content .entry-title a:hover{color: #4782A6; }#related-posts .box.related-gallery{border-top: 3px solid #4782A6;}.post-format-image{background-color: #B0CB7A}.tab_image{background-color:#B0CB7A;}.format-image .entry-content .post-meta ~ * a, .format-image .entry-content .post-meta a:hover, .format-image .entry-content .entry-title a:hover{color: #B0CB7A;} #related-posts .box.related-image{border-top: 3px solid #B0CB7A;}.post-format-link{background-color: #9664B5}.tab_link{background-color:#9664B5;}.format-link .entry-content .post-meta ~ * a, .format-link .entry-content .post-meta a:hover, .format-link .entry-content .entry-title a:hover{color: #9664B5;} #related-posts .box.related-link{border-top: 3px solid #9664B5;}.post-format-quote{background-color: #85A9B3}.tab_quote{background-color:#85A9B3;}.format-quote .entry-content .post-meta ~ * a, .format-quote .entry-content .post-meta a:hover, .format-quote .entry-content .entry-title a:hover{color: #85A9B3;} #related-posts .box.related-quote{border-top: 3px solid #85A9B3;}.post-format-audio{background-color: #EF7336}.tab_audio{background-color:#EF7336;}.format-audio .entry-content .post-meta ~ * a, .format-audio .entry-content .post-meta a:hover, .format-audio .entry-content .entry-title a:hover{color: #EF7336;} #related-posts .box.related-audio{border-top: 3px solid #EF7336;}.post-format-video{background-color: #85CCB1}.tab_video{background-color:#85CCB1;}.format-video .entry-content .post-meta ~ * a, .format-video .entry-content .post-meta a:hover, .format-video .entry-content .entry-title a:hover{color: #85CCB1;} #related-posts .box.related-video{border-top: 3px solid #85CCB1;}.post-format-facebook{background-color: #49659F}.tab_facebook{background-color:#49659F;}.format-facebook .entry-content .post-meta ~ * a, .format-facebook .entry-content .post-meta a:hover, .format-facebook .entry-content .entry-title a:hover{color: #49659F;} #related-posts .box.related-facebook{border-top: 3px solid #49659F;}.post-format-twitter{background-color: #00ACED}.tab_twitter{background-color:#00ACED;}.format-twitter .entry-content .post-meta ~ * a, .format-twitter .entry-content .post-meta a:hover, .format-twitter .entry-content .entry-title a:hover{color: #00ACED;} #related-posts .box.related-twitter{border-top: 3px solid #00ACED;}.sticky .post-format-badge{background-color: #585756}.sticky .entry-content .post-meta ~ * a, .sticky .entry-content .post-meta a:hover, .sticky .entry-content .entry-title a:hover{color: #585756;}.top-color .first_col{background: #ff4700;}.top-color .second_col{background: #ff4700;}.top-color .third_col{background: #ff4700;}.top-color .fourth_col{background: #ff4700;}.entry-title{font-size: 38px;}.entry-content p{font-size: 18px;}body{font-size: 14px;}article.type-page .title{font-size: 38px;}.the-content, .the-content p{font-size: 18px;}</style>
</head>
<body class=""single single-post postid-882 single-format-standard"">

	<script type=""text/javascript"">

		jQuery(function(){
			if(jQuery('.above_header').length > 0){

				var height = jQuery('.above_header').height();
			}else{
				var height = 0;
			}
			jQuery('#masthead').affix({offset: height});
		});

	</script>
<div id=""page"" class=""site"">
		<header id=""masthead"" role=""banner"">
				<div class=""top-color clearfix"">
			<div class=""first_col""></div>
			<div class=""second_col""></div>
			<div class=""third_col""></div>
			<div class=""fourth_col""></div>
		</div>
				<div class=""container"">

			<div class=""navbar navbar-inverse"">
			  <div class=""navbar-inner navbar-inner-2"">
			    <!-- Responsive Navbar Part 1: Button for triggering responsive navbar (not covered in tutorial). Include responsive CSS to utilize. -->
<!--			    <button data-target="".nav-collapse"" data-toggle=""collapse"" class=""btn btn-navbar"" type=""button""><i class=""icon-menu-1""></i></button>
-->
                      <a href=""https://getpebble.com""><button class=""pebble-button pebble-button-small show-for-large-up"">Buy Now $99
                      </button></a>
<a href=""https://developer.getpebble.com/blog"" style=""
    float:  right;
    margin: 20px;
    padding: 0.5em;
    font-size: 18px;
    height:  34px;
    color: #ff4700;
"">Developer Blog</a>

                  <a class=""brand"" href=""https://getpebble.com"" title=""Pebble"" rel=""home""><img src=""https://blog.getpebble.com/wp-content/uploads/2013/10/pebble-logo-f784ab7001ad6f3e31f2380563f7d3ba.png"" alt=""Pebble""></a>


													  </div><!-- /.navbar-inner -->
			</div>

		</div>
	</header><!-- #masthead .site-header -->
	<div id=""main"" class=""container"">
	<div id=""primary"" class=""row"">

			

		<div id=""content"" class=""span9"" role=""main"">

			
				
					<article id=""post-882"" class=""post-882 post type-post status-publish format-standard hentry category-kickstarter-update tag-amazon-alexa tag-kickstarter tag-news-2 tag-partners tag-pebble tag-pebble-2 tag-pebble-core tag-time-2"">

					<header class=""entry-header"">
								<div class=""post-format-badge post-format-badge-icons post-format-standard"">
		<i class=""icon-calendar-3""></i>
	</div>
						</header><!-- .entry-header -->
			<div class=""entry-container"">
			<div class=""entry-content"">
			<h1 class=""entry-title""><a href=""https://blog.getpebble.com/2016/06/02/ks3u03/"">Now We’re Talking: Amazon Alexa Comes to Pebble Core</a></h1>
			<div class=""post-meta"">
				<ul>
	<li><i class=""icon-clock-1""></i> <time class=""entry-date"" datetime=""2016-06-02T06:55:40+00:00"">June 2, 2016</time></li>
	<li><i class=""icon-folder-1""></i> <a href=""https://blog.getpebble.com/category/kickstarter-update/"" title=""View all posts in Kickstarter Update"">Kickstarter Update</a> </li>	<li><i class=""icon-comment-1""></i> <a class=""comment_count"" data-post=""882"" href=""https://blog.getpebble.com/2016/06/02/ks3u03/#comments"">No Comments</a></li>
	<li><i class=""icon-tag-1""></i> <a href=""https://blog.getpebble.com/tag/amazon-alexa/"" rel=""tag"">amazon alexa</a>, <a href=""https://blog.getpebble.com/tag/kickstarter/"" rel=""tag"">kickstarter</a>, <a href=""https://blog.getpebble.com/tag/news-2/"" rel=""tag"">news</a>, <a href=""https://blog.getpebble.com/tag/partners/"" rel=""tag"">partners</a>, <a href=""https://blog.getpebble.com/tag/pebble/"" rel=""tag"">Pebble</a>, <a href=""https://blog.getpebble.com/tag/pebble-2/"" rel=""tag"">pebble 2</a>, <a href=""https://blog.getpebble.com/tag/pebble-core/"" rel=""tag"">pebble core</a>, <a href=""https://blog.getpebble.com/tag/time-2/"" rel=""tag"">time 2</a></li></ul>
			</div>
			<p>Today, we’re proud to announce Amazon Alexa integration with Pebble Core, bringing Amazon’s acclaimed voice services to a fully-independent, 3G-connected wearable device for the first time ever. <a href=""http://pbl.io/ks3"" target=""_blank"">Pebble Core backers on Kickstarter</a> will be the first to experience Amazon Alexa on Pebble’s infinitely hackable ultra-wearable when shipping begins in early 2017.</p>
<p><a class=""lightbox"" href=""http://pbl.io/ks3""><img class=""aligncenter size-full wp-image-884"" src=""https://blog.getpebble.com/wp-content/uploads/2016/06/00-Upload-PNG.png"" alt=""Pebble + Alexa"" width=""679"" height=""126"" srcset=""https://blog.getpebble.com/wp-content/uploads/2016/06/00-Upload-PNG.png 679w, https://blog.getpebble.com/wp-content/uploads/2016/06/00-Upload-PNG-300x56.png 300w"" sizes=""(max-width: 679px) 100vw, 679px"" /></a></p>
<p><span id=""more-882""></span></p>
<p>“Experiencing Amazon Alexa on-the-go right from Pebble Core is game-changing for wearable technology,” said Pebble CEO Eric Migicovsky. “We’re longtime fans of the powerful voice services Alexa delivers, and it only gets smarter and more useful over time. It’s an approach we embrace with our own products.”</p>
<p>Alexa-enabled devices feature an ever-growing arsenal of delightful, voice-powered capabilities. With Amazon Alexa, Pebble Core can:</p>
<ul>
<li>Play songs, artists, and playlists from Amazon Prime Music, iHeartRadio, and more.</li>
<li>Brief you with news headlines from <em>USA Today</em>, <em>The Washington Post</em>, or <em>The Huffington Post</em>.</li>
<li>Review your Pebble Health summary for the day, like heart rate, step count, and calories burned.</li>
<li>Order pizzas for the gang on game day.</li>
<li>Shop for gifts and necessities on Amazon.</li>
<li>Get weather and traffic updates.</li>
<li>Set a timer for a set of side planks.</li>
<li>Control smart home devices like lights, thermostats, locks, and more.</li>
<li>Tell you a joke.</li>
<li>Answer almost any question you can think of—from the nutritional information of certain foods to movie facts on IMDB.</li>
</ul>
<p>“The integration of Amazon Alexa into Pebble Core is exciting to see,” said Steve Rabuchin, Vice President, Amazon Alexa. “By making Alexa Voice Services available for free to device makers and developers, we knew there would be no limit to the innovative uses.”</p>
<p>Alexa Voice Services integration with Pebble Core is a prime example of what’s possible with an open platform like the Pebble ecosystem. As Alexa develops new skills, Pebble Core will as well.</p>
<p>Pebble Core ($69 and up) is <a href=""http://pbl.io/ks3"" target=""_blank"">currently available on Kickstarter</a> and starts shipping in early 2017.</p>
					</div><!-- .entry-content -->

	</div><!-- .entry-container -->
		<footer class=""entry-meta clearfix"">
		<div class=""up_arrow""></div>
<div class=""pull-left author-meta"">
	<img alt='' src='https://secure.gravatar.com/avatar/327890f00c57ff5851af66818d4c3133?s=55&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/327890f00c57ff5851af66818d4c3133?s=110&amp;d=mm&amp;r=g 2x' class='avatar avatar-55 photo' height='55' width='55' />	<h4 class=""bl_popover""  data-placement=""top"" data-trigger=""hover"" data-title=""Joseph"" data-content=""Pebble's Community Manager 'n' stuff."">
		<a href=""https://blog.getpebble.com/author/jisforjoe/"">Joseph</a>
	</h4>
</div>
<div class=""pull-right share-story-container"">
	<small class=""muted pull-left"">Share story</small>
	<ul class=""share-story"">
		<li><a class=""tips"" data-title=""Facebook"" href=""javascript:void(0);"" onClick=""social_share('http://www.facebook.com/sharer.php?u=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F&t=Now+We%E2%80%99re+Talking%3A+Amazon+Alexa+Comes+to+Pebble+Core');""><i class=""icon-facebook-1""></i></a></li>		<li><a class=""tips"" data-title=""Google+"" href=""javascript:void(0);"" onClick=""social_share('https://plus.google.com/share?url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F');""><i class=""icon-gplus-1""></i></a></li>		<li><a class=""tips"" data-title=""Twitter"" href=""javascript:void(0);"" onClick=""social_share('http://twitter.com/intent/tweet?url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F');""><i class=""icon-twitter-1""></i></a></li>		<li><a class=""tips"" data-title=""Reddit"" href=""javascript:void(0);"" onClick=""social_share('http://www.reddit.com/submit?url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F&amp;title=Now+We%E2%80%99re+Talking%3A+Amazon+Alexa+Comes+to+Pebble+Core');""><i class=""icon-reddit""></i></a></li>		<li><a class=""tips"" data-title=""Linkedin"" href=""javascript:void(0);"" onClick=""social_share('http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F&title=Now+We%E2%80%99re+Talking%3A+Amazon+Alexa+Comes+to+Pebble+Core');""><i class=""icon-linkedin-1""></i></a></li>		<li><a class=""tips"" data-title=""Delicious"" href=""javascript:void(0);"" onClick=""social_share('http://www.delicious.com/post?v=2&amp;url=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F&amp;notes=&amp;tags=&amp;title=Now+We%E2%80%99re+Talking%3A+Amazon+Alexa+Comes+to+Pebble+Core');""><i class=""icon-delicious""></i></a></li>		<li><a class=""tips"" data-title=""Email"" href=""javascript:void(0);"" onClick=""social_share('mailto:?subject=Now+We%E2%80%99re+Talking%3A+Amazon+Alexa+Comes+to+Pebble+Core&amp;body=https%3A%2F%2Fblog.getpebble.com%2F2016%2F06%2F02%2Fks3u03%2F');""><i class=""icon-mail-1""></i></a></li>	</ul>
</div>
	</footer><!-- .entry-meta -->
	</article><!-- #post-882 -->




					<div class=""single-pagination box clearfix"">
						<span class=""nav-previous"" style=""float:left;"">
							<a href=""https://blog.getpebble.com/2016/05/27/ks3u02/"" rel=""prev""><span><i class=""icon-left-open""></i>Older</span><br/><div class=""post-title hidden-tablet hidden-phone"">Off to a Running Start!</div></a></span>
						<span class=""nav-next"" style=""float:right;"">
							</span>
					</div>

					<div id=""related-posts"" class=""row-fluid""><div class=""span3 box related-standard""><div class=""related-header""><a class=""related-image"" href=""https://blog.getpebble.com/2016/05/27/ks3u02/"" rel=""bookmark""><img width=""194"" height=""150"" src=""https://blog.getpebble.com/wp-content/uploads/2016/05/00-Upload-JPG03-194x150.jpg"" class=""attachment-small size-small"" alt=""Pebble on Kickstarter"" /></a></div><div class=""related-content""><h4><a href=""https://blog.getpebble.com/2016/05/27/ks3u02/"" rel=""bookmark"" title=""Off to a Running Start!"">Off to a Running Start!</a></h4>	    </div>
	    <div class=""related-footer"">
		    <i class=""icon-clock""></i>&nbsp;May 27, 2016	    </div>
	</div>
    <div class=""span3 box related-standard""><div class=""related-header""><a class=""related-image"" href=""https://blog.getpebble.com/2016/05/24/ks3u01/"" rel=""bookmark""><img width=""194"" height=""150"" src=""https://blog.getpebble.com/wp-content/uploads/2016/05/00-Upload-JPG03-1-194x150.jpg"" class=""attachment-small size-small"" alt=""Pebble on Kickstarter"" /></a></div><div class=""related-content""><h4><a href=""https://blog.getpebble.com/2016/05/24/ks3u01/"" rel=""bookmark"" title=""Make Wearables Great Again!"">Make Wearables Great Again!</a></h4>	    </div>
	    <div class=""related-footer"">
		    <i class=""icon-clock""></i>&nbsp;May 24, 2016	    </div>
	</div>
    <div class=""span3 box related-standard""><div class=""related-header""><a class=""related-image"" href=""https://blog.getpebble.com/2016/05/24/itson/"" rel=""bookmark""><img width=""194"" height=""150"" src=""https://blog.getpebble.com/wp-content/uploads/2016/05/Core_Solo_White-194x150.jpg"" class=""attachment-small size-small"" alt=""Pebble Core"" /></a></div><div class=""related-content""><h4><a href=""https://blog.getpebble.com/2016/05/24/itson/"" rel=""bookmark"" title=""It’s On: Bring Three New Pebbles to Life on Kickstarter"">It’s On: Bring Three New Pebbles to Life on Kickstarter</a></h4>	    </div>
	    <div class=""related-footer"">
		    <i class=""icon-clock""></i>&nbsp;May 24, 2016	    </div>
	</div>
    <div class=""span3 box related-standard""><div class=""related-content""><h4><a href=""https://blog.getpebble.com/2015/06/05/ptwioslive/"" rel=""bookmark"" title=""Thank you, Pebblers: Pebble Time Watch for iPhone Is Live"">Thank you, Pebblers: Pebble Time Watch for iPhone Is Live</a></h4><p>We’re delighted to report Pebble Time Watch for iPhone is live on the iTunes AppStore. It normally takes a few hours for ITunes app updates to be visible to all users around the world, so hang tight if the new apps don’t show up for you immediately. A...</p>	    </div>
	    <div class=""related-footer"">
		    <i class=""icon-clock""></i>&nbsp;Jun 5, 2015	    </div>
	</div>
    </div> 
		</div><!-- #content .site-content -->
				<aside id=""side-bar"" class=""span3"">
				<div id=""bl_newsletter-2"" class=""box bl_newsletter"">	<h3 class=""widget-head"">Subscribe to Pebble's Blog</h3>	<div class=""widget-body"">
	<p>Enter your email address below to subscribe to our blog.</p>	<div class=""input-append"">
	    <input class=""bl_newsletter_email"" type=""text"" placeholder=""Email address"">
	    <button class=""btn btn-primary"" type=""button"">Subscribe!</button>
	</div>
	</div>
    <script type=""text/javascript"">
		locale.no_email_provided = 'No email provided!';
		locale.thank_you_for_subscribing = 'Thank you for subscribing!';
    </script>
    </div><div id=""bl_socialbox-2"" class=""box bl_socialbox"">  		<h3 class=""widget-head"">Social </h3>    	<div class=""widget-body"">
    		<ul class=""clearfix"">
	    	<li><a target=""_blank"" data-title=""Facebook"" class=""tips bl_icon_facebook"" href=""http://www.facebook.com/getpebble""><i class=""icon-facebook-1""></i></a></li>	    	<li><a target=""_blank"" data-title=""Twitter"" class=""tips bl_icon_twitter"" href=""http://www.twitter.com/pebble""><i class=""icon-twitter-1""></i></a></li>	    	<li><a target=""_blank"" data-title=""Google+"" class=""tips bl_icon_googleplus"" href=""https://plus.google.com/communities/107514911291112922264""><i class=""icon-gplus-1""></i></a></li>	    		    		    		    		    	<li><a target=""_blank"" data-title=""Vimeo"" class=""tips bl_icon_vimeo"" href=""http://vimeo.com/pebble""><i class=""icon-vimeo-rect""></i></a></li>	    	<li><a target=""_blank"" data-title=""Pinterest"" class=""tips bl_icon_pinterest"" href=""http://www.pinterest.com/getpebble/""><i class=""icon-pinterest-circled-1""></i></a></li>	    		    		    	<li><a target=""_blank"" data-title=""Instagram"" class=""tips bl_icon_instagram"" href=""http://instagram.com/getpebble/""><i class=""icon-instagram-filled""></i></a></li>	    	    		</ul>
    	</div>
    </div><div id=""bl_tweets-2"" class=""box bl_tweets"">      <h3 class=""widget-head""><i class=""icon-twitter-1""></i> Twitter</h3>      <div class=""widget-body"" id=""tweets"">
        <a class=""twitter-timeline"" href=""https://twitter.com/Pebble"" data-widget-id=""387646224943157249"">Tweets by @Pebble</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+""://platform.twitter.com/widgets.js"";fjs.parentNode.insertBefore(js,fjs);}}(document,""script"",""twitter-wjs"");</script>      </div>
    </div><div id=""bl_likebox-2"" class=""box bl_likebox"">      <h3 class=""widget-head""><i class=""icon-facebook-1""></i> Facebook</h3>      <div class=""widget-body"" id=""bl_likebox"">
        <iframe src=""https://www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fgetpebble&amp;width=270&amp;height=590&amp;show_faces=true&amp;colorscheme=light&amp;stream=true&amp;show_border=false&amp;header=false"" scrolling=""no"" frameborder=""0"" style=""border:none; overflow:hidden; width:100%; height:590px;"" allowTransparency=""true""></iframe>
      </div>
    </div><div id=""bl_instagram-2"" class=""box bl_instagram"">	  <h3 class=""widget-head""><i class=""icon-instagram-filled""></i> Instagram </h3>      <div class=""widget-body"">
	    						<ul class=""instagram-header"">	
							<li>
								<small class=""muted"">Followers</small>
								<p></p>
							</li>	
							<li>
								<small class=""muted"">Following</small>
								<p></p>
							</li>	
							<li>
								<small class=""muted"">Images</small>
								<p></p>
							</li>
						</ul>	
						<div class=""instagram-images-container"">
						<ul class=""instagram-images clearfix"">
												</ul>
						</div>
						<ul class=""instagram-interactions"">
							<li class=""instagram-comments""><i class=""icon-comment-1""></i> <span></span></li>
							<li class=""instagram-likes""><i class=""icon-heart-1""></i> <span></span></li>
						</ul>
						<div class=""instagram_link visible-desktop""><a href="""" target=""_blank""><i class=""icon-link""></i></a></div>
						<div class=""left_arrow instagram_arrow visible-desktop""><i class=""icon-left-open-1""></i></div>
						<div class=""right_arrow instagram_arrow visible-desktop""><i class=""icon-right-open-1""></i></div>
									      </div>
            <script type=""text/javascript"">
      		var instagram_array = {},
      		total_images = 0,
      		li_width = jQuery('.instagram-images > li').first().width(),
      		li_index = 1;

      		jQuery('.instagram_arrow').click(function(){

      			if(jQuery(this).hasClass('left_arrow') && li_index > 1){

	      				jQuery('.instagram-images').animate({left: '+='+li_width}, 150, 'swing');
	      				li_index--;

	      				jQuery('.instagram-interactions .instagram-comments span').fadeOut('fast', function(){
	      					jQuery(this).text(instagram_array['image_'+li_index].comments).fadeIn('fast');
	      				});

	      				jQuery('.instagram-interactions .instagram-likes span').fadeOut('fast', function(){
	      					jQuery(this).text(instagram_array['image_'+li_index].likes).fadeIn('fast');
	      				});
	      				jQuery('.instagram_link a').attr('href', instagram_array['image_'+li_index].link)

      			}else if(jQuery(this).hasClass('right_arrow') && li_index < total_images){

	      				jQuery('.instagram-images').animate({left: '-='+li_width}, 150, 'swing');
	      				li_index++;

	      				jQuery('.instagram-interactions .instagram-comments span').fadeOut('fast', function(){
	      					jQuery(this).text(instagram_array['image_'+li_index].comments).fadeIn('fast');
	      				});
	      				jQuery('.instagram-interactions .instagram-likes span').fadeOut('fast', function(){
	      					jQuery(this).text(instagram_array['image_'+li_index].likes).fadeIn('fast');
	      				});
	      				jQuery('.instagram_link a').attr('href', instagram_array['image_'+li_index].link)
      			}
      		});
      </script>
    </div><div id=""bl_html-2"" class=""box box bl_html""><h3 class=""widget-head"">Reddit</h3>			<div class=""widget-body""><script src=""https://www.reddit.com/r/pebble/hot/.embed?limit=5&t=week"" type=""text/javascript""></script></div>
		</div>		</aside>
				
	</div><!-- #primary .content-area -->
	</div><!-- #main .site-main -->
	<footer id=""colophon"" class=""site-footer light_theme"" role=""contentinfo"">
				<div class=""container"">
						<div class=""row-fluid"" id=""footer-body"">
				
                <div class=""row"">
                    <ul class=""nav-links"">
                        <li class=""support-link""><a href=""https://getpebble.com/support"">Support</a></li>
                        <li><a href=""https://getpebble.com/legal"">Legal</a></li>
                        <li><a href=""https://getpebble.com/jobs"">Jobs</a></li>
                        <li><a href=""https://getpebble.com/blog"">Blog</a></li>
                        <li><a href=""https://getpebble.com/warranty"">Warranty</a></li>
                    </ul>

                    <div class=""copyright"">
                        © Copyright 2015 Pebble. All rights reserved.
                    </div>
                </div>

			</div>
					</div><!-- .site-info -->
			</footer><!-- #colophon .site-footer -->
</div><!-- #page -->
 <script type=""text/javascript"">
  analytics.track(""Viewed Post"", {""title"":""Now We\u2019re Talking: Amazon Alexa Comes to Pebble Core"",""category"":""#TinyMomentsOfAwesome, Behind the Scenes, Community, Development, Hardware, Kickstarter Update, Lifestyle, News, Software"",""noninteraction"":true}, {""library"":""analytics-wordpress""});
    
</script>

		<!-- /// LOAD CHARTBEAT /// -->
		<script type=""text/javascript"">
		var _sf_async_config={};
		_sf_async_config.uid = 69419;
		_sf_async_config.useCanonical = true;
		
		(function(){
		  function loadChartbeat() {
			window._sf_endpt=(new Date()).getTime();
			var e = document.createElement('script');
			e.setAttribute('language', 'javascript');
			e.setAttribute('type', 'text/javascript');
			e.setAttribute('src',
			   ((""https:"" == document.location.protocol) ? ""https://"" : ""http://"") +
			   ""static.chartbeat.com/js/chartbeat.js"");
			document.body.appendChild(e);
		  }
		  var oldonload = window.onload;
		  window.onload = (typeof window.onload != 'function') ?
			 loadChartbeat : function() { try { oldonload(); } catch (e) { loadChartbeat(); throw e} loadChartbeat(); };
		})();
		</script>
		<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/mailchimp.js?ver=1.8'></script>
<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/jquery.snippet.min.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/jquery.nivo.slider.pack.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/jquery.timeago.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/bootstrap.min.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/jquery.magnific-popup.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-content/themes/keilir/assets/js/theme.min.js?ver=1.8'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-includes/js/comment-reply.min.js?ver=4.5.2'></script>
<script type='text/javascript' src='https://blog.getpebble.com/wp-includes/js/wp-embed.min.js?ver=4.5.2'></script>
</body>
</html>"
stvnchn,36,11824428,56,1464888902,Women Who Code (YC S16) helps female engineers level up in their careers,story,http://themacro.com/articles/2016/06/women-who-code/,"<!DOCTYPE html> <html lang=en> <head> <title>Meet Women Who Code · The Macro</title> <meta charset=utf-8 /> <meta content=""index,follow"" name=robots /> <meta content=""IE=edge;chrome=1"" http-equiv=X-UA-Compatible /> <meta content=""initial-scale=1, width=device-width, height=device-height"" name=viewport /> <link href=""/humans.txt"" rel=author /> <link href=""/favicon.ico"" rel=""shortcut icon"" type=""image/x-icon""/> <link href=""http://www.themacro.com/articles/2016/06/women-who-code/"" rel=canonical /> <link rel=alternate type=""application/atom+xml"" title=""The Macro"" href=""/feed.xml""/><link href=""//cdn.themacro.com/../../../../css/all-7795d31f.css"" rel=stylesheet /><script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      
      ga('create', 'UA-70333309-1', 'auto');
      ga('require', 'linkid');
      ga('send', 'pageview');
    </script><!--[if lt IE 9]><script src=""//html5shim.googlecode.com/svn/trunk/html5.js""></script><![endif]--> </head> <body class=""nojs article ""> <div class=""content clearfix""> <header class=site> <nav> <div class=macrologo> <a href=""/"" title=""The Macro""><img alt=""The Macro"" src=""/images/macro-logo-d2397784.png""/></a> </div> <ul class=links> <li> <a class=about href=""/about/"">About</a> </li> <li> <a class=colophon href=""/colophon/"">Colophon</a> </li> <li> <a class=submit href=""mailto:macro@ycombinator.com"">Contact</a> </li> </ul> <ul class=""links follow""> <li> <a class=subscribe href=""https://confirmsubscription.com/h/t/5FAD2A339EADB1C2"" target=_blank>Subscribe</a> </li> <li class=rss> <a class=feed href=""/feed.xml"">Feed</a> </li> </ul> </nav> </header> <section class=""main g5 meet, s16""> <div class=""header article feature""> <div class=date> Thu · Jun 2 </div> <h1> Meet Women Who Code </h1> <div class=byline> Meet the Batch (S16) </div> </div> <article class=hyphenate> <aside class=blurb> <p><strong>Batch:</strong> S16</p> <p><strong>Category:</strong> <br> Nonprofit</p> <p><strong>Availability:</strong> <br> 60+ cities across 20 different countries</p> <p><strong>Website:</strong> <br> <a href=""http://womenwhocode.com"">http://www.womenwhocode.com</a></p> <p><strong>Founders:</strong> <br> Alaina Percival, Zassmin Montes de Oca</p> </aside> <figure> <img alt="""" src=""/images/meet/S16/wwc-7fa251eb.jpg""/> </figure> <h2>Women Who Code helps female engineers level up in their careers</h2> <p>The WWCode community is 50,000+ strong and includes members from 20 countries.</p> <h4>What it is</h4> <p>Women Who Code is an international 501c3 non-profit organization that works to empower career-aged women to excel in their technology careers. </p> <p>Their goal is to help female engineers achieve professional success, while inspiring them to be and become role models and heroes in the industry. </p> <p>To date they have over 50,000 members in 20 countries around the world, which host over 3,000 free technical events each year.</p> <h4>The problem</h4> <p>In 2014, 26% of computing jobs were held by women -- and that’s down from 36% in 1991. These numbers reflect two problems: 1) the percentage of women who work in tech is low, and 2) women are leaving tech jobs in droves. </p> <p>In that past few years, a number of developer schools and organizations have risen in an attempt to funnel more women into software engineering careers. But that only addresses one side of the issue. </p> <p>The other issue is a leaky bucket problem. Women who are halfway into their careers in tech are leaving at a rate of <a href=""https://www.ncwit.org/resources/women-it-facts-infographic-2015-update"">56%</a>, which is more than double the quit rate of men. One reason for the high quit rate may be that <a href=""http://thinkprogress.org/economy/2014/12/22/3606282/women-promotions/"">women have a much lower chance of being promoted</a>, even when they have the same amount of experience and tenure as their male peers, according to the National Bureau of Economic Research. </p> <p>This not only directly affects the number of women in tech, it also means that female engineers just starting out have fewer and fewer role models. With a lack of support for the next wave of talent, the cycle continues to repeat itself. In 2012, only <a href=""https://www.ncwit.org/blog/did-you-know-demographics-technical-women"">19% of CIO positions</a> at Fortune 250 companies were held by women. </p> <h4>How Women Who Code works</h4> <p>Women Who Code connects female engineers to peers through local “Network locations” which host technical events, learning programs, and leadership opportunities. They also distribute a weekly publication called the CODE Review that highlights the success of women in tech and showcases them as role models. </p> <p>One thing that particularly excited us about WWCode is that they now have proof points that show that what they’re doing is working. </p> <p>Women Who Code’s leadership has been documenting their members’ successes, and many members attribute those successes to their involvement with WWCode. For example, one WWCode Director’s salary increased by 200% within one year at her job as a front-end engineer.</p> <p>One member, Erica Stanley, had a Masters in Computer Science but felt held back because she wasn’t confident in her skills as a public speaker. WWCode presented her with the opportunity to step up and lead WWCode Atlanta’s programs, including technical events and hackathons. This got Erica comfortable speaking publicly and in just a year after taking on a WWCode leadership position, Stanley had given 3 technical talks at conferences to standing room only audiences. </p> <p>Stanley is just one of the stories in the <em>CODE Review</em>. Along with these stories are weekly announcements for conference tickets and scholarships. In 2015, Women Who Code awarded over $276,000 in tech conference tickets and $249,000 in coding school scholarships. </p> <h4>Why now?</h4> <p>In addition to the <a href=""http://www.usatoday.com/story/tech/columnist/2015/07/21/why-diversity-matters-your-tech-company/30419871/"">widely reported</a> benefits of diversity in the workplace, the tech industry is missing out on millions of dollars in revenue and profit every year because of the female engineer attrition rate. With each female engineer that leaves, the industry takes a $300k loss. </p> <h4>Where it&#39;s going?</h4> <p>Women Who Code has built a robust, engaged, international community that hosts thousands of technical events every year. They are now working on technology that will allow their members to receive custom content, and connect with each other before the start of conferences and events. Their long term plan is to build internal groups at large companies in order to help those organizations identify, promote and retain talented female engineers. </p> <h4>What YC likes about Women Who Code</h4> <blockquote> <p>“We love Women Who Code’s focus on helping technical women stay in tech and advance in their careers. We were very impressed with both how quickly they’re growing (from 25k-50k members in a year) and the success stories they’ve had so far. We hope to help WWCode scale the most impactful parts of their program so they can create more female role models in tech and empower even more people around the world.&quot;<br> - <strong>Jessican Livingston, Founder, Y Combinator</strong></p> </blockquote> <h4>About the founders:</h4> <p>Women Who Code was established as a non-profit by Alaina Percival and Zassmin Montes de Oca. </p> <p>Alaina Percival, 36, is the CEO of Women Who Code. Prior to WWCode, Alaina worked at PUMA&#39;s headquarters in Germany, as well as Riviera Partners and Snip.it, which was acquired by Yahoo. Alaina is also an advisor at CodePath.</p> <p>Zassmin Montes de Oca, 27, is the Chief Maker and Board Vice Chair of Women Who Code. She first joined WWCode to learn how to code and quickly built her skills and rose up in the organization. After landing her first internship, Zassmin worked at Lumos Labs as a software engineer.</p> </article> </section> </div> <footer class=""site clearfix""> <div class=yclogo> <a href=""http://www.ycombinator.com"" title=""Y Combinator""><img alt=""Y Combinator"" src=""/images/ycombinator-logo-fb889e2e.png""/> <div class=yc> Y Combinator </div> </a> </div> <div class=""links follow hide""> <a class=twitter href=""https://twitter.com/YCMacro"">Twitter</a><a class=facebook href=""https://www.facebook.com/ycmacro/"">Facebook</a><a class=pinterest href=""https://www.pinterest.com/ycmacro/"">Pinterest</a> </div> </footer> <div id=overlay></div> <script src=""//cdn.themacro.com/../../../../js/lib-c887ab93.js""></script><script src=""//cdn.themacro.com/../../../../js/all-3720675d.js"" async=true></script> </body> </html>"
ifelsehow,162,11824164,180,1464887167,Test your “free will” at the Aaronson Oracle,story,http://people.ischool.berkeley.edu/~nick/aaronson-oracle/index.html,"<!doctype html>
<style>
#avg {
  font-size: 4em;
}
</style>
<body>
  <script>(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==""function""&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(""Cannot find module '""+o+""'"");throw f.code=""MODULE_NOT_FOUND"",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==""function""&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict'

exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

function init () {
  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i]
    revLookup[code.charCodeAt(i)] = i
  }

  revLookup['-'.charCodeAt(0)] = 62
  revLookup['_'.charCodeAt(0)] = 63
}

init()

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0

  // base64 is 4/3 + up to two characters of the original data
  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],2:[function(require,module,exports){

},{}],3:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.foo = function () { return 42 }
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    this.length = 0
    this.parent = undefined
  }

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined') {
    if (object.buffer instanceof ArrayBuffer) {
      return fromTypedArray(that, object)
    }
    if (object instanceof ArrayBuffer) {
      return fromArrayBuffer(that, object)
    }
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(array)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromTypedArray(that, new Uint8Array(array))
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
} else {
  // pre-set for values that may exist in the future
  Buffer.prototype.length = undefined
  Buffer.prototype.parent = undefined
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid ""call stack size exceeded"".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; i--) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

}).call(this,typeof global !== ""undefined"" ? global : typeof self !== ""undefined"" ? self : typeof window !== ""undefined"" ? window : {})
},{""base64-js"":1,""ieee754"":7,""isarray"":4}],4:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],5:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{""isBuffer"":require(""../../is-buffer/index.js"")})
},{""../../is-buffer/index.js"":9}],6:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified ""error"" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === ""newListener""! Before
  // adding it to the listeners, first emit ""newListener"".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],7:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],8:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],9:[function(require,module,exports){
/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */

module.exports = function (obj) {
  return !!(obj != null &&
    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
      (obj.constructor &&
      typeof obj.constructor.isBuffer === 'function' &&
      obj.constructor.isBuffer(obj))
    ))
}

},{}],10:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn) {
  var args = new Array(arguments.length - 1);
  var i = 0;
  while (i < args.length) {
    args[i++] = arguments[i];
  }
  process.nextTick(function afterTick() {
    fn.apply(null, args);
  });
}

}).call(this,require('_process'))
},{""_process"":11}],11:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],12:[function(require,module,exports){
module.exports = require(""./lib/_stream_duplex.js"")

},{""./lib/_stream_duplex.js"":13}],13:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{""./_stream_readable"":15,""./_stream_writable"":17,""core-util-is"":5,""inherits"":8,""process-nextick-args"":10}],14:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{""./_stream_transform"":16,""core-util-is"":5,""inherits"":8}],15:[function(require,module,exports){
(function (process){
'use strict';

module.exports = Readable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events');

/*<replacement>*/
var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = undefined;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

var Duplex;
function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means ""don't call _read preemptively ever""
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until ""later"" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

var Duplex;
function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended) return 0;

  if (state.objectMode) return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length) return state.buffer[0].length;else return state.length;
  }

  if (n <= 0) return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else {
      return state.length;
    }
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading) n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended) state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0) endReadable(this);

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, ""length"" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      if (state.pipesCount === 1 && state.pipes[0] === dest && src.listenerCount('data') === 1 && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error) dest.on('error', onerror);else if (isArray(dest._events.error)) dest._events.error.unshift(onerror);else dest._events.error = [onerror, dest._events.error];

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var _i = 0; _i < len; _i++) {
      dests[_i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1) return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && !this._readableState.endEmitted) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function (ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0) return null;

  if (length === 0) ret = null;else if (objectMode) ret = list.shift();else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode) ret = list.join('');else if (list.length === 1) ret = list[0];else ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode) ret = '';else ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode) ret += buf.slice(0, cpy);else buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length) list[0] = buf.slice(cpy);else list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'))
},{""./_stream_duplex"":13,""_process"":11,""buffer"":3,""core-util-is"":5,""events"":6,""inherits"":8,""isarray"":18,""process-nextick-args"":10,""string_decoder/"":24,""util"":2}],16:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a ""filter"",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er) {
      done(stream, er);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er) {
  if (er) return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('calling transform done when still transforming');

  return stream.push(null);
}
},{""./_stream_duplex"":13,""core-util-is"":5,""inherits"":8}],17:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

var Duplex;
function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until ""later"" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // create the two objects needed to store the corked requests
  // they are not a linked list, as no new elements are inserted in there
  this.corkedRequestsFree = new CorkedRequest(this);
  this.corkedRequestsFree.next = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function writableStateGetBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

var Duplex;
function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;

  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
        afterWrite(stream, state, finished, cb);
      }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    state.corkedRequestsFree = holder.next;
    holder.next = null;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}
}).call(this,require('_process'))
},{""./_stream_duplex"":13,""_process"":11,""buffer"":3,""core-util-is"":5,""events"":6,""inherits"":8,""process-nextick-args"":10,""util-deprecate"":25}],18:[function(require,module,exports){
arguments[4][4][0].apply(exports,arguments)
},{""dup"":4}],19:[function(require,module,exports){
module.exports = require(""./lib/_stream_passthrough.js"")

},{""./lib/_stream_passthrough.js"":14}],20:[function(require,module,exports){
var Stream = (function (){
  try {
    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
  } catch(_){}
}());
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{""./lib/_stream_duplex.js"":13,""./lib/_stream_passthrough.js"":14,""./lib/_stream_readable.js"":15,""./lib/_stream_transform.js"":16,""./lib/_stream_writable.js"":17}],21:[function(require,module,exports){
module.exports = require(""./lib/_stream_transform.js"")

},{""./lib/_stream_transform.js"":16}],22:[function(require,module,exports){
module.exports = require(""./lib/_stream_writable.js"")

},{""./lib/_stream_writable.js"":17}],23:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{""events"":6,""inherits"":8,""readable-stream/duplex.js"":12,""readable-stream/passthrough.js"":19,""readable-stream/readable.js"":20,""readable-stream/transform.js"":21,""readable-stream/writable.js"":22}],24:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{""buffer"":3}],25:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new ""deprecated"" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== ""undefined"" ? global : typeof self !== ""undefined"" ? self : typeof window !== ""undefined"" ? window : {})
},{}],26:[function(require,module,exports){
var predict = require('..')
var kefir = require('kefir')
document.addEventListener(""DOMContentLoaded"", function(event) { 
  var avgEl = document.getElementById('avg')
  
  var pressS = kefir.stream(emitter => {
    document.body.addEventListener(""keypress"", emitter.emit)
  }).map(e => {
    if(window.event) { // IE                    
      return e.keyCode;
    } else if(e.which){ // Netscape/Firefox/Opera                   
      return e.which;
    }
  }).map(String.fromCharCode)
  .filter(l => {
   return (l==='f'||l==='d')
  })

  var accuracyS = predict(pressS)
  var countS = accuracyS.scan(acc => acc+=1, 0)

  accuracyS.zip(countS).filter(z => z[1]>15).onValue(z => 
      avgEl.innerHTML = z[0]
  )
})

},{"".."":41,""kefir"":30}],27:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{""isBuffer"":require(""../../../../../.nvm/versions/node/v5.7.0/lib/node_modules/watchify/node_modules/is-buffer/index.js"")})
},{""../../../../../.nvm/versions/node/v5.7.0/lib/node_modules/watchify/node_modules/is-buffer/index.js"":9}],28:[function(require,module,exports){
arguments[4][8][0].apply(exports,arguments)
},{""dup"":8}],29:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],30:[function(require,module,exports){
(function (global){
/*! Kefir.js v3.2.3
 *  https://github.com/rpominov/kefir
 */

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.Kefir = global.Kefir || {})));
}(this, function (exports) { 'use strict';

	var __commonjs_global = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this;
	function __commonjs(fn, module) { return module = { exports: {} }, fn(module, module.exports, __commonjs_global), module.exports; }

	function createObj(proto) {
	  var F = function () {};
	  F.prototype = proto;
	  return new F();
	}

	function extend(target /*, mixin1, mixin2...*/) {
	  var length = arguments.length,
	      i = void 0,
	      prop = void 0;
	  for (i = 1; i < length; i++) {
	    for (prop in arguments[i]) {
	      target[prop] = arguments[i][prop];
	    }
	  }
	  return target;
	}

	function inherit(Child, Parent /*, mixin1, mixin2...*/) {
	  var length = arguments.length,
	      i = void 0;
	  Child.prototype = createObj(Parent.prototype);
	  Child.prototype.constructor = Child;
	  for (i = 2; i < length; i++) {
	    extend(Child.prototype, arguments[i]);
	  }
	  return Child;
	}

	var NOTHING = ['<nothing>'];
	var END = 'end';
	var VALUE = 'value';
	var ERROR = 'error';
	var ANY = 'any';

	function concat(a, b) {
	  var result = void 0,
	      length = void 0,
	      i = void 0,
	      j = void 0;
	  if (a.length === 0) {
	    return b;
	  }
	  if (b.length === 0) {
	    return a;
	  }
	  j = 0;
	  result = new Array(a.length + b.length);
	  length = a.length;
	  for (i = 0; i < length; i++, j++) {
	    result[j] = a[i];
	  }
	  length = b.length;
	  for (i = 0; i < length; i++, j++) {
	    result[j] = b[i];
	  }
	  return result;
	}

	function find(arr, value) {
	  var length = arr.length,
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    if (arr[i] === value) {
	      return i;
	    }
	  }
	  return -1;
	}

	function findByPred(arr, pred) {
	  var length = arr.length,
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    if (pred(arr[i])) {
	      return i;
	    }
	  }
	  return -1;
	}

	function cloneArray(input) {
	  var length = input.length,
	      result = new Array(length),
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    result[i] = input[i];
	  }
	  return result;
	}

	function remove(input, index) {
	  var length = input.length,
	      result = void 0,
	      i = void 0,
	      j = void 0;
	  if (index >= 0 && index < length) {
	    if (length === 1) {
	      return [];
	    } else {
	      result = new Array(length - 1);
	      for (i = 0, j = 0; i < length; i++) {
	        if (i !== index) {
	          result[j] = input[i];
	          j++;
	        }
	      }
	      return result;
	    }
	  } else {
	    return input;
	  }
	}

	function map(input, fn) {
	  var length = input.length,
	      result = new Array(length),
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    result[i] = fn(input[i]);
	  }
	  return result;
	}

	function forEach(arr, fn) {
	  var length = arr.length,
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    fn(arr[i]);
	  }
	}

	function fillArray(arr, value) {
	  var length = arr.length,
	      i = void 0;
	  for (i = 0; i < length; i++) {
	    arr[i] = value;
	  }
	}

	function contains(arr, value) {
	  return find(arr, value) !== -1;
	}

	function slide(cur, next, max) {
	  var length = Math.min(max, cur.length + 1),
	      offset = cur.length - length + 1,
	      result = new Array(length),
	      i = void 0;
	  for (i = offset; i < length; i++) {
	    result[i - offset] = cur[i];
	  }
	  result[length - 1] = next;
	  return result;
	}

	function callSubscriber(type, fn, event) {
	  if (type === ANY) {
	    fn(event);
	  } else if (type === event.type) {
	    if (type === VALUE || type === ERROR) {
	      fn(event.value);
	    } else {
	      fn();
	    }
	  }
	}

	function Dispatcher() {
	  this._items = [];
	  this._inLoop = 0;
	  this._removedItems = null;
	}

	extend(Dispatcher.prototype, {
	  add: function (type, fn) {
	    this._items = concat(this._items, [{ type: type, fn: fn }]);
	    return this._items.length;
	  },
	  remove: function (type, fn) {
	    var index = findByPred(this._items, function (x) {
	      return x.type === type && x.fn === fn;
	    });

	    // if we're currently in a notification loop,
	    // remember this subscriber was removed
	    if (this._inLoop !== 0 && index !== -1) {
	      if (this._removedItems === null) {
	        this._removedItems = [];
	      }
	      this._removedItems.push(this._items[index]);
	    }

	    this._items = remove(this._items, index);
	    return this._items.length;
	  },
	  dispatch: function (event) {
	    this._inLoop++;
	    for (var i = 0, items = this._items; i < items.length; i++) {

	      // cleanup was called
	      if (this._items === null) {
	        break;
	      }

	      // this subscriber was removed
	      if (this._removedItems !== null && contains(this._removedItems, items[i])) {
	        continue;
	      }

	      callSubscriber(items[i].type, items[i].fn, event);
	    }
	    this._inLoop--;
	    if (this._inLoop === 0) {
	      this._removedItems = null;
	    }
	  },
	  cleanup: function () {
	    this._items = null;
	  }
	});

	function Observable() {
	  this._dispatcher = new Dispatcher();
	  this._active = false;
	  this._alive = true;
	  this._activating = false;
	  this._logHandlers = null;
	}

	extend(Observable.prototype, {

	  _name: 'observable',

	  _onActivation: function () {},
	  _onDeactivation: function () {},
	  _setActive: function (active) {
	    if (this._active !== active) {
	      this._active = active;
	      if (active) {
	        this._activating = true;
	        this._onActivation();
	        this._activating = false;
	      } else {
	        this._onDeactivation();
	      }
	    }
	  },
	  _clear: function () {
	    this._setActive(false);
	    this._dispatcher.cleanup();
	    this._dispatcher = null;
	    this._logHandlers = null;
	  },
	  _emit: function (type, x) {
	    switch (type) {
	      case VALUE:
	        return this._emitValue(x);
	      case ERROR:
	        return this._emitError(x);
	      case END:
	        return this._emitEnd();
	    }
	  },
	  _emitValue: function (value) {
	    if (this._alive) {
	      this._dispatcher.dispatch({ type: VALUE, value: value });
	    }
	  },
	  _emitError: function (value) {
	    if (this._alive) {
	      this._dispatcher.dispatch({ type: ERROR, value: value });
	    }
	  },
	  _emitEnd: function () {
	    if (this._alive) {
	      this._alive = false;
	      this._dispatcher.dispatch({ type: END });
	      this._clear();
	    }
	  },
	  _on: function (type, fn) {
	    if (this._alive) {
	      this._dispatcher.add(type, fn);
	      this._setActive(true);
	    } else {
	      callSubscriber(type, fn, { type: END });
	    }
	    return this;
	  },
	  _off: function (type, fn) {
	    if (this._alive) {
	      var count = this._dispatcher.remove(type, fn);
	      if (count === 0) {
	        this._setActive(false);
	      }
	    }
	    return this;
	  },
	  onValue: function (fn) {
	    return this._on(VALUE, fn);
	  },
	  onError: function (fn) {
	    return this._on(ERROR, fn);
	  },
	  onEnd: function (fn) {
	    return this._on(END, fn);
	  },
	  onAny: function (fn) {
	    return this._on(ANY, fn);
	  },
	  offValue: function (fn) {
	    return this._off(VALUE, fn);
	  },
	  offError: function (fn) {
	    return this._off(ERROR, fn);
	  },
	  offEnd: function (fn) {
	    return this._off(END, fn);
	  },
	  offAny: function (fn) {
	    return this._off(ANY, fn);
	  },


	  // A and B must be subclasses of Stream and Property (order doesn't matter)
	  _ofSameType: function (A, B) {
	    return A.prototype.getType() === this.getType() ? A : B;
	  },
	  setName: function (sourceObs /* optional */, selfName) {
	    this._name = selfName ? sourceObs._name + '.' + selfName : sourceObs;
	    return this;
	  },
	  log: function () {
	    var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];


	    var isCurrent = void 0;
	    var handler = function (event) {
	      var type = '<' + event.type + (isCurrent ? ':current' : '') + '>';
	      if (event.type === END) {
	        console.log(name, type);
	      } else {
	        console.log(name, type, event.value);
	      }
	    };

	    if (this._alive) {
	      if (!this._logHandlers) {
	        this._logHandlers = [];
	      }
	      this._logHandlers.push({ name: name, handler: handler });
	    }

	    isCurrent = true;
	    this.onAny(handler);
	    isCurrent = false;

	    return this;
	  },
	  offLog: function () {
	    var name = arguments.length <= 0 || arguments[0] === undefined ? this.toString() : arguments[0];


	    if (this._logHandlers) {
	      var handlerIndex = findByPred(this._logHandlers, function (obj) {
	        return obj.name === name;
	      });
	      if (handlerIndex !== -1) {
	        this.offAny(this._logHandlers[handlerIndex].handler);
	        this._logHandlers.splice(handlerIndex, 1);
	      }
	    }

	    return this;
	  }
	});

	// extend() can't handle `toString` in IE8
	Observable.prototype.toString = function () {
	  return '[' + this._name + ']';
	};

	function Stream() {
	  Observable.call(this);
	}

	inherit(Stream, Observable, {

	  _name: 'stream',

	  getType: function () {
	    return 'stream';
	  }
	});

	function Property() {
	  Observable.call(this);
	  this._currentEvent = null;
	}

	inherit(Property, Observable, {

	  _name: 'property',

	  _emitValue: function (value) {
	    if (this._alive) {
	      this._currentEvent = { type: VALUE, value: value };
	      if (!this._activating) {
	        this._dispatcher.dispatch({ type: VALUE, value: value });
	      }
	    }
	  },
	  _emitError: function (value) {
	    if (this._alive) {
	      this._currentEvent = { type: ERROR, value: value };
	      if (!this._activating) {
	        this._dispatcher.dispatch({ type: ERROR, value: value });
	      }
	    }
	  },
	  _emitEnd: function () {
	    if (this._alive) {
	      this._alive = false;
	      if (!this._activating) {
	        this._dispatcher.dispatch({ type: END });
	      }
	      this._clear();
	    }
	  },
	  _on: function (type, fn) {
	    if (this._alive) {
	      this._dispatcher.add(type, fn);
	      this._setActive(true);
	    }
	    if (this._currentEvent !== null) {
	      callSubscriber(type, fn, this._currentEvent);
	    }
	    if (!this._alive) {
	      callSubscriber(type, fn, { type: END });
	    }
	    return this;
	  },
	  getType: function () {
	    return 'property';
	  }
	});

	var neverS = new Stream();
	neverS._emitEnd();
	neverS._name = 'never';

	function never() {
	  return neverS;
	}

	function timeBased(mixin) {

	  function AnonymousStream(wait, options) {
	    var _this = this;

	    Stream.call(this);
	    this._wait = wait;
	    this._intervalId = null;
	    this._$onTick = function () {
	      return _this._onTick();
	    };
	    this._init(options);
	  }

	  inherit(AnonymousStream, Stream, {
	    _init: function () {},
	    _free: function () {},
	    _onTick: function () {},
	    _onActivation: function () {
	      this._intervalId = setInterval(this._$onTick, this._wait);
	    },
	    _onDeactivation: function () {
	      if (this._intervalId !== null) {
	        clearInterval(this._intervalId);
	        this._intervalId = null;
	      }
	    },
	    _clear: function () {
	      Stream.prototype._clear.call(this);
	      this._$onTick = null;
	      this._free();
	    }
	  }, mixin);

	  return AnonymousStream;
	}

	var S = timeBased({

	  _name: 'later',

	  _init: function (_ref) {
	    var x = _ref.x;

	    this._x = x;
	  },
	  _free: function () {
	    this._x = null;
	  },
	  _onTick: function () {
	    this._emitValue(this._x);
	    this._emitEnd();
	  }
	});

	function later(wait, x) {
	  return new S(wait, { x: x });
	}

	var S$1 = timeBased({

	  _name: 'interval',

	  _init: function (_ref) {
	    var x = _ref.x;

	    this._x = x;
	  },
	  _free: function () {
	    this._x = null;
	  },
	  _onTick: function () {
	    this._emitValue(this._x);
	  }
	});

	function interval(wait, x) {
	  return new S$1(wait, { x: x });
	}

	var S$2 = timeBased({

	  _name: 'sequentially',

	  _init: function (_ref) {
	    var xs = _ref.xs;

	    this._xs = cloneArray(xs);
	  },
	  _free: function () {
	    this._xs = null;
	  },
	  _onTick: function () {
	    if (this._xs.length === 1) {
	      this._emitValue(this._xs[0]);
	      this._emitEnd();
	    } else {
	      this._emitValue(this._xs.shift());
	    }
	  }
	});

	function sequentially(wait, xs) {
	  return xs.length === 0 ? never() : new S$2(wait, { xs: xs });
	}

	var S$3 = timeBased({

	  _name: 'fromPoll',

	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _onTick: function () {
	    var fn = this._fn;
	    this._emitValue(fn());
	  }
	});

	function fromPoll(wait, fn) {
	  return new S$3(wait, { fn: fn });
	}

	function emitter(obs) {

	  function value(x) {
	    obs._emitValue(x);
	    return obs._active;
	  }

	  function error(x) {
	    obs._emitError(x);
	    return obs._active;
	  }

	  function end() {
	    obs._emitEnd();
	    return obs._active;
	  }

	  function event(e) {
	    obs._emit(e.type, e.value);
	    return obs._active;
	  }

	  return { value: value, error: error, end: end, event: event, emit: value, emitEvent: event };
	}

	var S$4 = timeBased({

	  _name: 'withInterval',

	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	    this._emitter = emitter(this);
	  },
	  _free: function () {
	    this._fn = null;
	    this._emitter = null;
	  },
	  _onTick: function () {
	    var fn = this._fn;
	    fn(this._emitter);
	  }
	});

	function withInterval(wait, fn) {
	  return new S$4(wait, { fn: fn });
	}

	function S$5(fn) {
	  Stream.call(this);
	  this._fn = fn;
	  this._unsubscribe = null;
	}

	inherit(S$5, Stream, {

	  _name: 'stream',

	  _onActivation: function () {
	    var fn = this._fn;
	    var unsubscribe = fn(emitter(this));
	    this._unsubscribe = typeof unsubscribe === 'function' ? unsubscribe : null;

	    // fix https://github.com/rpominov/kefir/issues/35
	    if (!this._active) {
	      this._callUnsubscribe();
	    }
	  },
	  _callUnsubscribe: function () {
	    if (this._unsubscribe !== null) {
	      this._unsubscribe();
	      this._unsubscribe = null;
	    }
	  },
	  _onDeactivation: function () {
	    this._callUnsubscribe();
	  },
	  _clear: function () {
	    Stream.prototype._clear.call(this);
	    this._fn = null;
	  }
	});

	function stream(fn) {
	  return new S$5(fn);
	}

	function fromCallback(callbackConsumer) {

	  var called = false;

	  return stream(function (emitter) {

	    if (!called) {
	      callbackConsumer(function (x) {
	        emitter.emit(x);
	        emitter.end();
	      });
	      called = true;
	    }
	  }).setName('fromCallback');
	}

	function fromNodeCallback(callbackConsumer) {

	  var called = false;

	  return stream(function (emitter) {

	    if (!called) {
	      callbackConsumer(function (error, x) {
	        if (error) {
	          emitter.error(error);
	        } else {
	          emitter.emit(x);
	        }
	        emitter.end();
	      });
	      called = true;
	    }
	  }).setName('fromNodeCallback');
	}

	function spread(fn, length) {
	  switch (length) {
	    case 0:
	      return function () {
	        return fn();
	      };
	    case 1:
	      return function (a) {
	        return fn(a[0]);
	      };
	    case 2:
	      return function (a) {
	        return fn(a[0], a[1]);
	      };
	    case 3:
	      return function (a) {
	        return fn(a[0], a[1], a[2]);
	      };
	    case 4:
	      return function (a) {
	        return fn(a[0], a[1], a[2], a[3]);
	      };
	    default:
	      return function (a) {
	        return fn.apply(null, a);
	      };
	  }
	}

	function apply(fn, c, a) {
	  var aLength = a ? a.length : 0;
	  if (c == null) {
	    switch (aLength) {
	      case 0:
	        return fn();
	      case 1:
	        return fn(a[0]);
	      case 2:
	        return fn(a[0], a[1]);
	      case 3:
	        return fn(a[0], a[1], a[2]);
	      case 4:
	        return fn(a[0], a[1], a[2], a[3]);
	      default:
	        return fn.apply(null, a);
	    }
	  } else {
	    switch (aLength) {
	      case 0:
	        return fn.call(c);
	      default:
	        return fn.apply(c, a);
	    }
	  }
	}

	function fromSubUnsub(sub, unsub, transformer /* Function | falsey */) {
	  return stream(function (emitter) {

	    var handler = transformer ? function () {
	      emitter.emit(apply(transformer, this, arguments));
	    } : function (x) {
	      emitter.emit(x);
	    };

	    sub(handler);
	    return function () {
	      return unsub(handler);
	    };
	  }).setName('fromSubUnsub');
	}

	var pairs = [['addEventListener', 'removeEventListener'], ['addListener', 'removeListener'], ['on', 'off']];

	function fromEvents(target, eventName, transformer) {
	  var sub = void 0,
	      unsub = void 0;

	  for (var i = 0; i < pairs.length; i++) {
	    if (typeof target[pairs[i][0]] === 'function' && typeof target[pairs[i][1]] === 'function') {
	      sub = pairs[i][0];
	      unsub = pairs[i][1];
	      break;
	    }
	  }

	  if (sub === undefined) {
	    throw new Error('target don\'t support any of ' + 'addEventListener/removeEventListener, addListener/removeListener, on/off method pair');
	  }

	  return fromSubUnsub(function (handler) {
	    return target[sub](eventName, handler);
	  }, function (handler) {
	    return target[unsub](eventName, handler);
	  }, transformer).setName('fromEvents');
	}

	// HACK:
	//   We don't call parent Class constructor, but instead putting all necessary
	//   properties into prototype to simulate ended Property
	//   (see Propperty and Observable classes).

	function P(value) {
	  this._currentEvent = { type: 'value', value: value, current: true };
	}

	inherit(P, Property, {
	  _name: 'constant',
	  _active: false,
	  _activating: false,
	  _alive: false,
	  _dispatcher: null,
	  _logHandlers: null
	});

	function constant(x) {
	  return new P(x);
	}

	// HACK:
	//   We don't call parent Class constructor, but instead putting all necessary
	//   properties into prototype to simulate ended Property
	//   (see Propperty and Observable classes).

	function P$1(value) {
	  this._currentEvent = { type: 'error', value: value, current: true };
	}

	inherit(P$1, Property, {
	  _name: 'constantError',
	  _active: false,
	  _activating: false,
	  _alive: false,
	  _dispatcher: null,
	  _logHandlers: null
	});

	function constantError(x) {
	  return new P$1(x);
	}

	function createConstructor(BaseClass, name) {
	  return function AnonymousObservable(source, options) {
	    var _this = this;

	    BaseClass.call(this);
	    this._source = source;
	    this._name = source._name + '.' + name;
	    this._init(options);
	    this._$handleAny = function (event) {
	      return _this._handleAny(event);
	    };
	  };
	}

	function createClassMethods(BaseClass) {
	  return {
	    _init: function () {},
	    _free: function () {},
	    _handleValue: function (x) {
	      this._emitValue(x);
	    },
	    _handleError: function (x) {
	      this._emitError(x);
	    },
	    _handleEnd: function () {
	      this._emitEnd();
	    },
	    _handleAny: function (event) {
	      switch (event.type) {
	        case VALUE:
	          return this._handleValue(event.value);
	        case ERROR:
	          return this._handleError(event.value);
	        case END:
	          return this._handleEnd();
	      }
	    },
	    _onActivation: function () {
	      this._source.onAny(this._$handleAny);
	    },
	    _onDeactivation: function () {
	      this._source.offAny(this._$handleAny);
	    },
	    _clear: function () {
	      BaseClass.prototype._clear.call(this);
	      this._source = null;
	      this._$handleAny = null;
	      this._free();
	    }
	  };
	}

	function createStream(name, mixin) {
	  var S = createConstructor(Stream, name);
	  inherit(S, Stream, createClassMethods(Stream), mixin);
	  return S;
	}

	function createProperty(name, mixin) {
	  var P = createConstructor(Property, name);
	  inherit(P, Property, createClassMethods(Property), mixin);
	  return P;
	}

	var P$2 = createProperty('toProperty', {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._getInitialCurrent = fn;
	  },
	  _onActivation: function () {
	    if (this._getInitialCurrent !== null) {
	      var getInitial = this._getInitialCurrent;
	      this._emitValue(getInitial());
	    }
	    this._source.onAny(this._$handleAny); // copied from patterns/one-source
	  }
	});

	function toProperty(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

	  if (fn !== null && typeof fn !== 'function') {
	    throw new Error('You should call toProperty() with a function or no arguments.');
	  }
	  return new P$2(obs, { fn: fn });
	}

	var S$6 = createStream('changes', {
	  _handleValue: function (x) {
	    if (!this._activating) {
	      this._emitValue(x);
	    }
	  },
	  _handleError: function (x) {
	    if (!this._activating) {
	      this._emitError(x);
	    }
	  }
	});

	function changes(obs) {
	  return new S$6(obs);
	}

	function fromPromise(promise) {

	  var called = false;

	  var result = stream(function (emitter) {
	    if (!called) {
	      var onValue = function (x) {
	        emitter.emit(x);
	        emitter.end();
	      };
	      var onError = function (x) {
	        emitter.error(x);
	        emitter.end();
	      };
	      var _promise = promise.then(onValue, onError);

	      // prevent libraries like 'Q' or 'when' from swallowing exceptions
	      if (_promise && typeof _promise.done === 'function') {
	        _promise.done();
	      }

	      called = true;
	    }
	  });

	  return toProperty(result, null).setName('fromPromise');
	}

	function getGlodalPromise() {
	  if (typeof Promise === 'function') {
	    return Promise;
	  } else {
	    throw new Error('There isn\'t default Promise, use shim or parameter');
	  }
	}

	function toPromise (obs) {
	  var Promise = arguments.length <= 1 || arguments[1] === undefined ? getGlodalPromise() : arguments[1];

	  var last = null;
	  return new Promise(function (resolve, reject) {
	    obs.onAny(function (event) {
	      if (event.type === END && last !== null) {
	        (last.type === VALUE ? resolve : reject)(last.value);
	        last = null;
	      } else {
	        last = event;
	      }
	    });
	  });
	}

	var ponyfill = __commonjs(function (module) {
	'use strict';

	module.exports = function symbolObservablePonyfill(root) {
		var result;
		var Symbol = root.Symbol;

		if (typeof Symbol === 'function') {
			if (Symbol.observable) {
				result = Symbol.observable;
			} else {
				result = Symbol('observable');
				Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}

		return result;
	};
	});

	var require$$0 = (ponyfill && typeof ponyfill === 'object' && 'default' in ponyfill ? ponyfill['default'] : ponyfill);

	var index = __commonjs(function (module, exports, global) {
	/* global window */
	'use strict';

	module.exports = require$$0(global || window || __commonjs_global);
	});

	var $$observable = (index && typeof index === 'object' && 'default' in index ? index['default'] : index);

	function fromESObservable(_observable) {
	  var observable = _observable[$$observable] ? _observable[$$observable]() : _observable;
	  return stream(function (emitter) {
	    var unsub = observable.subscribe({
	      error: function (error) {
	        emitter.error(error);
	        emitter.end();
	      },
	      next: function (value) {
	        emitter.emit(value);
	      },
	      complete: function () {
	        emitter.end();
	      }
	    });

	    if (unsub.unsubscribe) {
	      return function () {
	        unsub.unsubscribe();
	      };
	    } else {
	      return unsub;
	    }
	  }).setName('fromESObservable');
	}

	function ESObservable(observable) {
	  this._observable = observable.takeErrors(1);
	}

	extend(ESObservable.prototype, {
	  subscribe: function (observer) {
	    var _this = this;

	    var fn = function (event) {
	      if (event.type === VALUE && observer.next) {
	        observer.next(event.value);
	      } else if (event.type === ERROR && observer.error) {
	        observer.error(event.value);
	      } else if (event.type === END && observer.complete) {
	        observer.complete(event.value);
	      }
	    };

	    this._observable.onAny(fn);
	    return function () {
	      return _this._observable.offAny(fn);
	    };
	  }
	});

	function toESObservable() {
	  return new ESObservable(this);
	}

	var mixin = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    this._emitValue(fn(x));
	  }
	};

	var S$7 = createStream('map', mixin);
	var P$3 = createProperty('map', mixin);

	var id = function (x) {
	  return x;
	};

	function map$1(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id : arguments[1];

	  return new (obs._ofSameType(S$7, P$3))(obs, { fn: fn });
	}

	var mixin$1 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    if (fn(x)) {
	      this._emitValue(x);
	    }
	  }
	};

	var S$8 = createStream('filter', mixin$1);
	var P$4 = createProperty('filter', mixin$1);

	var id$1 = function (x) {
	  return x;
	};

	function filter(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$1 : arguments[1];

	  return new (obs._ofSameType(S$8, P$4))(obs, { fn: fn });
	}

	var mixin$2 = {
	  _init: function (_ref) {
	    var n = _ref.n;

	    this._n = n;
	    if (n <= 0) {
	      this._emitEnd();
	    }
	  },
	  _handleValue: function (x) {
	    this._n--;
	    this._emitValue(x);
	    if (this._n === 0) {
	      this._emitEnd();
	    }
	  }
	};

	var S$9 = createStream('take', mixin$2);
	var P$5 = createProperty('take', mixin$2);

	function take(obs, n) {
	  return new (obs._ofSameType(S$9, P$5))(obs, { n: n });
	}

	var mixin$3 = {
	  _init: function (_ref) {
	    var n = _ref.n;

	    this._n = n;
	    if (n <= 0) {
	      this._emitEnd();
	    }
	  },
	  _handleError: function (x) {
	    this._n--;
	    this._emitError(x);
	    if (this._n === 0) {
	      this._emitEnd();
	    }
	  }
	};

	var S$10 = createStream('takeErrors', mixin$3);
	var P$6 = createProperty('takeErrors', mixin$3);

	function takeErrors(obs, n) {
	  return new (obs._ofSameType(S$10, P$6))(obs, { n: n });
	}

	var mixin$4 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    if (fn(x)) {
	      this._emitValue(x);
	    } else {
	      this._emitEnd();
	    }
	  }
	};

	var S$11 = createStream('takeWhile', mixin$4);
	var P$7 = createProperty('takeWhile', mixin$4);

	var id$2 = function (x) {
	  return x;
	};

	function takeWhile(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$2 : arguments[1];

	  return new (obs._ofSameType(S$11, P$7))(obs, { fn: fn });
	}

	var mixin$5 = {
	  _init: function () {
	    this._lastValue = NOTHING;
	  },
	  _free: function () {
	    this._lastValue = null;
	  },
	  _handleValue: function (x) {
	    this._lastValue = x;
	  },
	  _handleEnd: function () {
	    if (this._lastValue !== NOTHING) {
	      this._emitValue(this._lastValue);
	    }
	    this._emitEnd();
	  }
	};

	var S$12 = createStream('last', mixin$5);
	var P$8 = createProperty('last', mixin$5);

	function last(obs) {
	  return new (obs._ofSameType(S$12, P$8))(obs);
	}

	var mixin$6 = {
	  _init: function (_ref) {
	    var n = _ref.n;

	    this._n = Math.max(0, n);
	  },
	  _handleValue: function (x) {
	    if (this._n === 0) {
	      this._emitValue(x);
	    } else {
	      this._n--;
	    }
	  }
	};

	var S$13 = createStream('skip', mixin$6);
	var P$9 = createProperty('skip', mixin$6);

	function skip(obs, n) {
	  return new (obs._ofSameType(S$13, P$9))(obs, { n: n });
	}

	var mixin$7 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    if (this._fn !== null && !fn(x)) {
	      this._fn = null;
	    }
	    if (this._fn === null) {
	      this._emitValue(x);
	    }
	  }
	};

	var S$14 = createStream('skipWhile', mixin$7);
	var P$10 = createProperty('skipWhile', mixin$7);

	var id$3 = function (x) {
	  return x;
	};

	function skipWhile(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$3 : arguments[1];

	  return new (obs._ofSameType(S$14, P$10))(obs, { fn: fn });
	}

	var mixin$8 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	    this._prev = NOTHING;
	  },
	  _free: function () {
	    this._fn = null;
	    this._prev = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    if (this._prev === NOTHING || !fn(this._prev, x)) {
	      this._prev = x;
	      this._emitValue(x);
	    }
	  }
	};

	var S$15 = createStream('skipDuplicates', mixin$8);
	var P$11 = createProperty('skipDuplicates', mixin$8);

	var eq = function (a, b) {
	  return a === b;
	};

	function skipDuplicates(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? eq : arguments[1];

	  return new (obs._ofSameType(S$15, P$11))(obs, { fn: fn });
	}

	var mixin$9 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;
	    var seed = _ref.seed;

	    this._fn = fn;
	    this._prev = seed;
	  },
	  _free: function () {
	    this._prev = null;
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    if (this._prev !== NOTHING) {
	      var fn = this._fn;
	      this._emitValue(fn(this._prev, x));
	    }
	    this._prev = x;
	  }
	};

	var S$16 = createStream('diff', mixin$9);
	var P$12 = createProperty('diff', mixin$9);

	function defaultFn(a, b) {
	  return [a, b];
	}

	function diff(obs, fn) {
	  var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];

	  return new (obs._ofSameType(S$16, P$12))(obs, { fn: fn || defaultFn, seed: seed });
	}

	var P$13 = createProperty('scan', {
	  _init: function (_ref) {
	    var fn = _ref.fn;
	    var seed = _ref.seed;

	    this._fn = fn;
	    this._seed = seed;
	    if (seed !== NOTHING) {
	      this._emitValue(seed);
	    }
	  },
	  _free: function () {
	    this._fn = null;
	    this._seed = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    if (this._currentEvent === null || this._currentEvent.type === ERROR) {
	      this._emitValue(this._seed === NOTHING ? x : fn(this._seed, x));
	    } else {
	      this._emitValue(fn(this._currentEvent.value, x));
	    }
	  }
	});

	function scan(obs, fn) {
	  var seed = arguments.length <= 2 || arguments[2] === undefined ? NOTHING : arguments[2];

	  return new P$13(obs, { fn: fn, seed: seed });
	}

	var mixin$10 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    var xs = fn(x);
	    for (var i = 0; i < xs.length; i++) {
	      this._emitValue(xs[i]);
	    }
	  }
	};

	var S$17 = createStream('flatten', mixin$10);

	var id$4 = function (x) {
	  return x;
	};

	function flatten(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$4 : arguments[1];

	  return new S$17(obs, { fn: fn });
	}

	var END_MARKER = {};

	var mixin$11 = {
	  _init: function (_ref) {
	    var _this = this;

	    var wait = _ref.wait;

	    this._wait = Math.max(0, wait);
	    this._buff = [];
	    this._$shiftBuff = function () {
	      var value = _this._buff.shift();
	      if (value === END_MARKER) {
	        _this._emitEnd();
	      } else {
	        _this._emitValue(value);
	      }
	    };
	  },
	  _free: function () {
	    this._buff = null;
	    this._$shiftBuff = null;
	  },
	  _handleValue: function (x) {
	    if (this._activating) {
	      this._emitValue(x);
	    } else {
	      this._buff.push(x);
	      setTimeout(this._$shiftBuff, this._wait);
	    }
	  },
	  _handleEnd: function () {
	    if (this._activating) {
	      this._emitEnd();
	    } else {
	      this._buff.push(END_MARKER);
	      setTimeout(this._$shiftBuff, this._wait);
	    }
	  }
	};

	var S$18 = createStream('delay', mixin$11);
	var P$14 = createProperty('delay', mixin$11);

	function delay(obs, wait) {
	  return new (obs._ofSameType(S$18, P$14))(obs, { wait: wait });
	}

	var now = Date.now ? function () {
	  return Date.now();
	} : function () {
	  return new Date().getTime();
	};

	var mixin$12 = {
	  _init: function (_ref) {
	    var _this = this;

	    var wait = _ref.wait;
	    var leading = _ref.leading;
	    var trailing = _ref.trailing;

	    this._wait = Math.max(0, wait);
	    this._leading = leading;
	    this._trailing = trailing;
	    this._trailingValue = null;
	    this._timeoutId = null;
	    this._endLater = false;
	    this._lastCallTime = 0;
	    this._$trailingCall = function () {
	      return _this._trailingCall();
	    };
	  },
	  _free: function () {
	    this._trailingValue = null;
	    this._$trailingCall = null;
	  },
	  _handleValue: function (x) {
	    if (this._activating) {
	      this._emitValue(x);
	    } else {
	      var curTime = now();
	      if (this._lastCallTime === 0 && !this._leading) {
	        this._lastCallTime = curTime;
	      }
	      var remaining = this._wait - (curTime - this._lastCallTime);
	      if (remaining <= 0) {
	        this._cancelTrailing();
	        this._lastCallTime = curTime;
	        this._emitValue(x);
	      } else if (this._trailing) {
	        this._cancelTrailing();
	        this._trailingValue = x;
	        this._timeoutId = setTimeout(this._$trailingCall, remaining);
	      }
	    }
	  },
	  _handleEnd: function () {
	    if (this._activating) {
	      this._emitEnd();
	    } else {
	      if (this._timeoutId) {
	        this._endLater = true;
	      } else {
	        this._emitEnd();
	      }
	    }
	  },
	  _cancelTrailing: function () {
	    if (this._timeoutId !== null) {
	      clearTimeout(this._timeoutId);
	      this._timeoutId = null;
	    }
	  },
	  _trailingCall: function () {
	    this._emitValue(this._trailingValue);
	    this._timeoutId = null;
	    this._trailingValue = null;
	    this._lastCallTime = !this._leading ? 0 : now();
	    if (this._endLater) {
	      this._emitEnd();
	    }
	  }
	};

	var S$19 = createStream('throttle', mixin$12);
	var P$15 = createProperty('throttle', mixin$12);

	function throttle(obs, wait) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref2$leading = _ref2.leading;
	  var leading = _ref2$leading === undefined ? true : _ref2$leading;
	  var _ref2$trailing = _ref2.trailing;
	  var trailing = _ref2$trailing === undefined ? true : _ref2$trailing;

	  return new (obs._ofSameType(S$19, P$15))(obs, { wait: wait, leading: leading, trailing: trailing });
	}

	var mixin$13 = {
	  _init: function (_ref) {
	    var _this = this;

	    var wait = _ref.wait;
	    var immediate = _ref.immediate;

	    this._wait = Math.max(0, wait);
	    this._immediate = immediate;
	    this._lastAttempt = 0;
	    this._timeoutId = null;
	    this._laterValue = null;
	    this._endLater = false;
	    this._$later = function () {
	      return _this._later();
	    };
	  },
	  _free: function () {
	    this._laterValue = null;
	    this._$later = null;
	  },
	  _handleValue: function (x) {
	    if (this._activating) {
	      this._emitValue(x);
	    } else {
	      this._lastAttempt = now();
	      if (this._immediate && !this._timeoutId) {
	        this._emitValue(x);
	      }
	      if (!this._timeoutId) {
	        this._timeoutId = setTimeout(this._$later, this._wait);
	      }
	      if (!this._immediate) {
	        this._laterValue = x;
	      }
	    }
	  },
	  _handleEnd: function () {
	    if (this._activating) {
	      this._emitEnd();
	    } else {
	      if (this._timeoutId && !this._immediate) {
	        this._endLater = true;
	      } else {
	        this._emitEnd();
	      }
	    }
	  },
	  _later: function () {
	    var last = now() - this._lastAttempt;
	    if (last < this._wait && last >= 0) {
	      this._timeoutId = setTimeout(this._$later, this._wait - last);
	    } else {
	      this._timeoutId = null;
	      if (!this._immediate) {
	        this._emitValue(this._laterValue);
	        this._laterValue = null;
	      }
	      if (this._endLater) {
	        this._emitEnd();
	      }
	    }
	  }
	};

	var S$20 = createStream('debounce', mixin$13);
	var P$16 = createProperty('debounce', mixin$13);

	function debounce(obs, wait) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref2$immediate = _ref2.immediate;
	  var immediate = _ref2$immediate === undefined ? false : _ref2$immediate;

	  return new (obs._ofSameType(S$20, P$16))(obs, { wait: wait, immediate: immediate });
	}

	var mixin$14 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleError: function (x) {
	    var fn = this._fn;
	    this._emitError(fn(x));
	  }
	};

	var S$21 = createStream('mapErrors', mixin$14);
	var P$17 = createProperty('mapErrors', mixin$14);

	var id$5 = function (x) {
	  return x;
	};

	function mapErrors(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$5 : arguments[1];

	  return new (obs._ofSameType(S$21, P$17))(obs, { fn: fn });
	}

	var mixin$15 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleError: function (x) {
	    var fn = this._fn;
	    if (fn(x)) {
	      this._emitError(x);
	    }
	  }
	};

	var S$22 = createStream('filterErrors', mixin$15);
	var P$18 = createProperty('filterErrors', mixin$15);

	var id$6 = function (x) {
	  return x;
	};

	function filterErrors(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? id$6 : arguments[1];

	  return new (obs._ofSameType(S$22, P$18))(obs, { fn: fn });
	}

	var mixin$16 = {
	  _handleValue: function () {}
	};

	var S$23 = createStream('ignoreValues', mixin$16);
	var P$19 = createProperty('ignoreValues', mixin$16);

	function ignoreValues(obs) {
	  return new (obs._ofSameType(S$23, P$19))(obs);
	}

	var mixin$17 = {
	  _handleError: function () {}
	};

	var S$24 = createStream('ignoreErrors', mixin$17);
	var P$20 = createProperty('ignoreErrors', mixin$17);

	function ignoreErrors(obs) {
	  return new (obs._ofSameType(S$24, P$20))(obs);
	}

	var mixin$18 = {
	  _handleEnd: function () {}
	};

	var S$25 = createStream('ignoreEnd', mixin$18);
	var P$21 = createProperty('ignoreEnd', mixin$18);

	function ignoreEnd(obs) {
	  return new (obs._ofSameType(S$25, P$21))(obs);
	}

	var mixin$19 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleEnd: function () {
	    var fn = this._fn;
	    this._emitValue(fn());
	    this._emitEnd();
	  }
	};

	var S$26 = createStream('beforeEnd', mixin$19);
	var P$22 = createProperty('beforeEnd', mixin$19);

	function beforeEnd(obs, fn) {
	  return new (obs._ofSameType(S$26, P$22))(obs, { fn: fn });
	}

	var mixin$20 = {
	  _init: function (_ref) {
	    var min = _ref.min;
	    var max = _ref.max;

	    this._max = max;
	    this._min = min;
	    this._buff = [];
	  },
	  _free: function () {
	    this._buff = null;
	  },
	  _handleValue: function (x) {
	    this._buff = slide(this._buff, x, this._max);
	    if (this._buff.length >= this._min) {
	      this._emitValue(this._buff);
	    }
	  }
	};

	var S$27 = createStream('slidingWindow', mixin$20);
	var P$23 = createProperty('slidingWindow', mixin$20);

	function slidingWindow(obs, max) {
	  var min = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];

	  return new (obs._ofSameType(S$27, P$23))(obs, { min: min, max: max });
	}

	var mixin$21 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;
	    var flushOnEnd = _ref.flushOnEnd;

	    this._fn = fn;
	    this._flushOnEnd = flushOnEnd;
	    this._buff = [];
	  },
	  _free: function () {
	    this._buff = null;
	  },
	  _flush: function () {
	    if (this._buff !== null && this._buff.length !== 0) {
	      this._emitValue(this._buff);
	      this._buff = [];
	    }
	  },
	  _handleValue: function (x) {
	    this._buff.push(x);
	    var fn = this._fn;
	    if (!fn(x)) {
	      this._flush();
	    }
	  },
	  _handleEnd: function () {
	    if (this._flushOnEnd) {
	      this._flush();
	    }
	    this._emitEnd();
	  }
	};

	var S$28 = createStream('bufferWhile', mixin$21);
	var P$24 = createProperty('bufferWhile', mixin$21);

	var id$7 = function (x) {
	  return x;
	};

	function bufferWhile(obs, fn) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref2$flushOnEnd = _ref2.flushOnEnd;
	  var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

	  return new (obs._ofSameType(S$28, P$24))(obs, { fn: fn || id$7, flushOnEnd: flushOnEnd });
	}

	var mixin$22 = {
	  _init: function (_ref) {
	    var count = _ref.count;
	    var flushOnEnd = _ref.flushOnEnd;

	    this._count = count;
	    this._flushOnEnd = flushOnEnd;
	    this._buff = [];
	  },
	  _free: function () {
	    this._buff = null;
	  },
	  _flush: function () {
	    if (this._buff !== null && this._buff.length !== 0) {
	      this._emitValue(this._buff);
	      this._buff = [];
	    }
	  },
	  _handleValue: function (x) {
	    this._buff.push(x);
	    if (this._buff.length >= this._count) {
	      this._flush();
	    }
	  },
	  _handleEnd: function () {
	    if (this._flushOnEnd) {
	      this._flush();
	    }
	    this._emitEnd();
	  }
	};

	var S$29 = createStream('bufferWithCount', mixin$22);
	var P$25 = createProperty('bufferWithCount', mixin$22);

	function bufferWhile$1(obs, count) {
	  var _ref2 = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  var _ref2$flushOnEnd = _ref2.flushOnEnd;
	  var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

	  return new (obs._ofSameType(S$29, P$25))(obs, { count: count, flushOnEnd: flushOnEnd });
	}

	var mixin$23 = {
	  _init: function (_ref) {
	    var _this = this;

	    var wait = _ref.wait;
	    var count = _ref.count;
	    var flushOnEnd = _ref.flushOnEnd;

	    this._wait = wait;
	    this._count = count;
	    this._flushOnEnd = flushOnEnd;
	    this._intervalId = null;
	    this._$onTick = function () {
	      return _this._flush();
	    };
	    this._buff = [];
	  },
	  _free: function () {
	    this._$onTick = null;
	    this._buff = null;
	  },
	  _flush: function () {
	    if (this._buff !== null) {
	      this._emitValue(this._buff);
	      this._buff = [];
	    }
	  },
	  _handleValue: function (x) {
	    this._buff.push(x);
	    if (this._buff.length >= this._count) {
	      clearInterval(this._intervalId);
	      this._flush();
	      this._intervalId = setInterval(this._$onTick, this._wait);
	    }
	  },
	  _handleEnd: function () {
	    if (this._flushOnEnd && this._buff.length !== 0) {
	      this._flush();
	    }
	    this._emitEnd();
	  },
	  _onActivation: function () {
	    this._intervalId = setInterval(this._$onTick, this._wait);
	    this._source.onAny(this._$handleAny); // copied from patterns/one-source
	  },
	  _onDeactivation: function () {
	    if (this._intervalId !== null) {
	      clearInterval(this._intervalId);
	      this._intervalId = null;
	    }
	    this._source.offAny(this._$handleAny); // copied from patterns/one-source
	  }
	};

	var S$30 = createStream('bufferWithTimeOrCount', mixin$23);
	var P$26 = createProperty('bufferWithTimeOrCount', mixin$23);

	function bufferWithTimeOrCount(obs, wait, count) {
	  var _ref2 = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var _ref2$flushOnEnd = _ref2.flushOnEnd;
	  var flushOnEnd = _ref2$flushOnEnd === undefined ? true : _ref2$flushOnEnd;

	  return new (obs._ofSameType(S$30, P$26))(obs, { wait: wait, count: count, flushOnEnd: flushOnEnd });
	}

	function xformForObs(obs) {
	  return {
	    '@@transducer/step': function (res, input) {
	      obs._emitValue(input);
	      return null;
	    },
	    '@@transducer/result': function () {
	      obs._emitEnd();
	      return null;
	    }
	  };
	}

	var mixin$24 = {
	  _init: function (_ref) {
	    var transducer = _ref.transducer;

	    this._xform = transducer(xformForObs(this));
	  },
	  _free: function () {
	    this._xform = null;
	  },
	  _handleValue: function (x) {
	    if (this._xform['@@transducer/step'](null, x) !== null) {
	      this._xform['@@transducer/result'](null);
	    }
	  },
	  _handleEnd: function () {
	    this._xform['@@transducer/result'](null);
	  }
	};

	var S$31 = createStream('transduce', mixin$24);
	var P$27 = createProperty('transduce', mixin$24);

	function transduce(obs, transducer) {
	  return new (obs._ofSameType(S$31, P$27))(obs, { transducer: transducer });
	}

	var mixin$25 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._handler = fn;
	    this._emitter = emitter(this);
	  },
	  _free: function () {
	    this._handler = null;
	    this._emitter = null;
	  },
	  _handleAny: function (event) {
	    this._handler(this._emitter, event);
	  }
	};

	var S$32 = createStream('withHandler', mixin$25);
	var P$28 = createProperty('withHandler', mixin$25);

	function withHandler(obs, fn) {
	  return new (obs._ofSameType(S$32, P$28))(obs, { fn: fn });
	}

	function defaultErrorsCombinator(errors) {
	  var latestError = void 0;
	  for (var i = 0; i < errors.length; i++) {
	    if (errors[i] !== undefined) {
	      if (latestError === undefined || latestError.index < errors[i].index) {
	        latestError = errors[i];
	      }
	    }
	  }
	  return latestError.error;
	}

	function Combine(active, passive, combinator) {
	  var _this = this;

	  Stream.call(this);
	  this._activeCount = active.length;
	  this._sources = concat(active, passive);
	  this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {
	    return x;
	  };
	  this._aliveCount = 0;
	  this._latestValues = new Array(this._sources.length);
	  this._latestErrors = new Array(this._sources.length);
	  fillArray(this._latestValues, NOTHING);
	  this._emitAfterActivation = false;
	  this._endAfterActivation = false;
	  this._latestErrorIndex = 0;

	  this._$handlers = [];

	  var _loop = function (i) {
	    _this._$handlers.push(function (event) {
	      return _this._handleAny(i, event);
	    });
	  };

	  for (var i = 0; i < this._sources.length; i++) {
	    _loop(i);
	  }
	}

	inherit(Combine, Stream, {

	  _name: 'combine',

	  _onActivation: function () {
	    this._aliveCount = this._activeCount;

	    // we need to suscribe to _passive_ sources before _active_
	    // (see https://github.com/rpominov/kefir/issues/98)
	    for (var i = this._activeCount; i < this._sources.length; i++) {
	      this._sources[i].onAny(this._$handlers[i]);
	    }
	    for (var i = 0; i < this._activeCount; i++) {
	      this._sources[i].onAny(this._$handlers[i]);
	    }

	    if (this._emitAfterActivation) {
	      this._emitAfterActivation = false;
	      this._emitIfFull();
	    }
	    if (this._endAfterActivation) {
	      this._emitEnd();
	    }
	  },
	  _onDeactivation: function () {
	    var length = this._sources.length,
	        i = void 0;
	    for (i = 0; i < length; i++) {
	      this._sources[i].offAny(this._$handlers[i]);
	    }
	  },
	  _emitIfFull: function () {
	    var hasAllValues = true;
	    var hasErrors = false;
	    var length = this._latestValues.length;
	    var valuesCopy = new Array(length);
	    var errorsCopy = new Array(length);

	    for (var i = 0; i < length; i++) {
	      valuesCopy[i] = this._latestValues[i];
	      errorsCopy[i] = this._latestErrors[i];

	      if (valuesCopy[i] === NOTHING) {
	        hasAllValues = false;
	      }

	      if (errorsCopy[i] !== undefined) {
	        hasErrors = true;
	      }
	    }

	    if (hasAllValues) {
	      var combinator = this._combinator;
	      this._emitValue(combinator(valuesCopy));
	    }
	    if (hasErrors) {
	      this._emitError(defaultErrorsCombinator(errorsCopy));
	    }
	  },
	  _handleAny: function (i, event) {

	    if (event.type === VALUE || event.type === ERROR) {

	      if (event.type === VALUE) {
	        this._latestValues[i] = event.value;
	        this._latestErrors[i] = undefined;
	      }
	      if (event.type === ERROR) {
	        this._latestValues[i] = NOTHING;
	        this._latestErrors[i] = {
	          index: this._latestErrorIndex++,
	          error: event.value
	        };
	      }

	      if (i < this._activeCount) {
	        if (this._activating) {
	          this._emitAfterActivation = true;
	        } else {
	          this._emitIfFull();
	        }
	      }
	    } else {
	      // END

	      if (i < this._activeCount) {
	        this._aliveCount--;
	        if (this._aliveCount === 0) {
	          if (this._activating) {
	            this._endAfterActivation = true;
	          } else {
	            this._emitEnd();
	          }
	        }
	      }
	    }
	  },
	  _clear: function () {
	    Stream.prototype._clear.call(this);
	    this._sources = null;
	    this._latestValues = null;
	    this._latestErrors = null;
	    this._combinator = null;
	    this._$handlers = null;
	  }
	});

	function combine(active) {
	  var passive = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
	  var combinator = arguments[2];

	  if (typeof passive === 'function') {
	    combinator = passive;
	    passive = [];
	  }
	  return active.length === 0 ? never() : new Combine(active, passive, combinator);
	}

	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};

	function Zip(sources, combinator) {
	  var _this = this;

	  Stream.call(this);

	  this._buffers = map(sources, function (source) {
	    return isArray(source) ? cloneArray(source) : [];
	  });
	  this._sources = map(sources, function (source) {
	    return isArray(source) ? never() : source;
	  });

	  this._combinator = combinator ? spread(combinator, this._sources.length) : function (x) {
	    return x;
	  };
	  this._aliveCount = 0;

	  this._$handlers = [];

	  var _loop = function (i) {
	    _this._$handlers.push(function (event) {
	      return _this._handleAny(i, event);
	    });
	  };

	  for (var i = 0; i < this._sources.length; i++) {
	    _loop(i);
	  }
	}

	inherit(Zip, Stream, {

	  _name: 'zip',

	  _onActivation: function () {

	    // if all sources are arrays
	    while (this._isFull()) {
	      this._emit();
	    }

	    var length = this._sources.length;
	    this._aliveCount = length;
	    for (var i = 0; i < length && this._active; i++) {
	      this._sources[i].onAny(this._$handlers[i]);
	    }
	  },
	  _onDeactivation: function () {
	    for (var i = 0; i < this._sources.length; i++) {
	      this._sources[i].offAny(this._$handlers[i]);
	    }
	  },
	  _emit: function () {
	    var values = new Array(this._buffers.length);
	    for (var i = 0; i < this._buffers.length; i++) {
	      values[i] = this._buffers[i].shift();
	    }
	    var combinator = this._combinator;
	    this._emitValue(combinator(values));
	  },
	  _isFull: function () {
	    for (var i = 0; i < this._buffers.length; i++) {
	      if (this._buffers[i].length === 0) {
	        return false;
	      }
	    }
	    return true;
	  },
	  _handleAny: function (i, event) {
	    if (event.type === VALUE) {
	      this._buffers[i].push(event.value);
	      if (this._isFull()) {
	        this._emit();
	      }
	    }
	    if (event.type === ERROR) {
	      this._emitError(event.value);
	    }
	    if (event.type === END) {
	      this._aliveCount--;
	      if (this._aliveCount === 0) {
	        this._emitEnd();
	      }
	    }
	  },
	  _clear: function () {
	    Stream.prototype._clear.call(this);
	    this._sources = null;
	    this._buffers = null;
	    this._combinator = null;
	    this._$handlers = null;
	  }
	});

	function zip(observables, combinator /* Function | falsey */) {
	  return observables.length === 0 ? never() : new Zip(observables, combinator);
	}

	var id$8 = function (x) {
	  return x;
	};

	function AbstractPool() {
	  var _this = this;

	  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  var _ref$queueLim = _ref.queueLim;
	  var queueLim = _ref$queueLim === undefined ? 0 : _ref$queueLim;
	  var _ref$concurLim = _ref.concurLim;
	  var concurLim = _ref$concurLim === undefined ? -1 : _ref$concurLim;
	  var _ref$drop = _ref.drop;
	  var drop = _ref$drop === undefined ? 'new' : _ref$drop;

	  Stream.call(this);

	  this._queueLim = queueLim < 0 ? -1 : queueLim;
	  this._concurLim = concurLim < 0 ? -1 : concurLim;
	  this._drop = drop;
	  this._queue = [];
	  this._curSources = [];
	  this._$handleSubAny = function (event) {
	    return _this._handleSubAny(event);
	  };
	  this._$endHandlers = [];
	  this._currentlyAdding = null;

	  if (this._concurLim === 0) {
	    this._emitEnd();
	  }
	}

	inherit(AbstractPool, Stream, {

	  _name: 'abstractPool',

	  _add: function (obj, toObs /* Function | falsey */) {
	    toObs = toObs || id$8;
	    if (this._concurLim === -1 || this._curSources.length < this._concurLim) {
	      this._addToCur(toObs(obj));
	    } else {
	      if (this._queueLim === -1 || this._queue.length < this._queueLim) {
	        this._addToQueue(toObs(obj));
	      } else if (this._drop === 'old') {
	        this._removeOldest();
	        this._add(obj, toObs);
	      }
	    }
	  },
	  _addAll: function (obss) {
	    var _this2 = this;

	    forEach(obss, function (obs) {
	      return _this2._add(obs);
	    });
	  },
	  _remove: function (obs) {
	    if (this._removeCur(obs) === -1) {
	      this._removeQueue(obs);
	    }
	  },
	  _addToQueue: function (obs) {
	    this._queue = concat(this._queue, [obs]);
	  },
	  _addToCur: function (obs) {
	    if (this._active) {

	      // HACK:
	      //
	      // We have two optimizations for cases when `obs` is ended. We don't want
	      // to add such observable to the list, but only want to emit events
	      // from it (if it has some).
	      //
	      // Instead of this hacks, we could just did following,
	      // but it would be 5-8 times slower:
	      //
	      //     this._curSources = concat(this._curSources, [obs]);
	      //     this._subscribe(obs);
	      //

	      // #1
	      // This one for cases when `obs` already ended
	      // e.g., Kefir.constant() or Kefir.never()
	      if (!obs._alive) {
	        if (obs._currentEvent) {
	          this._emit(obs._currentEvent.type, obs._currentEvent.value);
	        }
	        return;
	      }

	      // #2
	      // This one is for cases when `obs` going to end synchronously on
	      // first subscriber e.g., Kefir.stream(em => {em.emit(1); em.end()})
	      this._currentlyAdding = obs;
	      obs.onAny(this._$handleSubAny);
	      this._currentlyAdding = null;
	      if (obs._alive) {
	        this._curSources = concat(this._curSources, [obs]);
	        if (this._active) {
	          this._subToEnd(obs);
	        }
	      }
	    } else {
	      this._curSources = concat(this._curSources, [obs]);
	    }
	  },
	  _subToEnd: function (obs) {
	    var _this3 = this;

	    var onEnd = function () {
	      return _this3._removeCur(obs);
	    };
	    this._$endHandlers.push({ obs: obs, handler: onEnd });
	    obs.onEnd(onEnd);
	  },
	  _subscribe: function (obs) {
	    obs.onAny(this._$handleSubAny);

	    // it can become inactive in responce of subscribing to `obs.onAny` above
	    if (this._active) {
	      this._subToEnd(obs);
	    }
	  },
	  _unsubscribe: function (obs) {
	    obs.offAny(this._$handleSubAny);

	    var onEndI = findByPred(this._$endHandlers, function (obj) {
	      return obj.obs === obs;
	    });
	    if (onEndI !== -1) {
	      obs.offEnd(this._$endHandlers[onEndI].handler);
	      this._$endHandlers.splice(onEndI, 1);
	    }
	  },
	  _handleSubAny: function (event) {
	    if (event.type === VALUE) {
	      this._emitValue(event.value);
	    } else if (event.type === ERROR) {
	      this._emitError(event.value);
	    }
	  },
	  _removeQueue: function (obs) {
	    var index = find(this._queue, obs);
	    this._queue = remove(this._queue, index);
	    return index;
	  },
	  _removeCur: function (obs) {
	    if (this._active) {
	      this._unsubscribe(obs);
	    }
	    var index = find(this._curSources, obs);
	    this._curSources = remove(this._curSources, index);
	    if (index !== -1) {
	      if (this._queue.length !== 0) {
	        this._pullQueue();
	      } else if (this._curSources.length === 0) {
	        this._onEmpty();
	      }
	    }
	    return index;
	  },
	  _removeOldest: function () {
	    this._removeCur(this._curSources[0]);
	  },
	  _pullQueue: function () {
	    if (this._queue.length !== 0) {
	      this._queue = cloneArray(this._queue);
	      this._addToCur(this._queue.shift());
	    }
	  },
	  _onActivation: function () {
	    for (var i = 0, sources = this._curSources; i < sources.length && this._active; i++) {
	      this._subscribe(sources[i]);
	    }
	  },
	  _onDeactivation: function () {
	    for (var i = 0, sources = this._curSources; i < sources.length; i++) {
	      this._unsubscribe(sources[i]);
	    }
	    if (this._currentlyAdding !== null) {
	      this._unsubscribe(this._currentlyAdding);
	    }
	  },
	  _isEmpty: function () {
	    return this._curSources.length === 0;
	  },
	  _onEmpty: function () {},
	  _clear: function () {
	    Stream.prototype._clear.call(this);
	    this._queue = null;
	    this._curSources = null;
	    this._$handleSubAny = null;
	    this._$endHandlers = null;
	  }
	});

	function Merge(sources) {
	  AbstractPool.call(this);
	  this._addAll(sources);
	  this._initialised = true;
	}

	inherit(Merge, AbstractPool, {

	  _name: 'merge',

	  _onEmpty: function () {
	    if (this._initialised) {
	      this._emitEnd();
	    }
	  }
	});

	function merge(observables) {
	  return observables.length === 0 ? never() : new Merge(observables);
	}

	function S$33(generator) {
	  var _this = this;

	  Stream.call(this);
	  this._generator = generator;
	  this._source = null;
	  this._inLoop = false;
	  this._iteration = 0;
	  this._$handleAny = function (event) {
	    return _this._handleAny(event);
	  };
	}

	inherit(S$33, Stream, {

	  _name: 'repeat',

	  _handleAny: function (event) {
	    if (event.type === END) {
	      this._source = null;
	      this._getSource();
	    } else {
	      this._emit(event.type, event.value);
	    }
	  },
	  _getSource: function () {
	    if (!this._inLoop) {
	      this._inLoop = true;
	      var generator = this._generator;
	      while (this._source === null && this._alive && this._active) {
	        this._source = generator(this._iteration++);
	        if (this._source) {
	          this._source.onAny(this._$handleAny);
	        } else {
	          this._emitEnd();
	        }
	      }
	      this._inLoop = false;
	    }
	  },
	  _onActivation: function () {
	    if (this._source) {
	      this._source.onAny(this._$handleAny);
	    } else {
	      this._getSource();
	    }
	  },
	  _onDeactivation: function () {
	    if (this._source) {
	      this._source.offAny(this._$handleAny);
	    }
	  },
	  _clear: function () {
	    Stream.prototype._clear.call(this);
	    this._generator = null;
	    this._source = null;
	    this._$handleAny = null;
	  }
	});

	function repeat (generator) {
	  return new S$33(generator);
	}

	function concat$1(observables) {
	  return repeat(function (index) {
	    return observables.length > index ? observables[index] : false;
	  }).setName('concat');
	}

	function Pool() {
	  AbstractPool.call(this);
	}

	inherit(Pool, AbstractPool, {

	  _name: 'pool',

	  plug: function (obs) {
	    this._add(obs);
	    return this;
	  },
	  unplug: function (obs) {
	    this._remove(obs);
	    return this;
	  }
	});

	function FlatMap(source, fn, options) {
	  var _this = this;

	  AbstractPool.call(this, options);
	  this._source = source;
	  this._fn = fn;
	  this._mainEnded = false;
	  this._lastCurrent = null;
	  this._$handleMain = function (event) {
	    return _this._handleMain(event);
	  };
	}

	inherit(FlatMap, AbstractPool, {
	  _onActivation: function () {
	    AbstractPool.prototype._onActivation.call(this);
	    if (this._active) {
	      this._source.onAny(this._$handleMain);
	    }
	  },
	  _onDeactivation: function () {
	    AbstractPool.prototype._onDeactivation.call(this);
	    this._source.offAny(this._$handleMain);
	    this._hadNoEvSinceDeact = true;
	  },
	  _handleMain: function (event) {

	    if (event.type === VALUE) {
	      // Is latest value before deactivation survived, and now is 'current' on this activation?
	      // We don't want to handle such values, to prevent to constantly add
	      // same observale on each activation/deactivation when our main source
	      // is a `Kefir.conatant()` for example.
	      var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;
	      if (!sameCurr) {
	        this._add(event.value, this._fn);
	      }
	      this._lastCurrent = event.value;
	      this._hadNoEvSinceDeact = false;
	    }

	    if (event.type === ERROR) {
	      this._emitError(event.value);
	    }

	    if (event.type === END) {
	      if (this._isEmpty()) {
	        this._emitEnd();
	      } else {
	        this._mainEnded = true;
	      }
	    }
	  },
	  _onEmpty: function () {
	    if (this._mainEnded) {
	      this._emitEnd();
	    }
	  },
	  _clear: function () {
	    AbstractPool.prototype._clear.call(this);
	    this._source = null;
	    this._lastCurrent = null;
	    this._$handleMain = null;
	  }
	});

	function FlatMapErrors(source, fn) {
	  FlatMap.call(this, source, fn);
	}

	inherit(FlatMapErrors, FlatMap, {

	  // Same as in FlatMap, only VALUE/ERROR flipped

	  _handleMain: function (event) {

	    if (event.type === ERROR) {
	      var sameCurr = this._activating && this._hadNoEvSinceDeact && this._lastCurrent === event.value;
	      if (!sameCurr) {
	        this._add(event.value, this._fn);
	      }
	      this._lastCurrent = event.value;
	      this._hadNoEvSinceDeact = false;
	    }

	    if (event.type === VALUE) {
	      this._emitValue(event.value);
	    }

	    if (event.type === END) {
	      if (this._isEmpty()) {
	        this._emitEnd();
	      } else {
	        this._mainEnded = true;
	      }
	    }
	  }
	});

	function createConstructor$1(BaseClass, name) {
	  return function AnonymousObservable(primary, secondary, options) {
	    var _this = this;

	    BaseClass.call(this);
	    this._primary = primary;
	    this._secondary = secondary;
	    this._name = primary._name + '.' + name;
	    this._lastSecondary = NOTHING;
	    this._$handleSecondaryAny = function (event) {
	      return _this._handleSecondaryAny(event);
	    };
	    this._$handlePrimaryAny = function (event) {
	      return _this._handlePrimaryAny(event);
	    };
	    this._init(options);
	  };
	}

	function createClassMethods$1(BaseClass) {
	  return {
	    _init: function () {},
	    _free: function () {},
	    _handlePrimaryValue: function (x) {
	      this._emitValue(x);
	    },
	    _handlePrimaryError: function (x) {
	      this._emitError(x);
	    },
	    _handlePrimaryEnd: function () {
	      this._emitEnd();
	    },
	    _handleSecondaryValue: function (x) {
	      this._lastSecondary = x;
	    },
	    _handleSecondaryError: function (x) {
	      this._emitError(x);
	    },
	    _handleSecondaryEnd: function () {},
	    _handlePrimaryAny: function (event) {
	      switch (event.type) {
	        case VALUE:
	          return this._handlePrimaryValue(event.value);
	        case ERROR:
	          return this._handlePrimaryError(event.value);
	        case END:
	          return this._handlePrimaryEnd(event.value);
	      }
	    },
	    _handleSecondaryAny: function (event) {
	      switch (event.type) {
	        case VALUE:
	          return this._handleSecondaryValue(event.value);
	        case ERROR:
	          return this._handleSecondaryError(event.value);
	        case END:
	          this._handleSecondaryEnd(event.value);
	          this._removeSecondary();
	      }
	    },
	    _removeSecondary: function () {
	      if (this._secondary !== null) {
	        this._secondary.offAny(this._$handleSecondaryAny);
	        this._$handleSecondaryAny = null;
	        this._secondary = null;
	      }
	    },
	    _onActivation: function () {
	      if (this._secondary !== null) {
	        this._secondary.onAny(this._$handleSecondaryAny);
	      }
	      if (this._active) {
	        this._primary.onAny(this._$handlePrimaryAny);
	      }
	    },
	    _onDeactivation: function () {
	      if (this._secondary !== null) {
	        this._secondary.offAny(this._$handleSecondaryAny);
	      }
	      this._primary.offAny(this._$handlePrimaryAny);
	    },
	    _clear: function () {
	      BaseClass.prototype._clear.call(this);
	      this._primary = null;
	      this._secondary = null;
	      this._lastSecondary = null;
	      this._$handleSecondaryAny = null;
	      this._$handlePrimaryAny = null;
	      this._free();
	    }
	  };
	}

	function createStream$1(name, mixin) {
	  var S = createConstructor$1(Stream, name);
	  inherit(S, Stream, createClassMethods$1(Stream), mixin);
	  return S;
	}

	function createProperty$1(name, mixin) {
	  var P = createConstructor$1(Property, name);
	  inherit(P, Property, createClassMethods$1(Property), mixin);
	  return P;
	}

	var mixin$26 = {
	  _handlePrimaryValue: function (x) {
	    if (this._lastSecondary !== NOTHING && this._lastSecondary) {
	      this._emitValue(x);
	    }
	  },
	  _handleSecondaryEnd: function () {
	    if (this._lastSecondary === NOTHING || !this._lastSecondary) {
	      this._emitEnd();
	    }
	  }
	};

	var S$34 = createStream$1('filterBy', mixin$26);
	var P$29 = createProperty$1('filterBy', mixin$26);

	function filterBy(primary, secondary) {
	  return new (primary._ofSameType(S$34, P$29))(primary, secondary);
	}

	var id2 = function (_, x) {
	  return x;
	};

	function sampledBy(passive, active, combinator) {
	  var _combinator = combinator ? function (a, b) {
	    return combinator(b, a);
	  } : id2;
	  return combine([active], [passive], _combinator).setName(passive, 'sampledBy');
	}

	var mixin$27 = {
	  _handlePrimaryValue: function (x) {
	    if (this._lastSecondary !== NOTHING) {
	      this._emitValue(x);
	    }
	  },
	  _handleSecondaryEnd: function () {
	    if (this._lastSecondary === NOTHING) {
	      this._emitEnd();
	    }
	  }
	};

	var S$35 = createStream$1('skipUntilBy', mixin$27);
	var P$30 = createProperty$1('skipUntilBy', mixin$27);

	function skipUntilBy(primary, secondary) {
	  return new (primary._ofSameType(S$35, P$30))(primary, secondary);
	}

	var mixin$28 = {
	  _handleSecondaryValue: function () {
	    this._emitEnd();
	  }
	};

	var S$36 = createStream$1('takeUntilBy', mixin$28);
	var P$31 = createProperty$1('takeUntilBy', mixin$28);

	function takeUntilBy(primary, secondary) {
	  return new (primary._ofSameType(S$36, P$31))(primary, secondary);
	}

	var mixin$29 = {
	  _init: function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var _ref$flushOnEnd = _ref.flushOnEnd;
	    var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;

	    this._buff = [];
	    this._flushOnEnd = flushOnEnd;
	  },
	  _free: function () {
	    this._buff = null;
	  },
	  _flush: function () {
	    if (this._buff !== null) {
	      this._emitValue(this._buff);
	      this._buff = [];
	    }
	  },
	  _handlePrimaryEnd: function () {
	    if (this._flushOnEnd) {
	      this._flush();
	    }
	    this._emitEnd();
	  },
	  _onActivation: function () {
	    this._primary.onAny(this._$handlePrimaryAny);
	    if (this._alive && this._secondary !== null) {
	      this._secondary.onAny(this._$handleSecondaryAny);
	    }
	  },
	  _handlePrimaryValue: function (x) {
	    this._buff.push(x);
	  },
	  _handleSecondaryValue: function () {
	    this._flush();
	  },
	  _handleSecondaryEnd: function () {
	    if (!this._flushOnEnd) {
	      this._emitEnd();
	    }
	  }
	};

	var S$37 = createStream$1('bufferBy', mixin$29);
	var P$32 = createProperty$1('bufferBy', mixin$29);

	function bufferBy(primary, secondary, options /* optional */) {
	  return new (primary._ofSameType(S$37, P$32))(primary, secondary, options);
	}

	var mixin$30 = {
	  _init: function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var _ref$flushOnEnd = _ref.flushOnEnd;
	    var flushOnEnd = _ref$flushOnEnd === undefined ? true : _ref$flushOnEnd;
	    var _ref$flushOnChange = _ref.flushOnChange;
	    var flushOnChange = _ref$flushOnChange === undefined ? false : _ref$flushOnChange;

	    this._buff = [];
	    this._flushOnEnd = flushOnEnd;
	    this._flushOnChange = flushOnChange;
	  },
	  _free: function () {
	    this._buff = null;
	  },
	  _flush: function () {
	    if (this._buff !== null) {
	      this._emitValue(this._buff);
	      this._buff = [];
	    }
	  },
	  _handlePrimaryEnd: function () {
	    if (this._flushOnEnd) {
	      this._flush();
	    }
	    this._emitEnd();
	  },
	  _handlePrimaryValue: function (x) {
	    this._buff.push(x);
	    if (this._lastSecondary !== NOTHING && !this._lastSecondary) {
	      this._flush();
	    }
	  },
	  _handleSecondaryEnd: function () {
	    if (!this._flushOnEnd && (this._lastSecondary === NOTHING || this._lastSecondary)) {
	      this._emitEnd();
	    }
	  },
	  _handleSecondaryValue: function (x) {
	    if (this._flushOnChange && !x) {
	      this._flush();
	    }

	    // from default _handleSecondaryValue
	    this._lastSecondary = x;
	  }
	};

	var S$38 = createStream$1('bufferWhileBy', mixin$30);
	var P$33 = createProperty$1('bufferWhileBy', mixin$30);

	function bufferWhileBy(primary, secondary, options /* optional */) {
	  return new (primary._ofSameType(S$38, P$33))(primary, secondary, options);
	}

	var f = function () {
	  return false;
	};
	var t = function () {
	  return true;
	};

	function awaiting(a, b) {
	  var result = merge([map$1(a, t), map$1(b, f)]);
	  result = skipDuplicates(result);
	  result = toProperty(result, f);
	  return result.setName(a, 'awaiting');
	}

	var mixin$31 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleValue: function (x) {
	    var fn = this._fn;
	    var result = fn(x);
	    if (result.convert) {
	      this._emitError(result.error);
	    } else {
	      this._emitValue(x);
	    }
	  }
	};

	var S$39 = createStream('valuesToErrors', mixin$31);
	var P$34 = createProperty('valuesToErrors', mixin$31);

	var defFn = function (x) {
	  return { convert: true, error: x };
	};

	function valuesToErrors(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn : arguments[1];

	  return new (obs._ofSameType(S$39, P$34))(obs, { fn: fn });
	}

	var mixin$32 = {
	  _init: function (_ref) {
	    var fn = _ref.fn;

	    this._fn = fn;
	  },
	  _free: function () {
	    this._fn = null;
	  },
	  _handleError: function (x) {
	    var fn = this._fn;
	    var result = fn(x);
	    if (result.convert) {
	      this._emitValue(result.value);
	    } else {
	      this._emitError(x);
	    }
	  }
	};

	var S$40 = createStream('errorsToValues', mixin$32);
	var P$35 = createProperty('errorsToValues', mixin$32);

	var defFn$1 = function (x) {
	  return { convert: true, value: x };
	};

	function errorsToValues(obs) {
	  var fn = arguments.length <= 1 || arguments[1] === undefined ? defFn$1 : arguments[1];

	  return new (obs._ofSameType(S$40, P$35))(obs, { fn: fn });
	}

	var mixin$33 = {
	  _handleError: function (x) {
	    this._emitError(x);
	    this._emitEnd();
	  }
	};

	var S$41 = createStream('endOnError', mixin$33);
	var P$36 = createProperty('endOnError', mixin$33);

	function endOnError(obs) {
	  return new (obs._ofSameType(S$41, P$36))(obs);
	}

	Observable.prototype.toProperty = function (fn) {
	  return toProperty(this, fn);
	};

	Observable.prototype.changes = function () {
	  return changes(this);
	};

	Observable.prototype.toPromise = function (Promise) {
	  return toPromise(this, Promise);
	};

	Observable.prototype.toESObservable = toESObservable;
	Observable.prototype[$$observable] = toESObservable;

	Observable.prototype.map = function (fn) {
	  return map$1(this, fn);
	};

	Observable.prototype.filter = function (fn) {
	  return filter(this, fn);
	};

	Observable.prototype.take = function (n) {
	  return take(this, n);
	};

	Observable.prototype.takeErrors = function (n) {
	  return takeErrors(this, n);
	};

	Observable.prototype.takeWhile = function (fn) {
	  return takeWhile(this, fn);
	};

	Observable.prototype.last = function () {
	  return last(this);
	};

	Observable.prototype.skip = function (n) {
	  return skip(this, n);
	};

	Observable.prototype.skipWhile = function (fn) {
	  return skipWhile(this, fn);
	};

	Observable.prototype.skipDuplicates = function (fn) {
	  return skipDuplicates(this, fn);
	};

	Observable.prototype.diff = function (fn, seed) {
	  return diff(this, fn, seed);
	};

	Observable.prototype.scan = function (fn, seed) {
	  return scan(this, fn, seed);
	};

	Observable.prototype.flatten = function (fn) {
	  return flatten(this, fn);
	};

	Observable.prototype.delay = function (wait) {
	  return delay(this, wait);
	};

	Observable.prototype.throttle = function (wait, options) {
	  return throttle(this, wait, options);
	};

	Observable.prototype.debounce = function (wait, options) {
	  return debounce(this, wait, options);
	};

	Observable.prototype.mapErrors = function (fn) {
	  return mapErrors(this, fn);
	};

	Observable.prototype.filterErrors = function (fn) {
	  return filterErrors(this, fn);
	};

	Observable.prototype.ignoreValues = function () {
	  return ignoreValues(this);
	};

	Observable.prototype.ignoreErrors = function () {
	  return ignoreErrors(this);
	};

	Observable.prototype.ignoreEnd = function () {
	  return ignoreEnd(this);
	};

	Observable.prototype.beforeEnd = function (fn) {
	  return beforeEnd(this, fn);
	};

	Observable.prototype.slidingWindow = function (max, min) {
	  return slidingWindow(this, max, min);
	};

	Observable.prototype.bufferWhile = function (fn, options) {
	  return bufferWhile(this, fn, options);
	};

	Observable.prototype.bufferWithCount = function (count, options) {
	  return bufferWhile$1(this, count, options);
	};

	Observable.prototype.bufferWithTimeOrCount = function (wait, count, options) {
	  return bufferWithTimeOrCount(this, wait, count, options);
	};

	Observable.prototype.transduce = function (transducer) {
	  return transduce(this, transducer);
	};

	Observable.prototype.withHandler = function (fn) {
	  return withHandler(this, fn);
	};

	Observable.prototype.combine = function (other, combinator) {
	  return combine([this, other], combinator);
	};

	Observable.prototype.zip = function (other, combinator) {
	  return zip([this, other], combinator);
	};

	Observable.prototype.merge = function (other) {
	  return merge([this, other]);
	};

	Observable.prototype.concat = function (other) {
	  return concat$1([this, other]);
	};

	var pool = function () {
	  return new Pool();
	};

	Observable.prototype.flatMap = function (fn) {
	  return new FlatMap(this, fn).setName(this, 'flatMap');
	};
	Observable.prototype.flatMapLatest = function (fn) {
	  return new FlatMap(this, fn, { concurLim: 1, drop: 'old' }).setName(this, 'flatMapLatest');
	};
	Observable.prototype.flatMapFirst = function (fn) {
	  return new FlatMap(this, fn, { concurLim: 1 }).setName(this, 'flatMapFirst');
	};
	Observable.prototype.flatMapConcat = function (fn) {
	  return new FlatMap(this, fn, { queueLim: -1, concurLim: 1 }).setName(this, 'flatMapConcat');
	};
	Observable.prototype.flatMapConcurLimit = function (fn, limit) {
	  return new FlatMap(this, fn, { queueLim: -1, concurLim: limit }).setName(this, 'flatMapConcurLimit');
	};

	Observable.prototype.flatMapErrors = function (fn) {
	  return new FlatMapErrors(this, fn).setName(this, 'flatMapErrors');
	};

	Observable.prototype.filterBy = function (other) {
	  return filterBy(this, other);
	};

	Observable.prototype.sampledBy = function (other, combinator) {
	  return sampledBy(this, other, combinator);
	};

	Observable.prototype.skipUntilBy = function (other) {
	  return skipUntilBy(this, other);
	};

	Observable.prototype.takeUntilBy = function (other) {
	  return takeUntilBy(this, other);
	};

	Observable.prototype.bufferBy = function (other, options) {
	  return bufferBy(this, other, options);
	};

	Observable.prototype.bufferWhileBy = function (other, options) {
	  return bufferWhileBy(this, other, options);
	};

	// Deprecated
	// -----------------------------------------------------------------------------

	var DEPRECATION_WARNINGS = true;
	function dissableDeprecationWarnings() {
	  DEPRECATION_WARNINGS = false;
	}

	function warn(msg) {
	  if (DEPRECATION_WARNINGS && console && typeof console.warn === 'function') {
	    var msg2 = '\nHere is an Error object for you containing the call stack:';
	    console.warn(msg, msg2, new Error());
	  }
	}

	Observable.prototype.awaiting = function (other) {
	  warn('You are using deprecated .awaiting() method, see https://github.com/rpominov/kefir/issues/145');
	  return awaiting(this, other);
	};

	Observable.prototype.valuesToErrors = function (fn) {
	  warn('You are using deprecated .valuesToErrors() method, see https://github.com/rpominov/kefir/issues/149');
	  return valuesToErrors(this, fn);
	};

	Observable.prototype.errorsToValues = function (fn) {
	  warn('You are using deprecated .errorsToValues() method, see https://github.com/rpominov/kefir/issues/149');
	  return errorsToValues(this, fn);
	};

	Observable.prototype.endOnError = function () {
	  warn('You are using deprecated .endOnError() method, see https://github.com/rpominov/kefir/issues/150');
	  return endOnError(this);
	};

	// Exports
	// --------------------------------------------------------------------------

	var Kefir = { Observable: Observable, Stream: Stream, Property: Property, never: never, later: later, interval: interval, sequentially: sequentially,
	  fromPoll: fromPoll, withInterval: withInterval, fromCallback: fromCallback, fromNodeCallback: fromNodeCallback, fromEvents: fromEvents, stream: stream,
	  constant: constant, constantError: constantError, fromPromise: fromPromise, fromESObservable: fromESObservable, combine: combine, zip: zip, merge: merge,
	  concat: concat$1, Pool: Pool, pool: pool, repeat: repeat };

	Kefir.Kefir = Kefir;

	exports.dissableDeprecationWarnings = dissableDeprecationWarnings;
	exports.Kefir = Kefir;
	exports.Observable = Observable;
	exports.Stream = Stream;
	exports.Property = Property;
	exports.never = never;
	exports.later = later;
	exports.interval = interval;
	exports.sequentially = sequentially;
	exports.fromPoll = fromPoll;
	exports.withInterval = withInterval;
	exports.fromCallback = fromCallback;
	exports.fromNodeCallback = fromNodeCallback;
	exports.fromEvents = fromEvents;
	exports.stream = stream;
	exports.constant = constant;
	exports.constantError = constantError;
	exports.fromPromise = fromPromise;
	exports.fromESObservable = fromESObservable;
	exports.combine = combine;
	exports.zip = zip;
	exports.merge = merge;
	exports.concat = concat$1;
	exports.Pool = Pool;
	exports.pool = pool;
	exports.repeat = repeat;
	exports['default'] = Kefir;

}));
}).call(this,typeof global !== ""undefined"" ? global : typeof self !== ""undefined"" ? self : typeof window !== ""undefined"" ? window : {})
},{}],31:[function(require,module,exports){
(function (global){
/**
 * @license
 * lodash <https://lodash.com/>
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.13.1';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used as the `TypeError` message for ""Functions"" methods. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for wrapper metadata. */
  var BIND_FLAG = 1,
      BIND_KEY_FLAG = 2,
      CURRY_BOUND_FLAG = 4,
      CURRY_FLAG = 8,
      CURRY_RIGHT_FLAG = 16,
      PARTIAL_FLAG = 32,
      PARTIAL_RIGHT_FLAG = 64,
      ARY_FLAG = 128,
      REARG_FLAG = 256,
      FLIP_FLAG = 512;

  /** Used to compose bitmasks for comparison styles. */
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 150,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
      reUnescapedHtml = /[&<>""'`]/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|([""'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|([""'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match non-compound words composed of alphanumeric characters. */
  var reBasicWord = /[a-zA-Z0-9]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect hexadecimal string values. */
  var reHasHexPrefix = /^0x/i;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
      rsComboSymbolsRange = '\\u20d0-\\u20f0',
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = ""['\u2019]"",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reComplexWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
    rsUpper + '+' + rsOptUpperContr,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',
    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map latin-1 supplementary letters to basic latin letters. */
  var deburredLetters = {
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '""': '&quot;',
    ""'"": '&#39;',
    '`': '&#96;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '""',
    '&#39;': ""'"",
    '&#96;': '`'
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    ""'"": ""'"",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = checkGlobal(typeof global == 'object' && global);

  /** Detect free variable `self`. */
  var freeSelf = checkGlobal(typeof self == 'object' && self);

  /** Detect `this` as the global object. */
  var thisGlobal = checkGlobal(typeof this == 'object' && this);

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `Map#set` because it doesn't return the map instance in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    var length = args.length;
    switch (length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array ? array.length : 0;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array ? array.length : 0,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to search.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array ? array.length : 0;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to search.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array ? array.length : 0;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array ? array.length : 0;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to search.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    if (value !== value) {
      return indexOfNaN(array, fromIndex);
    }
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array ? array.length : 0;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing wrapper metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a cache value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Checks if `value` is a global object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
   */
  function checkGlobal(value) {
    return (value && value.Object === Object) ? value : null;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        result++;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  function deburrLetter(letter) {
    return deburredLetters[letter];
  }

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeHtmlChar(chr) {
    return htmlEscapes[chr];
  }

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Gets the index at which the first occurrence of `NaN` is found in `array`.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
   */
  function indexOfNaN(array, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      var other = array[index];
      if (other !== other) {
        return index;
      }
    }
    return -1;
  }

  /**
   * Checks if `value` is a host object in IE < 9.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
   */
  function isHostObject(value) {
    // Many host objects are `Object` objects that can coerce to strings
    // despite having improperly defined `toString` methods.
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    if (!(string && reHasComplexSymbol.test(string))) {
      return string.length;
    }
    var result = reComplexSymbol.lastIndex = 0;
    while (reComplexSymbol.test(string)) {
      result++;
    }
    return result;
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return string.match(reComplexSymbol);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  function unescapeHtmlChar(chr) {
    return htmlUnescapes[chr];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Use `context` to stub `Date#getTime` use in `_.now`.
   * var stubbed = _.runInContext({
   *   'Date': function() {
   *     return { 'getTime': stubGetTime };
   *   }
   * });
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  function runInContext(context) {
    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;

    /** Built-in constructor references. */
    var Date = context.Date,
        Error = context.Error,
        Math = context.Math,
        RegExp = context.RegExp,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = context.Array.prototype,
        objectProto = context.Object.prototype,
        stringProto = context.String.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /** Used to resolve the decompiled source of functions. */
    var funcToString = context.Function.prototype.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objectToString = objectProto.toString;

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Reflect = context.Reflect,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        enumerate = Reflect ? Reflect.enumerate : undefined,
        getOwnPropertySymbols = Object.getOwnPropertySymbols,
        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice;

    /** Built-in method references that are mockable. */
    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetPrototype = Object.getPrototypeOf,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = Object.keys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReplace = stringProto.replace,
        nativeReverse = arrayProto.reverse,
        nativeSplit = stringProto.split;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array of at least `200` elements
     * and any iteratees accept only one argument. The heuristic for whether a
     * section qualifies for shortcut fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,
     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,
     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,
     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,
     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,
     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,
     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,
     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,
     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,
     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB). Change the following template settings to use
     * alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
          (arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries ? entries.length : 0;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries ? entries.length : 0;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries ? entries.length : 0;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      return getMapData(this, key)['delete'](key);
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values ? values.length : 0;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      this.__data__ = new ListCache(entries);
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      return this.__data__['delete'](key);
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var cache = this.__data__;
      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {
        cache = this.__data__ = new MapCache(cache.__data__);
      }
      cache.set(key, value);
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function assignInDefaults(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (typeof key == 'number' && value === undefined && !(key in object))) {
        object[key] = value;
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        object[key] = value;
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to search.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths of elements to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          isNil = object == null,
          length = paths.length,
          result = Array(length);

      while (++index < length) {
        result[index] = isNil ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @param {boolean} [isFull] Specify a clone including symbols.
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
      var result;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          if (isHostObject(value)) {
            return object ? value : {};
          }
          result = initCloneObject(isFunc ? {} : value);
          if (!isDeep) {
            return copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, baseClone, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (!isArr) {
        var props = isFull ? getAllKeys(value) : keys(value);
      }
      // Recursively populate clone (susceptible to call stack limits).
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source),
          length = props.length;

      return function(object) {
        if (object == null) {
          return !length;
        }
        var index = length;
        while (index--) {
          var key = props[index],
              predicate = source[key],
              value = object[key];

          if ((value === undefined &&
              !(key in Object(object))) || !predicate(value)) {
            return false;
          }
        }
        return true;
      };
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(proto) {
      return isObject(proto) ? objectCreate(proto) : {};
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts an array
     * of `func` arguments.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Object} args The arguments to provide to `func`.
     * @returns {number} Returns the timer id.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = isKey(path, object) ? [path] : castPath(path);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
      // that are composed entirely of index properties, return `false` for
      // `hasOwnProperty` checks of them.
      return object != null &&
        (hasOwnProperty.call(object, key) ||
          (typeof object == 'object' && key in object && getPrototype(object) === null));
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      if (!isKey(path, object)) {
        path = castPath(path);
        object = parent(object, path);
        path = last(path);
      }
      var func = object == null ? object : object[toKey(path)];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {boolean} [bitmask] The bitmask of comparison flags.
     *  The bitmask may be composed of the following flags:
     *     1 - Unordered comparison
     *     2 - Partial comparison
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, customizer, bitmask, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
     *  for more details.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = arrayTag,
          othTag = arrayTag;

      if (!objIsArr) {
        objTag = getTag(object);
        objTag = objTag == argsTag ? objectTag : objTag;
      }
      if (!othIsArr) {
        othTag = getTag(other);
        othTag = othTag == argsTag ? objectTag : othTag;
      }
      var objIsObj = objTag == objectTag && !isHostObject(object),
          othIsObj = othTag == objectTag && !isHostObject(other),
          isSameTag = objTag == othTag;

      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
      }
      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't skip the constructor
     * property of prototypes or treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      return nativeKeys(Object(object));
    }

    /**
     * The base implementation of `_.keysIn` which doesn't skip the constructor
     * property of prototypes or treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      object = object == null ? object : Object(object);

      var result = [];
      for (var key in object) {
        result.push(key);
      }
      return result;
    }

    // Fallback for IE < 9 with es6-shim.
    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
      baseKeysIn = function(object) {
        return iteratorToArray(enumerate(object));
      };
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      if (!(isArray(source) || isTypedArray(source))) {
        var props = keysIn(source);
      }
      arrayEach(props || source, function(srcValue, key) {
        if (props) {
          key = srcValue;
          srcValue = source[key];
        }
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      });
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        newValue = srcValue;
        if (isArray(srcValue) || isTypedArray(srcValue)) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else {
            isCommon = false;
            newValue = baseClone(srcValue, true);
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            isCommon = false;
            newValue = baseClone(srcValue, true);
          }
          else {
            newValue = objValue;
          }
        }
        else {
          isCommon = false;
        }
      }
      stack.set(srcValue, newValue);

      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      }
      stack['delete'](srcValue);
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} props The property identifiers to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, props) {
      object = Object(object);
      return arrayReduce(props, function(result, key) {
        if (key in object) {
          result[key] = object[key];
        }
        return result;
      }, {});
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, predicate) {
      var index = -1,
          props = getAllKeysIn(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index],
            value = object[key];

        if (predicate(value, key)) {
          result[key] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.property` without support for deep paths.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function baseProperty(key) {
      return function(object) {
        return object == null ? undefined : object[key];
      };
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          }
          else if (!isKey(index, array)) {
            var path = castPath(index),
                object = parent(array, path);

            if (object != null) {
              delete object[toKey(last(path))];
            }
          }
          else {
            delete array[toKey(index)];
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments to numbers.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      path = isKey(path, object) ? [path] : castPath(path);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]);
        if (isObject(nested)) {
          var newValue = value;
          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined;
            if (newValue === undefined) {
              newValue = objValue == null
                ? (isIndex(path[index + 1]) ? [] : {})
                : objValue;
            }
          }
          assignValue(nested, key, newValue);
        }
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop detection.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array ? array.length : low;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array ? array.length : 0,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = isKey(path, object) ? [path] : castPath(path);
      object = parent(object, path);

      var key = toKey(last(path));
      return !(object != null && baseHas(object, key)) || delete object[key];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var index = -1,
          length = arrays.length;

      while (++index < length) {
        var result = result
          ? arrayPush(
              baseDifference(result, arrays[index], iteratee, comparator),
              baseDifference(arrays[index], result, iteratee, comparator)
            )
          : arrays[index];
      }
      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value) {
      return isArray(value) ? value : stringToPath(value);
    }

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var result = new buffer.constructor(buffer.length);
      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
      return arrayReduce(array, addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set, isDeep, cloneFunc) {
      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
      return arrayReduce(array, addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of ""desc"" for descending or ""asc"" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : source[key];

        assignValue(object, key, newValue);
      }
      return object;
    }

    /**
     * Copies own symbol properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return rest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
     *  for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBaseWrapper(func, bitmask, thisArg) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = reHasComplexSymbol.test(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtorWrapper(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
     *  for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurryWrapper(func, bitmask, arity) {
      var Ctor = createCtorWrapper(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurryWrapper(
            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        predicate = getIteratee(predicate, 3);
        if (!isArrayLike(collection)) {
          var props = keys(collection);
        }
        var index = findIndexFunc(props || collection, function(value, key) {
          if (props) {
            key = value;
            value = iterable[key];
          }
          return predicate(value, key, iterable);
        }, fromIndex);
        return index > -1 ? collection[props ? props[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return rest(function(funcs) {
        funcs = baseFlatten(funcs, 1);

        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 &&
              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
     *  for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & ARY_FLAG,
          isBind = bitmask & BIND_FLAG,
          isBindKey = bitmask & BIND_KEY_FLAG,
          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
          isFlip = bitmask & FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtorWrapper(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurryWrapper(
            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtorWrapper(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return 0;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return rest(function(iteratees) {
        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
          ? arrayMap(iteratees[0], baseUnary(getIteratee()))
          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));

        return rest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return reHasComplexSymbol.test(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
     *  for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartialWrapper(func, bitmask, thisArg, partials) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toNumber(start);
        start = start === start ? start : 0;
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toNumber(end) || 0;
        }
        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
     *  for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

      if (!(bitmask & CURRY_BOUND_FLAG)) {
        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return result;
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask of wrapper flags.
     *  The bitmask may be composed of the following flags:
     *     1 - `_.bind`
     *     2 - `_.bindKey`
     *     4 - `_.curry` or `_.curryRight` of a bound function
     *     8 - `_.curry`
     *    16 - `_.curryRight`
     *    32 - `_.partial`
     *    64 - `_.partialRight`
     *   128 - `_.rearg`
     *   256 - `_.ary`
     *   512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] == null
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == BIND_FLAG) {
        var result = createBaseWrapper(func, bitmask, thisArg);
      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
        result = createCurryWrapper(func, bitmask, arity);
      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
        result = createPartialWrapper(func, bitmask, thisArg, partials);
      } else {
        result = createHybridWrapper.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setter(result, newData);
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
     *  for more details.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

      stack.set(array, other);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!seen.has(othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
                  return seen.add(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, customizer, bitmask, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
     *  for more details.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
          // Coerce dates and booleans to numbers, dates to milliseconds and
          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
          // not equal.
          return +object == +other;

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case numberTag:
          // Treat `NaN` vs. `NaN` as equal.
          return (object != +object) ? other != +other : object == +other;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= UNORDERED_COMPARE_FLAG;
          stack.set(object, other);

          // Recursively compare objects (susceptible to call stack limits).
          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
     *  for more details.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
          objProps = keys(object),
          objLength = objProps.length,
          othProps = keys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : baseHas(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      return result;
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate ""iteratee"" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the ""length"" property value of `object`.
     *
     * **Note:** This function is used to avoid a
     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
     * Safari on at least iOS 8.1-8.3 ARM64.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {*} Returns the ""length"" value.
     */
    var getLength = baseProperty('length');

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * Gets the `[[Prototype]]` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {null|Object} Returns the `[[Prototype]]`.
     */
    function getPrototype(value) {
      return nativeGetPrototype(Object(value));
    }

    /**
     * Creates an array of the own enumerable symbol properties of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    function getSymbols(object) {
      // Coerce `object` to an object to avoid non-object errors in V8.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
      return getOwnPropertySymbols(Object(object));
    }

    // Fallback for IE < 11.
    if (!getOwnPropertySymbols) {
      getSymbols = stubArray;
    }

    /**
     * Creates an array of the own and inherited enumerable symbol properties
     * of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function getTag(value) {
      return objectToString.call(value);
    }

    // Fallback for data views, maps, sets, and weak maps in IE 11,
    // for data views in Edge, and promises in Node.js.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = objectToString.call(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : undefined;

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = isKey(path, object) ? [path] : castPath(path);

      var result,
          index = -1,
          length = path.length;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result) {
        return result;
      }
      var length = object ? object.length : 0;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isString(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {Function} cloneFunc The function to clone values.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, cloneFunc, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object, isDeep, cloneFunc);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object, isDeep, cloneFunc);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Creates an array of index keys for `object` values of arrays,
     * `arguments` objects, and strings, otherwise `null` is returned.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array|null} Returns index keys, else `null`.
     */
    function indexKeys(object) {
      var length = object ? object.length : undefined;
      if (isLength(length) &&
          (isArray(object) || isString(object) || isArguments(object))) {
        return baseTimes(length, String);
      }
      return null;
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value);
    }

    /**
     * Checks if `value` is a flattenable array and not a `_.matchesProperty`
     * iteratee shorthand.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenableIteratee(value) {
      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length &&
        (typeof value == 'number' || reIsUint.test(value)) &&
        (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);

      var isCombo =
        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));
      }
      return objValue;
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = (function() {
      var count = 0,
          lastCalled = 0;

      return function(key, value) {
        var stamp = now(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return key;
          }
        } else {
          count = 0;
        }
        return baseSetData(key, value);
      };
    }());

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoize(function(string) {
      var result = [];
      toString(string).replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to process.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array ? array.length : 0;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length,
          args = Array(length ? length - 1 : 0),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return length
        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))
        : [];
    }

    /**
     * Creates an array of unique `array` values not included in the other given
     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. The order of result values is determined by the
     * order they occur in the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = rest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. Result values are chosen from the first array.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = rest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. Result values
     * are chosen from the first array. The comparator is invoked with two arguments:
     * (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = rest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['fred', 30], ['barney', 40]]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs ? pairs.length : 0,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      return dropRight(array, 1);
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. The order of result values is determined by the
     * order they occur in the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = rest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. Result values are chosen from the first array.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = rest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. Result values are chosen
     * from the first array. The comparator is invoked with two arguments:
     * (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = rest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (comparator === last(mapped)) {
        comparator = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array ? nativeJoin.call(array, separator) : '';
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array ? array.length : 0;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = (
          index < 0
            ? nativeMax(length + index, 0)
            : nativeMin(index, length - 1)
        ) + 1;
      }
      if (value !== value) {
        return indexOfNaN(array, index - 1, true);
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = rest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = rest(function(array, indexes) {
      indexes = baseFlatten(indexes, 1);

      var length = array ? array.length : 0,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array ? nativeReverse.call(array) : array;
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array ? array.length : 0;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array ? array.length : 0;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      return drop(array, 1);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false},
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = rest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = rest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = rest(function(arrays) {
      var comparator = last(arrays);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each
     * element is kept.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length)
        ? baseUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length)
        ? baseUniq(array, getIteratee(iteratee))
        : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The comparator is invoked with
     * two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      return (array && array.length)
        ? baseUniq(array, undefined, comparator)
        : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     *
     * _.unzip(zipped);
     * // => [['fred', 'barney'], [30, 40], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = rest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = rest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = rest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The comparator is invoked with
     * two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = rest(function(arrays) {
      var comparator = last(arrays);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    var zip = rest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = rest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * ""tap into"" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to ""pass thru"" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths of elements to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = rest(function(paths) {
      paths = baseFlatten(paths, 1);
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other ""Collections"" methods, objects with a ""length""
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _([1, 2]).forEach(function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        result[key] = [value];
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.includes('pebbles', 'eb');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `methodName` is a function, it's
     * invoked for and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = rest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          isProp = isKey(path),
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of ""desc"" for
     * descending or ""asc"" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getIteratee(predicate, 3);
      return func(collection, function(value, index, collection) {
        return !predicate(value, index, collection);
      });
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var array = isArrayLike(collection) ? collection : values(collection),
          length = array.length;

      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      var index = -1,
          result = toArray(collection),
          length = result.length,
          lastIndex = length - 1;

      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = baseClamp(toInteger(n), 0, length);
      }
      while (++index < n) {
        var rand = baseRandom(index, lastIndex),
            value = result[rand];

        result[rand] = result[index];
        result[index] = value;
      }
      result.length = n;
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      return sampleSize(collection, MAX_ARRAY_LENGTH);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        var result = collection.length;
        return (result && isString(collection)) ? stringSize(collection) : result;
      }
      if (isObjectLike(collection)) {
        var tag = getTag(collection);
        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }
      }
      return keys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
     *  [iteratees=[_.identity]] The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, function(o) { return o.user; });
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     *
     * _.sortBy(users, 'user', function(o) {
     *   return Math.floor(o.age / 10);
     * });
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    var sortBy = rest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
        ? iteratees[0]
        : baseFlatten(iteratees, 1, isFlattenableIteratee);

      return baseOrderBy(collection, iteratees, []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    function now() {
      return Date.now();
    }

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => allows adding up to 4 contacts to the list
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the ""length""
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var greet = function(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * };
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = rest(function(func, thisArg, partials) {
      var bitmask = BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = rest(function(object, key, partials) {
      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the ""length"" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the ""length"" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide an options object to indicate whether `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent calls
     * to the debounced function return the result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
     * on the trailing edge of the timeout only if the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one or more milliseconds.
     */
    var defer = rest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = rest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrapper(func, FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Assign cache to `_.memoize`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        return !predicate.apply(this, arguments);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` invokes `createApplication` once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with arguments transformed by
     * corresponding `transforms`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
     *  [transforms[_.identity]] The functions to transform.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = rest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return rest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the ""length"" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = rest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the ""length"" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = rest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = rest(function(func, indexes) {
      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        switch (start) {
          case 0: return func.call(this, array);
          case 1: return func.call(this, args[0], array);
          case 2: return func.call(this, args[0], args[1], array);
        }
        var otherArgs = Array(start + 1);
        index = -1;
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = array;
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
      return rest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide an options object to indicate whether
     * `func` should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Any additional arguments provided to the function are
     * appended to those provided to the wrapper function. The wrapper is invoked
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      wrapper = wrapper == null ? identity : wrapper;
      return partial(wrapper, value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, false, true);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      return baseClone(value, false, true, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, true, true);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      return baseClone(value, true, true, customizer);
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'fred' };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
    }

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @type {Function}
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    function isArrayBuffer(value) {
      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
    }

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(getLength(value)) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && objectToString.call(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = !Buffer ? stubFalse : function(value) {
      return value instanceof Buffer;
    };

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    function isDate(value) {
      return isObjectLike(value) && objectToString.call(value) == dateTag;
    }

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element,
     *  else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (isArrayLike(value) &&
          (isArray(value) || isString(value) || isFunction(value.splice) ||
            isArguments(value) || isBuffer(value))) {
        return !value.length;
      }
      if (isObjectLike(value)) {
        var tag = getTag(value);
        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return !(nonEnumShadows && keys(value).length);
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are **not** supported.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent,
     *  else `false`.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'fred' };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent,
     *  else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object,
     *  else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      return (objectToString.call(value) == errorTag) ||
        (typeof value.message == 'string' && typeof value.name == 'string');
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number,
     *  else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 8 which returns 'object' for typed array and weak map constructors,
      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
      var tag = isObject(value) ? objectToString.call(value) : '';
      return tag == funcTag || tag == genTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This function is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length,
     *  else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of ""object"".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return !!value && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    function isMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values. This method is
     * equivalent to a `_.matches` function when `source` is partially applied.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'user': 'fred', 'age': 40 };
     *
     * _.isMatch(object, { 'age': 40 });
     * // => true
     *
     * _.isMatch(object, { 'age': 36 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the
     * presence of the `core-js` package because `core-js` circumvents this kind
     * of detection. Despite multiple requests, the `core-js` maintainer has made
     * it clear: any attempt to fix the detection will be obstructed. As a result,
     * we're left with little choice but to throw an error. Unfortunately, this
     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on `core-js`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && objectToString.call(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object,
     *  else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) ||
          objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return (typeof Ctor == 'function' &&
        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    function isRegExp(value) {
      return isObject(value) && objectToString.call(value) == regexpTag;
    }

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer,
     *  else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    function isSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && objectToString.call(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    function isTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified,
     *  else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (iteratorSymbol && value[iteratorSymbol]) {
        return iteratorToArray(value[iteratorSymbol]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = isFunction(value.valueOf) ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.c = 3;
     * }
     *
     * function Bar() {
     *   this.e = 5;
     * }
     *
     * Foo.prototype.d = 4;
     * Bar.prototype.f = 6;
     *
     * _.assign({ 'a': 1 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3, 'e': 5 }
     */
    var assign = createAssigner(function(object, source) {
      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * function Bar() {
     *   this.d = 4;
     * }
     *
     * Foo.prototype.c = 3;
     * Bar.prototype.e = 5;
     *
     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
     */
    var assignIn = createAssigner(function(object, source) {
      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keysIn(source), object);
        return;
      }
      for (var key in source) {
        assignValue(object, key, source[key]);
      }
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths of elements to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = rest(function(object, paths) {
      return baseAt(object, baseFlatten(paths, 1));
    });

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? baseAssign(result, properties) : result;
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
     * // => { 'user': 'barney', 'age': 36 }
     */
    var defaults = rest(function(args) {
      args.push(undefined, assignInDefaults);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
     * // => { 'user': { 'name': 'barney', 'age': 36 } }
     *
     */
    var defaultsDeep = rest(function(args) {
      args.push(undefined, mergeDefaults);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to search.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is used in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = rest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      var isProto = isPrototype(object);
      if (!(isProto || isArrayLike(object))) {
        return baseKeys(object);
      }
      var indexes = indexKeys(object),
          skipIndexes = !!indexes,
          result = indexes || [],
          length = result.length;

      for (var key in object) {
        if (baseHas(object, key) &&
            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
            !(isProto && key == 'constructor')) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      var index = -1,
          isProto = isPrototype(object),
          props = baseKeysIn(object),
          propsLength = props.length,
          indexes = indexKeys(object),
          skipIndexes = !!indexes,
          result = indexes || [],
          length = result.length;

      while (++index < propsLength) {
        var key = props[index];
        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        result[iteratee(value, key, object)] = value;
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        result[key] = iteratee(value, key, object);
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var users = {
     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
     * };
     *
     * var ages = {
     *   'data': [{ 'age': 36 }, { 'age': 40 }]
     * };
     *
     * _.merge(users, ages);
     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with seven arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var other = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable string keyed properties of `object` that are
     * not omitted.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [props] The property identifiers to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = rest(function(object, props) {
      if (object == null) {
        return {};
      }
      props = arrayMap(baseFlatten(props, 1), toKey);
      return basePick(object, baseDifference(getAllKeysIn(object), props));
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      predicate = getIteratee(predicate);
      return basePickBy(object, function(value, key) {
        return !predicate(value, key);
      });
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [props] The property identifiers to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = rest(function(object, props) {
      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Array|Function|Object|string} [predicate=_.identity]
     *  The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      return object == null ? {} : basePickBy(object, getIteratee(predicate));
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = isKey(path, object) ? [path] : castPath(path);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        object = undefined;
        length = 1;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object) || isTypedArray(object);
      iteratee = getIteratee(iteratee, 4);

      if (accumulator == null) {
        if (isArr || isObject(object)) {
          var Ctor = object.constructor;
          if (isArr) {
            accumulator = isArray(object) ? new Ctor : [];
          } else {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          }
        } else {
          accumulator = {};
        }
      }
      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object ? baseValues(object, keys(object)) : [];
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toNumber(start) || 0;
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toNumber(end) || 0;
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toNumber(lower) || 0;
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toNumber(upper) || 0;
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * to basic latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      position -= target.length;
      return position >= 0 && string.indexOf(target, position) == position;
    }

    /**
     * Converts the characters ""&"", ""<"", "">"", '""', ""'"", and ""\`"" in `string` to
     * their corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the "">"" character is escaped for symmetry, characters like
     * "">"" and ""/"" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under ""semi-related fun fact"") for more details.
     *
     * Backticks are escaped because in IE < 9, they can break out of
     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
     * [#133](https://html5sec.org/#133) of the
     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters ""^"", ""$"", ""\"", ""."", ""*"", ""+"",
     * ""?"", ""("", "")"", ""["", ""]"", ""{"", ""}"", and ""|"" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      // Chrome fails to trim leading <BOM> whitespace characters.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      string = toString(string).replace(reTrim, '');
      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (separator == '' && reHasComplexSymbol.test(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return nativeSplit.call(string, separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = baseClamp(toInteger(position), 0, string.length);
      return string.lastIndexOf(baseToString(target), position) == position;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in ""interpolate"" delimiters, HTML-escape interpolated data properties in
     * ""escape"" delimiters, and execute JavaScript in ""evaluate"" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML ""escape"" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The ""evaluate"" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The ""interpolate"" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the ""interpolate"" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML ""escape"" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the ""evaluate"" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in ""evaluate"" delimiters.
     * var compiled = _.template('<% print(""hello "" + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES delimiter as an alternative to the default ""interpolate"" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= ""\\<%- value %\\>"" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of ""greeting.jst"" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     ""main"": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, assignInDefaults);

      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = ""__p += '"";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += ""' +\n__e("" + escapeValue + "") +\n'"";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += ""';\n"" + evaluateValue + "";\n__p += '"";
        }
        if (interpolateValue) {
          source += ""' +\n((__t = ("" + interpolateValue + "")) == null ? '' : __t) +\n'"";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += ""';\n"";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        ""var __t, __p = ''"" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            ""function print() { __p += __j.call(arguments, '') }\n""
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to ""..."".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (reHasComplexSymbol.test(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = rest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the ""length"" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['onClick']);
     * jQuery(element).on('click', view.onClick);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = rest(function(object, methodNames) {
      arrayEach(baseFlatten(methodNames, 1), function(key) {
        key = toKey(key);
        object[key] = bind(object[key], object);
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.constant(true),                _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs ? pairs.length : 0,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return rest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));
     * // => [{ 'user': 'fred', 'age': 40 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, true));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] Functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] Functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument given to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'user': 'fred' };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`. The created function is equivalent to
     * `_.isMatch` with a `source` partially applied.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, true));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * _.find(users, _.matchesProperty('user', 'fred'));
     * // => { 'user': 'fred' }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, true));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = rest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = rest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * A method that returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return rest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
     *  [iteratees=[_.identity]] The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
     *  [predicates=[_.identity]] The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
     *  [predicates=[_.identity]] The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * A method that returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * A method that returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * A method that returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * A method that returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * A method that returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(value));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    });

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    });

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    });

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    });

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Array|Function|Object|string} [iteratee=_.identity]
     *  The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.deburr = deburr;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        var filtered = this.__filtered__;
        if (filtered && !index) {
          return new LazyWrapper(this);
        }
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = this.clone();
        if (filtered) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = rest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      predicate = getIteratee(predicate, 3);
      return this.filter(function(value) {
        return !predicate(value);
      });
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a ""length"" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    if (iteratorSymbol) {
      lodash.prototype[iteratorSymbol] = wrapperToIterator;
    }
    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Expose Lodash on the free variable `window` or `self` when available so it's
  // globally accessible, even when bundled with Browserify, Webpack, etc. This
  // also prevents errors in cases where Lodash is loaded by a script tag in the
  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch
  // for more details. Use `_.noConflict` to remove Lodash from the global object.
  (freeSelf || {})._ = _;

  // Some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the ""underscore"" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== ""undefined"" ? global : typeof self !== ""undefined"" ? self : typeof window !== ""undefined"" ? window : {})
},{}],32:[function(require,module,exports){
(function(){

  function uniqueFilter(value, index, self) {
      return self.indexOf(value) === index;
  }

  function unique(a) {
    return a.filter(uniqueFilter);
  }

  function permutations(v, opts) {
    if (!v) return [];
    opts = opts || {};
    function p(prefix, s, acc) {
      acc = acc || [];
      var n = s.length;
      if (n === 0) return acc.push(prefix);
      for (var i = 0; i < n; i++) {
        p(prefix + s.charAt(i), s.substring(0,i) + s.substring(i+1), acc);
      }
      return opts.unique ? unique(acc) : acc;
    }

    return p('', v);
  }

  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
    module.exports = permutations;
  } else {
    window.permutations = permutations;
  }

})();

},{}],33:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require('_process'))
},{""./_stream_readable"":35,""./_stream_writable"":37,""_process"":11,""core-util-is"":27,""inherits"":28}],34:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{""./_stream_transform"":36,""core-util-is"":27,""inherits"":28}],35:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means ""don't call _read preemptively ever""
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until ""later"" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;
  var ret;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    ret = null;

    // In cases where the decoder did not receive enough data
    // to produce a full chunk, then immediately received an
    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].
    // howMuchToRead will see this and coerce the amount to
    // read to zero (because it's looking at the length of the
    // first <Buffer > in state.buffer), and we'll end up here.
    //
    // This can only happen via state.decoder -- no other venue
    // exists for pushing a zero-length chunk into state.buffer
    // and triggering this behavior. In this case, we return our
    // remaining data and end the stream, if appropriate.
    if (state.length > 0 && state.decoder) {
      ret = fromList(n, state);
      state.length -= ret.length;
    }

    if (state.length === 0)
      endReadable(this);

    return ret;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    process.nextTick(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, ""length"" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    process.nextTick(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      process.nextTick(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    //if (state.objectMode && util.isNullOrUndefined(chunk))
    if (state.objectMode && (chunk === null || chunk === undefined))
      return;
    else if (!state.objectMode && (!chunk || !chunk.length))
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require('_process'))
},{""_process"":11,""buffer"":3,""core-util-is"":27,""events"":6,""inherits"":28,""isarray"":29,""stream"":23,""string_decoder/"":40}],36:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a ""filter"",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{""./_stream_duplex"":33,""core-util-is"":27,""inherits"":28}],37:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until ""later"" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      cb(er);
    });
  else
    cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require('_process'))
},{""./_stream_duplex"":33,""_process"":11,""buffer"":3,""core-util-is"":27,""inherits"":28,""stream"":23}],38:[function(require,module,exports){
(function (process){
var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
if (!process.browser && process.env.READABLE_STREAM === 'disable') {
  module.exports = require('stream');
}

}).call(this,require('_process'))
},{""./lib/_stream_duplex.js"":33,""./lib/_stream_passthrough.js"":34,""./lib/_stream_readable.js"":35,""./lib/_stream_transform.js"":36,""./lib/_stream_writable.js"":37,""_process"":11,""stream"":23}],39:[function(require,module,exports){
var Transform = require('stream').Transform
    || require('readable-stream').Transform;

module.exports = Mean;

function Mean () {
    if (!(this instanceof Mean)) return new Mean();
    this.length = 0;
    this.mean = undefined;
}

Mean.prototype.inspect = function () {
    return '<Mean[' + this.length + '] ' + this.mean + '>';
};

Mean.prototype.push = function (x) {
    var i = ++ this.length;
    var m = this.mean || 0;
    this.mean = m - m / i + x / i;
    return this.mean;
};

Mean.prototype.createStream = function () {
    var self = this;
    var tr = Transform({ objectMode : true });
    tr._transform = function (chunk, _, done) {
        tr.push(self.push(chunk));
        done();
    };
    return tr;
};

Mean.fromList = function (xs) {
    return xs.length === 0
        ? undefined
        : xs.reduce(function (mean, x, i) {
            return mean - mean / (i + 1) + x / (i + 1);
        })
    ;
};

},{""readable-stream"":38,""stream"":23}],40:[function(require,module,exports){
arguments[4][24][0].apply(exports,arguments)
},{""buffer"":3,""dup"":24}],41:[function(require,module,exports){
var kefir = require('kefir')
var possibleFiveGrams = require('../src/possible-5-grams')()
var mean = require('running-mean');
var _ = require('lodash')
/*

  set up a model of the form

    [
    'ffffg': { f: 0 , d: 2 },
     ...
    ]

  for each 5-gram

  */
var model = {}
possibleFiveGrams.map(fg => model[fg] = { f: 0, d: 0})


function updateModelF (fivegram) {
  return function (letter) {
    model[fivegram][letter]+=1
  }
}

function predictNextLetter (fivegram) {
  var m = model[fivegram]
  if (m.f > m.d)
    return 'f'
  return 'd'
}

function isCorrect (prediction, letter) {
  if (prediction === letter)
    return 1
  return 0
}

function predict (inputS) {

  var r = mean();

  var lastSix = inputS
      .slidingWindow(6,6)

  return lastSix.map(s => {
   var fiveGram = _.slice(s, 0,5).join('')
   // predict next value
   var prediction = predictNextLetter(fiveGram)
   //make a fn to update model after i see real value
   var updateModel = updateModelF(fiveGram)
   // get the next letter now
   var last = _.last(s)
   // update my model with it (HACK SIDE-EFFECTY)
   updateModel(last)
   // return whether my prediction was correct
   return isCorrect(prediction, last)
  })
  .map(p => {
    r.push(p)
    return r.mean
  })

}

module.exports = predict

},{""../src/possible-5-grams"":42,""kefir"":30,""lodash"":31,""running-mean"":39}],42:[function(require,module,exports){
var _ = require('lodash'),
    permutations = require('permutation')

// generates all 32 possible 5-grams of vocabulary 'f' 'd'
module.exports = () => {
  var r = _.range(1,7).map(i => {
    var fs = Array(i).join('f')
    var ds = Array(7-i).join('d')
    return fs+ds
  }).map(ls => permutations(ls, {unique:true}))

  return _.flatten(r)
}

},{""lodash"":31,""permutation"":32}]},{},[26]);
</script>
  Press the 'f' and 'd' keys randomly. As randomly as you can. I'll try to predict which key you'll press next.
  <div id=""avg"">Keep pressing!</div>
  A rolling mean of my accuracy in predicting what key you'll press.

<p>
What's going on here? This is an <a href=""https://github.com/elsehow/aaronson-oracle"">Aaronson Oracle</a>.
</p>

</body>
"
dnetesn,6,11824375,30,1464888588,The Ecologist Who Threw Starfish,story,http://nautil.us/issue/37/currents/the-ecologist-who-threw-starfish-rp,"<!DOCTYPE html>
<!--[if lt IE 7]> <html class=""no-js lt-ie9 lt-ie8 lt-ie7""> <![endif]-->
<!--[if IE 7]> <html class=""no-js lt-ie9 lt-ie8""> <![endif]-->
<!--[if IE 8]> <html class=""no-js lt-ie9""> <![endif]-->
<!--[if gt IE 8]><!--> <html class=""no-js""> <!--<![endif]-->

<head>
    <meta charset=""utf-8"">
	<meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1"">
	<meta name=""viewport"" content=""width=1024"">
	<meta name=""p:domain_verify"" content=""fd249f05278fa781fea9db4c3c5d8c73""/>
	<title>How Sea Otters and Starfish Balance Their Ecosystems</title>
	<meta name=""description"" content=""Even in 1963, one had to go pretty far to find places in the United States that were not disturbed by people. After a good deal of&amp;#8230;"">

	<meta property='og:site_name' content='Nautilus'/>
	<meta property='og:type' content='website'/>
	<meta property='og:url' content='http://nautil.us/issue/37/currents/the-ecologist-who-threw-starfish-rp'/>
	<meta property='og:title' content='The Ecologist Who Threw Starfish - Issue 37: Currents - Nautilus'/>
	<meta property='og:description' content='Even in 1963, one had to go pretty far to find places in the United States that were not disturbed by people. After a good deal of&amp;#8230;'/>
	<meta property='og:image' content='http://static.nautil.us/8589_586ee5cb5f17541372cdd7d54b6414d7.png'/>
		<meta property=""fb:admins"" content=""520129772"" />

	<!-- Favicon -->
	<link rel=""shortcut icon"" href=""/favicon.ico"" />
		
	<!-- Stylesheets B-->
<!--	-->	<link href='http://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>
    <link rel=""stylesheet"" href=""/assets/site/css/style.css?20162202ed""/>

	
	<!-- Header scripts -->
	<script src=""//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js""></script>
    <script>window.jQuery || document.write('<script src=""/assets/site/js/lib/jquery-1.9.1.min.js""><\/script>')</script>


<!--	--><!--		<script type=""text/javascript"" src=""//use.typekit.net/dof7jxl.js""></script>		-->
<!--	--><!--		<script type=""text/javascript"" src=""//use.typekit.net/nos6dfk.js""></script>-->
<!--	--><!--	-->
<!--	<script type=""text/javascript"">try{Typekit.load();}catch(e){}</script>-->

    <script src=""/assets/site/js/lib/jquery.transit.min.js""></script>
    <script src=""/assets/site/js/lib/jquery.lazyload.min.js""></script>
    <script src=""/assets/site/js/lib/modernizr.custom-2.6.2.min.js""></script>
	<script src=""https://checkout.stripe.com/checkout.js""></script>
	<!--[if lt IE 9]>
	<script src=""//html5shiv.googlecode.com/svn/trunk/html5.js""></script>
	<script>window.html5 || document.write('<script src=""/assets/site/js/lib/html5shiv.js""><\/script>')</script>
	<script src=""/assets/site/js/lib/selectivizr.min.1.0.2.js""></script>
	<![endif]-->
		
	<script type=""text/javascript"">
		document.domain = ""nautil.us"";
	</script>

	<link rel=""alternate"" type=""application/atom+xml"" title=""Nautilus RSS"" href=""/rss/all"" />

		<!-- Key Page View pixel -->
	<script type=""text/javascript"">
	var fb_param = {};
	fb_param.pixel_id = '6010074328884';
	fb_param.value = '0.00';
	fb_param.currency = 'USD';
	(function(){
	  var fpw = document.createElement('script');
	  fpw.async = true;
	  fpw.src = '//connect.facebook.net/en_US/fp.js';
	  var ref = document.getElementsByTagName('script')[0];
	  ref.parentNode.insertBefore(fpw, ref);
	})();
	</script>
	<noscript><img height=""1"" width=""1"" alt="""" style=""display:none"" src=""https://www.facebook.com/offsite_event.php?id=6010074328884&amp;value=0&amp;currency=USD"" /></noscript>
	
</head>

<body  class=""page-normal-article page-article cid_1591 noaccess"">


  <!-- Google Analytics -->
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-37494472-1', 'auto');
  ga('send', 'pageview');
</script>
<!-- End Google Analytics -->




<script type='text/javascript'>
	var googletag = googletag || {};
	googletag.cmd = googletag.cmd || [];
	(function() {
	var gads = document.createElement('script');
	gads.async = true;
	gads.type = 'text/javascript';
	var useSSL = 'https:' == document.location.protocol;
	gads.src = (useSSL ? 'https:' : 'http:') + 
	'//www.googletagservices.com/tag/js/gpt.js';
	var node = document.getElementsByTagName('script')[0];
	node.parentNode.insertBefore(gads, node);
	})();
</script>

<!-- Begin comScore Tag -->
<script>
    var _comscore = _comscore || [];
    _comscore.push({ c1: ""2"", c2: ""18298255"" });
    (function() {
        var s = document.createElement(""script""), el = document.getElementsByTagName(""script"")[0]; s.async = true;
        s.src = (document.location.protocol == ""https:"" ? ""https://sb"" : ""http://b"") + "".scorecardresearch.com/beacon.js"";
        el.parentNode.insertBefore(s, el);
    })();
</script>
<noscript>
    <img src=""http://b.scorecardresearch.com/p?c1=2&c2=18298255&cv=2.0&cj=1"" />
</noscript>
<!-- End comScore Tag -->


<div class=""main-wrap"">
	<header id=""main-header"" class=""main-header"">
		
		<div class=""main-nav navtrans"">

	<h2 class=""site-logo""><a class=""navtrans"" href=""/"" title=""Nautilus"">
		Nautilus

	</a></h2>
<img  class=""print-render psite-logo""  src=""http://nautilus-prod.s3.amazonaws.com/nautilus-logo-print.png""/> 

	<nav class=""primary-nav navtrans"" role=""navigation"">
		<ul>
<li data-expnd="".search-bar""  class=""search-bar-trigger""><a href=""#""><i class=""icon-search""></i></a></li>
<li data-expnd="".issue-browser"" class=""issue-browser-trigger""><a href=""/issues"">Issues</a></li>
<li data-expnd="".topic-browser-wrap"" class=""topic-bar-trigger""><a href=""#"">Topics</a></li>
<li><a href=""/blog"">Blog</a></li>
<li  data-expnd="".allsubsshow""  class=""newsletter-signup"">
		<div class=""newsletter-signup-trigger""><span class=""newsletter-thanks"">Thanks for Joining the </span>Newsletter</div>
</li>

<li><a href=""http://www.facebook.com/NautilusMag"" title=""Facebook"" target=""_blank""><i class=""icon-facebook""></i></a></li>
<li><a href=""http://twitter.com/NautilusMag"" title=""Twitter"" target=""_blank""><i class=""icon-twitter""></i></a></li>



<!--            <li><a href=""http://shop.nautil.us/nautilus-quarterly"" target=""_blank"">Print Quarterly</a></li>-->

		</ul>
	</nav>

	

			<div id=""thdcoder"" class=""navtrans"" style=""float: right;width: 176px;height: 79px;margin-left: 3px;position: relative;"">
			<a target= ""_blank"" title=""Nautilus Prime & Print Subscription"" href=""http://shop.nautil.us/nautilus-print-edition/"">
				<img class=""three-dcover"" width=""156"" height=""79"" style=""position:absolute;right:7px;bottom:-1px; ""src=""http://nautilus-prod.s3.amazonaws.com/nav-3d-mag.png"" />
			</a>
		</div>

	







	<ul class=""social-nav navtrans"">
		<li><a href=""http://shop.nautil.us/"" target=""_blank"">Store</a></li>



					<li><a href=""/primeuser"" >Prime

				</a></li>

		

		<!--<li><a href=""#"" >Donate</a></li>-->









	</ul>



</div>

<div id=""allsubs"" class=""allsubsshow subhidden"">
<div class=""subcon"">
 <div class=""centercon"">

     <!-- Begin MailChimp Signup Form -->
     <form action=""//nautil.us6.list-manage.com/subscribe/post?u=e299ad34aa80671ada72a819a&amp;id=dc96ec7a9d"" method=""post"" id=""mc-embedded-subscribe-form"" name=""mc-embedded-subscribe-form"" class=""validate"" target=""_blank"" novalidate>

<table id=""mc-sign"">
    <tr><td class=""mc_header"">
            SELECT NEWSLETTERS AND SUBMIT CONTACT DETAILS&#8230;

        </td>     <td><div id=""close_mail""> </div> </td></tr>
    <tr><td>
            <ul>
                <li><input type=""checkbox"" CHECKED value=""2"" name=""group[1][2]"" id=""mce-group[1]-1-1""><label for=""mce-group[1]-1-1""><strong>New chapters</strong>&nbsp;&nbsp;&nbsp;<span class=""day_dlvr"">Thursdays</span></label><p> Nautilus publishes a new chapter of feature stories on its monthly theme, every Thursday.<br/>Sign up to this list to stay up to date on the latest and greatest.</p></li>
                <li><input type=""checkbox"" CHECKED value=""1"" name=""group[1][1]"" id=""mce-group[1]-1-0""><label for=""mce-group[1]-1-0""><strong>Editor's picks</strong>&nbsp;&nbsp;&nbsp;<span class=""day_dlvr"">Sundays</span></label><p>Read about the Nautilus stories and blogs we've been thinking about over the past week.</p></li>
<!--                <li><input type=""checkbox"" CHECKED value=""4"" name=""group[1][4]"" id=""mce-group[1]-1-2""><label for=""mce-group[1]-1-2""><strong>Three Sentence Science</strong>&nbsp;&nbsp;&nbsp;<span class=""day_dlvr"">Daily</span></label><p>Breaking news and quirky facts from the web, seen from the Nautilus perspective and linked to our own stories.</p></li>-->
            </ul>


    </td>
        <td class=""mc_inputcell"">
            <input type=""text"" value="""" name=""NAME"" class=""required"" placeholder=""YOUR NAME"" id=""mce-NAME""><br/>
            <input type=""email"" value="""" name=""EMAIL"" placeholder = ""YOUR EMAIL"" class=""required email"" id=""mce-EMAIL""><br/>
            <input type=""submit"" value=""Submit"" name=""subscribe"" id=""mc-embedded-subscribe"" class=""button"">


        </td></tr>


</table>




<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
<div style=""position: absolute; left: -5000px;""><input type=""text"" name=""b_e299ad34aa80671ada72a819a_dc96ec7a9d"" tabindex=""-1"" value=""""></div>
</form>


</div>
     </div>

     <!--End mc_embed_signup-->

    </div>
<div class=""issue-browser"">
	<div class=""issue-browser-inner"">
		<ul class=""issue-browser-nav"">
					<li class=""issue-browser-prev disabled""><i class=""icon-left"" title=""Previous""></i></li>
			<li class=""issue-browser-next""><i class=""icon-right"" title=""Next""></i></li>
				</ul>
		<div class=""wrap"">
			<ul class=""issue-browser-carousel"">
				



								<li>

					
																<a href=""/issue/37/currents"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/9148_aad5adc307c4dd7e457509423a7f3734.jpg"" alt=""Currents_TH-1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 037																					</span>
						<h2 class=""issue-title"">Currents</h2>
					</a>
																
																<a href=""/issue/36/aging"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/9122_9fdef890a0a6f2496628626367d39280.png"" alt="" Aging_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 036																					</span>
						<h2 class=""issue-title"">Aging</h2>
					</a>
																
																<a href=""/issue/35/boundaries"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/8544_29301521774ff3cbd26652b2d5c95996.png"" alt=""Boundaries_THUMB-preview"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 035																					</span>
						<h2 class=""issue-title"">Boundaries</h2>
					</a>
																
																<a href=""/issue/34/adaptation"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/8526_7d1e6b02af59efefd53323255d6ded3d.png"" alt=""Adaptation_CURTAIN_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 034																					</span>
						<h2 class=""issue-title"">Adaptation</h2>
					</a>
																
																<a href=""/issue/33/attraction"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/8252_88b057334964aecf7cc034c38011add0.png"" alt=""Attraction_THUMB-F."" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 033																					</span>
						<h2 class=""issue-title"">Attraction</h2>
					</a>
																
																<a href=""/issue/32/space"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/8003_75a7c30fc0063c4952d7eb044a3c0897.jpg"" alt=""Space_TH."" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 032																					</span>
						<h2 class=""issue-title"">Space</h2>
					</a>
																
																<a href=""/issue/31/stress"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/7527_11958dfee29b6709f48a9ba0387a2431.png"" alt=""Stress_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 031																					</span>
						<h2 class=""issue-title"">Stress</h2>
					</a>
																
																<a href=""/issue/30/identity"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/7522_67e235e7f2fa8800d8375409b566e6b6.png"" alt=""Identity_TH-1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 030																					</span>
						<h2 class=""issue-title"">Identity</h2>
					</a>
																
																<a href=""/issue/29/scaling"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/7248_1f4183315762e30ea441d3caef5e64ad.jpg"" alt=""029_Scaling_TH-2"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 029																					</span>
						<h2 class=""issue-title"">Scaling</h2>
					</a>
																
																<a href=""/issue/28/2050"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/7059_84cdde86a4560c17d00c9c437fc2f0da.png"" alt=""028_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 028																					</span>
						<h2 class=""issue-title"">2050</h2>
					</a>
																
																<a href=""/issue/27/dark-matter"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/6845_174b39525e01b7542b3ee27ac7251d2c.jpg"" alt=""027_THUMB_F1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 027																					</span>
						<h2 class=""issue-title"">Dark Matter</h2>
					</a>
																
																<a href=""/issue/26/color"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/6543_12bcd658ef0a540cabc36cdf2b1046fd.jpg"" alt=""026_CURTAIN_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 026																					</span>
						<h2 class=""issue-title"">Color</h2>
					</a>
																
				</li>
							<li>

					
																<a href=""/issue/25/water"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/6262_481fbfa59da2581098e841b7afc122f1.jpg"" alt=""025-Water_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 025																					</span>
						<h2 class=""issue-title"">Water</h2>
					</a>
																
																<a href=""/issue/24/error"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/6074_2281f5c898351dbc6dace2ba201e7948.jpg"" alt=""024_THUMB-F."" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 024																					</span>
						<h2 class=""issue-title"">Error</h2>
					</a>
																
																<a href=""/issue/23/dominoes"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/5755_840d68cbbbfa627cd4635408a6c82009.png"" alt=""023-THUMB-1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 023																					</span>
						<h2 class=""issue-title"">Dominoes</h2>
					</a>
																
																<a href=""/issue/22/slow"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/5502_13d4635deccc230c944e4ff6e03404b5.png"" alt=""022_THUMB-2"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 022																					</span>
						<h2 class=""issue-title"">Slow</h2>
					</a>
																
																<a href=""/issue/21/information"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/5283_5ca359ab1e9e3b9c478459944a2d9ca5.png"" alt=""Information_THUMB-1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 021																					</span>
						<h2 class=""issue-title"">Information</h2>
					</a>
																
																<a href=""/issue/20/creativity"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/5027_853c68de7253cdd55dc37be410a45c60.jpg"" alt=""020_Creativity_THUMB-v2"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 020																					</span>
						<h2 class=""issue-title"">Creativity</h2>
					</a>
																
																<a href=""/issue/101/in-our-nature"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/4848_3e9f0fc9b2f89e043bc6233994dfcf76.jpg"" alt=""SP_Nature_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Special Issue
																					</span>
						<h2 class=""issue-title"">In Our Nature</h2>
					</a>
																
																<a href=""/issue/19/illusions"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/4674_1f5795e7b93f423c397e6f7aaff80133.png"" alt=""019_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 019																					</span>
						<h2 class=""issue-title"">Illusions</h2>
					</a>
																
																<a href=""/issue/18/genius"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/4436_a1f0cf94512f963e5ed4edd9af70e2cc.jpg"" alt=""018_THUMB_1"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 018																					</span>
						<h2 class=""issue-title"">Genius</h2>
					</a>
																
																<a href=""/issue/17/big-bangs"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/4128_770c0e7e2af0db73409aa2431aa8f33e.jpg"" alt=""Cover_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 017																					</span>
						<h2 class=""issue-title"">Big Bangs</h2>
					</a>
																
																<a href=""/issue/16/nothingness"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/3887_9649dec6196d730c5e024f204477d8d1.png"" alt=""16_THUMB."" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 016																					</span>
						<h2 class=""issue-title"">Nothingness</h2>
					</a>
																
																<a href=""/issue/15/turbulence"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/3677_71d7232b9fed020ca23729017873089e.png"" alt=""015_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 015																					</span>
						<h2 class=""issue-title"">Turbulence</h2>
					</a>
																
				</li>
							<li>

					
																<a href=""/issue/14/mutation"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/3468_322f62469c5e3c7dc3e58f5a4d1ea399.png"" alt=""14_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 014																					</span>
						<h2 class=""issue-title"">Mutation</h2>
					</a>
																
																<a href=""/issue/13/symmetry"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/3205_9ef2ed4b7fd2c810847ffa5fa85bce38.png"" alt=""Issue13_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 013																					</span>
						<h2 class=""issue-title"">Symmetry</h2>
					</a>
																
																<a href=""/issue/12/feedback"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/3037_10ce03a1ed01077e3e289f3e53c72813.jpg"" alt=""012_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 012																					</span>
						<h2 class=""issue-title"">Feedback</h2>
					</a>
																
																<a href=""/issue/11/light"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/2713_403ea2e851b9ab04a996beab4a480a30.png"" alt=""011_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 011																					</span>
						<h2 class=""issue-title"">Light</h2>
					</a>
																
																<a href=""/issue/10/mergers--acquisitions"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/2470_7cc234202e98d2722580858573fd0817.png"" alt=""Issue-010_COVER-THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 010																					</span>
						<h2 class=""issue-title"">Mergers & Acquisitions</h2>
					</a>
																
																<a href=""/issue/9/time"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/2220_d2a27e83d429f0dcae6b937cf440aeb1.png"" alt=""Time_COVER_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 009																					</span>
						<h2 class=""issue-title"">Time</h2>
					</a>
																
																<a href=""/issue/8/home"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/1899_6be5336db2c119736cf48f475e051bfe.png"" alt=""SpaceNest_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 008																					</span>
						<h2 class=""issue-title"">Home</h2>
					</a>
																
																<a href=""/issue/7/waste"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/1639_3c1e4bd67169b8153e0047536c9f541e.png"" alt=""007_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 007																					</span>
						<h2 class=""issue-title"">Waste</h2>
					</a>
																
																<a href=""/issue/6/secret-codes"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/1342_5e1b18c4c6a6d31695acbae3fd70ecc6.png"" alt=""Issue6_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 006																					</span>
						<h2 class=""issue-title"">Secret Codes</h2>
					</a>
																
																<a href=""/issue/5/fame"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/1040_537d9b6c927223c796cac288cced29df.png"" alt=""Fame_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 005																					</span>
						<h2 class=""issue-title"">Fame</h2>
					</a>
																
																<a href=""/issue/4/the-unlikely"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/796_35cf8659cfcb13224cbd47863a34fc58.png"" alt=""004_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 004																					</span>
						<h2 class=""issue-title"">The Unlikely</h2>
					</a>
																
																<a href=""/issue/3/in-transit"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/586_605ff764c617d3cd28dbbdd72be8f9a2.png"" alt=""003_thumb"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 003																					</span>
						<h2 class=""issue-title"">In Transit</h2>
					</a>
																
				</li>
							<li>

					
																<a href=""/issue/2/uncertainty"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/288_48aedb8880cab8c45637abc7493ecddd.png"" alt=""Uncertainty_THUMB"" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 002																					</span>
						<h2 class=""issue-title"">Uncertainty</h2>
					</a>
																
																<a href=""/issue/1/what-makes-you-so-special"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/87_c7e1249ffc03eb9ded908c236bd1996d.jpg"" alt="""" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
																								Issue 001																					</span>
						<h2 class=""issue-title"">What Makes You So Special</h2>
					</a>
																
																<a href=""/issue/0/the-story-of-nautilus"">

											
						<div class=""article-thumb"">
							<img src=""http://static.nautil.us/51_2838023a778dfaecdc212708f721b788.jpg"" alt="""" width=""230"" height=""130"" />
						</div>
						<span class=""article-tag"">
															PREVIEW ISSUE
													</span>
						<h2 class=""issue-title"">The Story of Nautilus</h2>
					</a>
																
															
															
															
															
															
															
															
															
															
				</li>
						</ul>
		</div>

		
		<div class=""issue-browser-footer"">
			<a href=""/issues"" class=""button"">See Issue Library</a>


			

		</div>
	</div>
</div>
<div class=""search-bar"">
	<div class=""search-bar-inner"">
		<div class=""wrap"">
			<p class=""search-bar-help"">Enter Search Below&hellip;</p>
						<input id='search_term' type=""text"" maxlength=""255"" name=""search_term"" class=""search-field"" value="""" autocomplete=""off"" />
			<button  class=""search-submit"">Search</button >
		</div>
	</div>
</div>





<div class=""topic-browser-wrap"">
<div class=""topic-browser"">



	<div class=""featured"">
		<div class=""arthdr"">
			TRENDING TOPIC
		</div>
		<a href=""/term/f/Sociology"">
			<div class=""secthdr topic"">
				Sociology			</div>
		</a>
		<a href=""/issue/36/aging/retiring-retirement"">
			<div class=""trending chaptitle"">
				<img src=""http://static.nautil.us/9367_4abe2907e5149b18b63f7e88d5abf475.png""><br>
				Retiring Retirement			</div>
		</a>
	</div>

	<div class=""column secrdmr"">

				<a class=""""  href=""/term/f/Aliens"">Aliens</a><br>
		<a class=""""  href=""/term/f/Animals"">Animals</a><br>
		<a class=""""  href=""/term/f/Anthropology"">Anthropology</a><br>
		<a class=""""  href=""/term/f/Archaeology"">Archaeology</a><br>
		<a class=""""  href=""/term/f/Architecture"">Architecture</a><br>
		<a class=""""  href=""/term/f/Art"">Art</a><br>
		<a class=""""  href=""/term/f/Artificial Intelligence"">Artificial Intelligence</a><br>
		<a class=""""  href=""/term/f/Astronomy"">Astronomy</a><br>
		<a class=""""  href=""/term/f/Chemistry"">Chemistry</a><br>
		<a class=""""  href=""/term/f/Climate"">Climate</a><br>
		<a class=""""  href=""/term/f/Cognitive Science"">Cognitive Science</a><br>
 </div><div class=""column secrdmr"">
		<a class=""""  href=""/term/f/Computer Science"">Computer Science</a><br>
		<a class=""""  href=""/term/f/Cryptography"">Cryptography</a><br>
		<a class=""""  href=""/term/f/Earth Science"">Earth Science</a><br>
		<a class=""""  href=""/term/f/Economics"">Economics</a><br>
		<a class=""""  href=""/term/f/Education"">Education</a><br>
		<a class=""""  href=""/term/f/Environment"">Environment</a><br>
		<a class=""""  href=""/term/f/Evolution"">Evolution</a><br>
		<a class=""""  href=""/term/f/Fiction"">Fiction</a><br>
		<a class=""""  href=""/term/f/Fine Art"">Fine Art</a><br>
		<a class=""""  href=""/term/f/Food"">Food</a><br>
		<a class=""""  href=""/term/f/Genetics"">Genetics</a><br>
 </div><div class=""column secrdmr"">
		<a class=""""  href=""/term/f/Health"">Health</a><br>
		<a class=""""  href=""/term/f/History"">History</a><br>
		<a class=""""  href=""/term/f/Insects"">Insects</a><br>
		<a class=""""  href=""/term/f/Linguistics"">Linguistics</a><br>
		<a class=""""  href=""/term/f/Literature"">Literature</a><br>
		<a class=""""  href=""/term/f/Math"">Math</a><br>
		<a class=""""  href=""/term/f/Microbiology"">Microbiology</a><br>
		<a class=""""  href=""/term/f/Mortality"">Mortality</a><br>
		<a class=""""  href=""/term/f/Music"">Music</a><br>
		<a class=""""  href=""/term/f/Neuroscience"">Neuroscience</a><br>
		<a class=""""  href=""/term/f/Oceanography"">Oceanography</a><br>
 </div><div class=""column secrdmr"">
		<a class=""""  href=""/term/f/Paleontology"">Paleontology</a><br>
		<a class=""""  href=""/term/f/Philosophy"">Philosophy</a><br>
		<a class=""""  href=""/term/f/Physics"">Physics</a><br>
		<a class=""""  href=""/term/f/Psychology"">Psychology</a><br>
		<a class=""""  href=""/term/f/Reproduction"">Reproduction</a><br>
		<a class=""""  href=""/term/f/Science Practice"">Science Practice</a><br>
		<a class=""""  href=""/term/f/Sociology"">Sociology</a><br>
		<a class=""""  href=""/term/f/Sports"">Sports</a><br>
		<a class=""""  href=""/term/f/Technology"">Technology</a><br>
		<a class=""""  href=""/term/f/The Web"">The Web</a><br>
</div>





</div>

</div>
		
	</header>


	<div class=""main-content"">
		


<div id=""popwrap"" class=""navtrans"">







<div class=""Pop"">
<div class=""Pop__head"">
<span>
MOST POPULAR
</span>


 </div>
<div style=""position:relative;width:45px;background-color: transparent;"">
    <div class=""Pop_left--wrap""></div>
    <div class=""Pop__left Pop__nav ""><i id=""popleft"" class=""icon-left Pop__goleft"" title=""Previous""></i></div>
</div>

    <div class=""Pop__wrap"">

        <div class=""Pop__track"">



            
            

<a href=""/issue/36/aging/retiring-retirement?utm_source=ticker&utm_medium=article&utm_campaign=retiring-retirement"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9367_4abe2907e5149b18b63f7e88d5abf475.png)""></div>
<div class=""cel_text"">Retiring Retirement</div>
</div>
</a>

<a href=""/issue/36/aging/will-90-become-the-new-60?utm_source=ticker&utm_medium=article&utm_campaign=will-90-become-the-new-60"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9302_a88aeeec495b4cbe092b4bcfd15b9d9c.png)""></div>
<div class=""cel_text"">Will 90 Become The New 60?</div>
</div>
</a>

<a href=""/issue/36/aging/the-father-of-modern-metal?utm_source=ticker&utm_medium=article&utm_campaign=the-father-of-modern-metal"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9242_a399f7f1554f59cecb453623c1c2a196.png)""></div>
<div class=""cel_text"">The Father of Modern Metal</div>
</div>
</a>

<a href=""/issue/36/aging/the-real-secret-of-youth-is-complexity?utm_source=ticker&utm_medium=article&utm_campaign=the-real-secret-of-youth-is-complexity"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9359_e234e195f3789f05483378c397db1cb5.png)""></div>
<div class=""cel_text"">The Real Secret of Youth Is Complexity</div>
</div>
</a>

<a href=""/issue/36/aging/the-immortality-hype?utm_source=ticker&utm_medium=article&utm_campaign=the-immortality-hype"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9392_93b71ff0836bb95466a9de7aaa34de09.png)""></div>
<div class=""cel_text"">The Immortality Hype</div>
</div>
</a>

<a href=""/issue/36/aging/to-understand-your-past-look-to-your-future?utm_source=ticker&utm_medium=article&utm_campaign=to-understand-your-past-look-to-your-future"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9275_1d936dadf30010a96155a780553d5513.png)""></div>
<div class=""cel_text"">To Understand Your Past, Look to Your Future</div>
</div>
</a>

<a href=""/issue/36/aging/physics-makes-aging-inevitable-not-biology?utm_source=ticker&utm_medium=article&utm_campaign=physics-makes-aging-inevitable-not-biology"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9232_2a51262b66cced52912358502a37a010.png)""></div>
<div class=""cel_text"">Physics Makes Aging Inevitable, Not Biology</div>
</div>
</a>

<a href=""/issue/18/genius/how-crowdsourcing-turned-on-me?utm_source=ticker&utm_medium=article&utm_campaign=how-crowdsourcing-turned-on-me"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/4551_19eca5979ccbb752778e6c5f090dc9b6.png)""></div>
<div class=""cel_text"">How Crowdsourcing Turned On Me</div>
</div>
</a>

<a href=""/issue/36/aging/the-wisdom-of-the-aging-brain?utm_source=ticker&utm_medium=article&utm_campaign=the-wisdom-of-the-aging-brain"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/9190_4ef30115b941a1bcd71ffebb50c69ece.png)""></div>
<div class=""cel_text"">The Wisdom of the Aging Brain</div>
</div>
</a>

<a href=""/issue/22/slow/the-gravekeepers-paradox?utm_source=ticker&utm_medium=article&utm_campaign=the-gravekeepers-paradox"">
<div class=""Pop__cell"">
<div class=""Pop__img"" style=""background-image: url(http://static.nautil.us/5650_675be3930765f553975c0b140bbf0863.png)""></div>
<div class=""cel_text"">The Gravekeeper’s Paradox</div>
</div>
</a>





        </div>
        <div class=""Pop_right--wrap"">

        </div>
        <div class=""Pop__nav Pop__right active"">
            <i class=""icon-right"" id=""popright"" title=""Next""></i>
        </div>
    </div>


    </div>



</div>




	<!--googleon: all-->
	<article itemscope itemtype=""http://schema.org/Article"" id=""main-article-1591"" class=""main-article nomess"">
		<div class=""article-resume"">
			<div class=""wrap"">
				<p class=""article-resume-trigger"">Resume Reading — <span class=""article-title"">The Ecologist Who Threw Starfish</span></p>
				<div class=""close-article-resume"">Close</div>
			</div>
		</div>

		

					<section style=""display:block;"" class=""leaderboard-ad-belt art"">
				<div class=""leaderboard-ad-belt-inner hp"" style=""padding:0px;"">
					<!--ad-970x90-art.php-->
<script type='text/javascript'>
	googletag.cmd.push(function() {
		googletag.defineSlot('/187856151/970x90_ART:LG_leaderboard', [970, 90], 'div-gpt-ad-1463685280858-0').addService(googletag.pubads());
		googletag.pubads().enableSingleRequest();
		googletag.enableServices();
	});
</script>

<div id='div-gpt-ad-1463685280858-0' class=""hpbillboard-ad"" style=""width: 970px;margin: 0px auto;"">
	<!--[if lte IE 9]>
	<script type='text/javascript'>
	$(window).load(function(){
		googletag.cmd.push(function() { googletag.display('div-gpt-ad-1463685280858-0'); });
	});
	</script>
	<![endif]-->

	<!--[if !IE | gt IE 9]>-->
	<script type='text/javascript'>
		googletag.cmd.push(function() { googletag.display('div-gpt-ad-1463685280858-0'); });
	</script>
	<!--<![endif]-->
</div>




				</div>
			</section>

		

		<header class=""article-header"">

							


					<div class=""banner"" style=""position:relative; background-image: url(http://static.nautil.us/8589_586ee5cb5f17541372cdd7d54b6414d7.png);"">
						<img itemprop=""image"" style=""display:none;"" src=""http://static.nautil.us/8589_586ee5cb5f17541372cdd7d54b6414d7.png"" alt=""Nautilus""/>

						
												

					</div>





								

					
					<span class=""article-tag"">

			<table class=""termtag""><tr>
					<td><a href=""/term/l/Biology"">Biology</a></td>

					<td class=""article-tag-pipe"">&nbsp;</td><td class=""article-tag-focus""><a href=""/term/f/Environment"">Environment</a></td>
				</tr></table>

		</span>
								<hgroup>
					



					<h1 itemprop=""headline"" class=""article-title"">The Ecologist Who Threw Starfish</h1>
											<h2 itemprop=""alternativeHeadline"" class=""article-subtitle"">
							Robert Paine showed us the surprising importance of predators.						</h2>
									</hgroup>

			

														<div class=""byline"">
					<span style=""display:none;"" itemprop=""author"">Sean B. Carroll</span>

					<span>By Sean B. Carroll</span>
											<span> Illustration by Aad Goudappel</span>
										June 2, 2016
				</div>
			
			


<section class=""social-tools"">
	<ul>


		<li><a href=""#"" class=""jump-to-comments""><i class=""icon-comments""></i> Add a comment </a></li>

         <li><a href=""https://www.facebook.com/sharer/sharer.php?s=100&p%5Bsite_name%5D=Nautilus&p%5Btype%5D=website&p%5Burl%5D=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp&p%5Btitle%5D=The+Ecologist+Who+Threw+Starfish+-+Issue+37%3A+Currents+-+Nautilus&p%5Bsummary%5D=Even+in+1963%2C+one+had+to+go+pretty+far+to+find+places+in+the+United+States+that+were+not+disturbed+by+people.+After+a+good+deal+of%26%238230%3B&p%5Bimages%5D%5B0%5D=http%3A%2F%2Fstatic.nautil.us%2F8591_cd6b73b67c77edeaff94e24b961119dd.png"" target=""_blank""  class=""fb-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""facebook"" data-tract=""social_share""><i class=""icon-facebook""></i> Facebook</a></li>
        <li><a href=""https://twitter.com/share?url=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp&text=The+Ecologist+Who+Threw+Starfish&via=NautilusMag"" target=""_blank""  class=""tw-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""twitter"" data-tract=""social_share""><i class=""icon-twitter""></i> Twitter</a></li>
        <li><a href=""mailto:?subject=Nautilus: The Ecologist Who Threw Starfish&body=I saw this article on Nautil.us and wanted to share it with you.%0D%0A---------------------------%0D%0AThe Ecologist Who Threw Starfish%0D%0AEnvironment:Robert Paine showed us the surprising importance of predators.%0D%0A%0D%0AEven in 1963, one had to go pretty far to find places in the United States that were not disturbed by people.%0D%0A%0D%0Ahttp://nautil.us/issue/37/currents/the-ecologist-who-threw-starfish-rp"" class=""email-share obnd_lnk"" data-tract=""shared"" data-trlbl=""emailed"" data-trval=""the-ecologist-who-threw-starfish-rp""><i class=""icon-envelope""></i> Email</a></li>        <li id=""share_msc""><a><i class=""icon-shareall""></i> Sharing</a>

        <li class=""more_soc closedsoc""><a href=""http://www.reddit.com/submit?title=The+Ecologist+Who+Threw+Starfish&url=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp"" target=""_blank"" class=""rddt-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""reddit"" data-tract=""social_share""><i class=""icon-reddit""></i> Reddit</a></li>
        <li class=""more_soc closedsoc""><a href=""http://www.stumbleupon.com/badge/?url=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp"" target=""_blank"" class=""stb-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""stumbleupon"" data-tract=""social_share""><i class=""icon-stumbleupon""></i> Stumbleupon</a></li>
        <li class=""more_soc closedsoc""><a href=""http://tumblr.com/share?s=&v=3&t=The+Ecologist+Who+Threw+Starfish&u=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp"" target=""_blank"" class=""tmb-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""tumbler"" data-tract=""social_share""><i class=""icon-tumbler""></i> Tumblr</a></li>
       <li class=""more_soc closedsoc""><a href=""https://getpocket.com/save?url=http%3A%2F%2Fnautil.us%2Fissue%2F37%2Fcurrents%2Fthe-ecologist-who-threw-starfish-rp&title=The+Ecologist+Who+Threw+Starfish"" target=""_blank""  data-lang=""en"" class=""pocket-share obnd_lnk"" data-trval=""the-ecologist-who-threw-starfish-rp"" data-trlbl=""pocket"" data-tract=""social_share""><i class=""icon-pocket""></i> Pocket</a></li>


		<!--<li><a href=""#""><i class=""icon-issue""></i> Order This Issue</a></li>-->	</ul>
</section>
		</header>







		
		
		<span itemprop=""description"" style=""display:none;"">Even in 1963, one had to go pretty far to find places in the United States that were not disturbed by people. After a good deal of&#8230;By Sean B. Carroll </span>
		<meta itemprop=""datePublished"" style=""display:none;"" content=""2016-06-02 03:00:00""/>


		<div class=""wrap"">

			<div itemprop=""articleBody"" class=""page-content"">
				<p><span class=""dropcap"">E</span>ven in 1963, one had to go pretty far to find places in the United States that were not disturbed by people. After a good deal of searching, Robert Paine, a newly appointed assistant professor of zoology at the University of Washington in Seattle, found a great prospect at the far northwestern corner of the lower 48 states.</p> <p>On a field trip with students to the Pacific Coast, Paine wound up at Mukkaw Bay, at the tip of the Olympic Peninsula. The curved bay’s sand and gravel beach faced west into the open ocean, and was dotted with large outcrops. Among the rocks, Paine discovered a thriving community. The tide pools were full of colorful creatures—green anemones, purple sea urchins, pink seaweed, bright red Pacific blood starfish, as well as sponges, limpets, and chitons. Along the rock faces, the low tide exposed bands of small acorn barnacles, and large, stalked goose barnacles, beds of black California mussels, and some very large, purple and orange starfish, called <i>Pisaster ochraceus</i>.</p> <p>“Wow, this is what I have been looking for,” he thought.</p> <figure><iframe width=""733"" height=""412"" src=""https://www.youtube.com/embed/hRGg5it5FMI"" frameborder=""0"" allowfullscreen=""""></iframe><figcaption><span class=""caption"">Some Animals Are More Equal than Others: Keystone Species and Trophic Cascades </span><span class=""credit"">HHMI BioInteractive Video </span></figcaption></figure> <p>The next month, June 1963, he made the four-hour journey back to Mukkaw from Seattle, first crossing Puget Sound by ferry, then driving along the coastline of the Straits of Juan de Fuca, then onto the lands of the Makah Nation, and out to the cove of Mukkaw Bay. At low tide, he scampered onto a rocky outcrop.</p> <p>With a crowbar in hand and mustering all of the leverage he could with his 6-foot, 6-inch frame, he pried loose every purple or orange starfish on the slab, grabbed them, and hurled them as far as he could out into the bay.</p> <p>So began one of the most important experiments in the history of ecology.</p> <p>The 1960s were a time of revolution, but it was not all just sex, drugs, and rock and roll. Inside laboratories across the world, scientists were plumbing the depths of the gene to decipher the genetic code and the molecular rules of life, sparking a revolution that would gather dozens of Nobel Prizes and ultimately transform medicine.</p> <p>But largely outside of this spotlight, a few other biologists had started asking some simple, seemingly naïve questions about the wider world: Why is the planet green? Why don’t the animals eat all of the food? And what happens when certain animals are removed from a place? These questions led to the discovery that, just as there are molecular rules that regulate the numbers of different kinds of molecules and cells in the body, there are ecological rules that regulate the numbers and kinds of animals and plants in a given place. And these rules may have as much or more to do with our future welfare than all the molecular rules we may ever discover.</p> <figure class=""breaker-image"" data-alt=""Carrol_BR-1"" data-title=""star hurler"" data-capper=""Robert Paine at Mukkaw Bay, on the Olympic Peninsula in Washington, in 1974, and again recently. To understand the role of predatory starfish he hurled them from an area and later returned to assess the sea life without them."" data-credits=""Left: Bob Paine / Alamy.com ; Right: Kevin Schafer / Alamy Stock Photo""><img src=""http://static.nautil.us/8594_2bba9f4124283edd644799e0cecd45ca.png"" width=""733"" alt=""""><figcaption><span class=""caption""><strong>star hurler:</strong> Robert Paine at Mukkaw Bay, on the Olympic Peninsula in Washington, in 1974, and again recently. To understand the role of predatory starfish he hurled them from an area and later returned to assess the sea life without them.</span><span class=""credit"">Left: Bob Paine / Alamy.com ; Right: Kevin Schafer / Alamy Stock Photo</span></figcaption></figure><p><b>Why Is the Planet Green?</b></p> <p>Paine’s journey to Mukkaw Bay and its starfish was a circuitous one. Born and raised in Cambridge, Massachusetts, Paine’s interests in nature were fueled by exploring the New England woods. His first love was bird-watching, with butterflies and salamanders close seconds. Paine was inspired by the writings of prominent naturalists, who opened his eyes to the drama of wildlife. He was as enthralled by intimate accounts of spider behavior as by Jim Corbett’s hair-raising tales of tracking down tigers and leopards in rural India, in <i>Man-Eaters of Kumaon</i>.</p> <p>After enrolling at Harvard, and inspired by several famous paleontologists on the faculty, Paine developed an intense new interest in animal fossils. He was so fascinated by the marine animals that lived in the seas more than 400 million years ago that he decided to study geology and paleontology in graduate school at the University of Michigan.</p> <p>The course requirements entailed rather dry surveys of various animal “ologies”—ichthyology (fishes), herpetology (reptiles and amphibians), and so forth that Paine found very boring. One exception was a course on the natural history of freshwater invertebrates taught by ecologist Fred Smith. Paine appreciated how the professor provoked his students to think.</p><blockquote class=""pull-quote""><p>He pried loose every purple or orange starfish on the slab, grabbed them, and hurled them as far as he could.</p> </blockquote><p>One memorable spring day, the sort of day when professors don’t feel like teaching and students don’t want to be inside, Smith told the class, “We are going to stay in this room.” He looked outside at a tree that was just getting its leaves.</p> <p> “Why is that tree green?” Smith asked, looking out the window.</p> <p>“Chlorophyll,” a student replied, correctly naming the leaf pigment, but Smith was heading down a different path.</p> <p>“Why isn’t all of its greenery eaten?” Smith continued. It was such a simple question, but Smith showed how even such basic things were not known. “There is a host of insects out there. Maybe something is controlling them?” he mused.</p> <p>At the end of his first year, Smith sensed Paine’s unhappiness with geology, and suggested that he consider ecology instead. “Why don’t you be my student?” he asked.</p> <p>It was a major change in direction, and there was a catch. Paine proposed to study some fossil animals from the Devonian period in nearby rocks. Smith said, “No way.” Paine had to study living, not extinct creatures. Paine agreed, and Smith became his adviser.</p> <figure class=""breaker-image"" data-alt=""Carrol_BR"" data-title=""null"" data-capper=""null"" data-credits=""null""><img src=""http://static.nautil.us/8592_670c26185a3783678135b4697f7dbd1a.png"" width=""733"" alt=""""></figure> <p>Smith had long been interested in brachiopods or “lamp shells,” marine animals with an upper and lower shell, joined at a hinge. Paine knew about the animals because they were abundant in the fossil record, but their present-day ecology was not well known. Paine’s first task was to find living forms. Lacking a nearby ocean, Paine made scouting trips to Florida in 1957 and 1958, and found some promising locations. With Smith’s approval, he began what he called his “graduate-student sabbatical.” In June 1959, he drove back to Florida and began living out of his Volkswagen van. For 11 months he studied the range, habitat, and behavior of one species.</p> <p>It was the sort of work that provided a solid foundation to a naturalist-in-training, and it would earn Paine his Ph.D. But the filter-feeding brachiopods were not the most dynamic animals. And sifting large amounts of sand for the less than quarter-inch-long creatures was, well, just not very exciting.</p> <p>As Paine shoveled his way along the Gulf Coast, it was not Florida’s brachiopods that captured his imagination. On the Florida panhandle, Paine discovered the Alligator Harbor Marine Laboratory, and was given permission to stay there. At the tip of nearby Alligator Point, he noticed that for a few days each month, the low tide exposed an enormous gathering of large predatory snails, such as the horse conch, some more than a foot long. The mud and sawgrass of Alligator Point was not at all boring, quite the contrary—it was a battlefield.</p><blockquote class=""pull-quote""><p>“The most dramatic moment of learning in my life happened in less than a second. And that was sticking my head in the water.”</p> </blockquote> <p>On top of his thesis work on brachiopods, Paine made a careful study of the snails. He counted eight abundant snail species, and took detailed notes on who ate whom. In this “gastropod eats gastropod” arena, Paine saw that without exception it was always a larger snail devouring a smaller one, but not everything that was smaller. The 11-pound horse conch, for example, dined almost exclusively on other snails, and paid little attention to smaller prey such as the clams that were the main fare for the smaller snails.</p> <p>While Paine was in Florida watching predators up close, his advisor Smith had kept thinking about those green trees and the roles of predators in nature. Smith was keenly interested in not just the structure of communities, but in the processes that shaped them. He often had bag lunches with two colleagues, Nelson Hairston Sr. and Lawrence Slobodkin, during which they had friendly arguments about major ideas in ecology. All three scientists were interested in the processes that control animal populations, and they debated explanations circulating at the time. One major school of thought was that population size was controlled by physical conditions such as the weather. Smith, Hairston, and Slobodkin (hereafter dubbed “HSS”) all doubted this idea because, if true, it meant that population sizes fluctuated randomly with the weather. Instead, the trio was convinced that biological processes must control the abundance of species in nature, at least to some degree.</p><div class=""reco""     style=""margin-bottom:38px;border-top: 1px solid #d8d8d8;border-bottom: 1px solid #d8d8d8;padding:25px 0px;"">
<article class=""issue-article"">
<div style=""float:left;"">
<a  href=""/issue/15/Turbulence/fruits-and-vegetables-are-trying-to-kill-you"" class=""obnd_lnk"" data-trval=""fruits-and-vegetables-are-trying-to-kill-you""  data-trlbl=""foc_rec""  data-tract=""internal_art"" >
<img src=""http://static.nautil.us/3705_2cfa3753d6a524711acb5fce38eeca1a.png"" alt=""Sapolsky_TH-F1"" width=""314"" height=""177"" style=""margin-right:18px;"">
</a>
</div>
<div>
<span class=""article-tag"">
<span class=""article-tag"">

<span class=""article-tag-focus""><a style=""font-weight:600;font-size:12px;"" href=""/term/f/Environment"">Also in Environment</a></span>&nbsp;&nbsp;</span>
</span>
<h4 class=""article-title""><a style=""margin:0px;"" href=""/issue/15/Turbulence/fruits-and-vegetables-are-trying-to-kill-you"" class=""obnd_lnk"" data-trval=""fruits-and-vegetables-are-trying-to-kill-you""  data-trlbl=""foc_rec""  data-tract=""internal_art"" >Fruits and Vegetables Are Trying to Kill You</a></h4>
<p class=""article-author"" style=""margin:0px;font-size:14px;line-height:31px;"">By Moises Velasquez-Manoff</p>
<p style=""font-size:14px;line-height:21px;"">
You probably try to exercise regularly and eat right. Perhaps you steer toward “superfoods,” fruits, nuts, and vegetables advertised as “antioxidant,” which combat the nasty effects of oxidation in our bodies. Maybe you take vitamins to protect against “free radicals,”...<strong><a style=""border:0px;"" href=""/issue/15/Turbulence/fruits-and-vegetables-are-trying-to-kill-you"" class=""obnd_lnk"" data-trval=""fruits-and-vegetables-are-trying-to-kill-you""  data-trlbl=""foc_rec""  data-tract=""internal_art"" >READ MORE</a></strong>
</p>

</div>
<div style=""clear:both;""></div>
</article>
</div><p>HSS pictured the food chain as subdivided into different levels according to the food each consumed (known as trophic levels). At the bottom were the decomposers that degrade organic debris; above them were the producers, the plants that relied on sunlight, rain, and soil nutrients; the next level were the consumers, the herbivores that ate plants; and above them the predators that ate the herbivores.</p> <p>The ecological community generally accepted that each level limited the next higher level; that is, populations were positively regulated from the “bottom up.” But Smith and his lunch buddies pondered the observation that seemed at odds with this view: The terrestrial world is green. They knew that herbivores generally do not completely consume all of the vegetation available. Indeed, most plant leaves only show signs of being partially eaten. To HSS, that meant that herbivores were not food-limited, and that something else was limiting herbivore populations. That something, they believed, were predators, negatively regulating herbivore populations from the “top-down” in the food chain. While predator-prey relationships had long been studied by ecologists, it was generally thought that the availability of prey regulated predator numbers and not vice-versa. The proposal that predators as a whole acted to regulate prey populations was a radical twist.</p> <p>To bolster their case, HSS noted instances where herbivore populations had exploded after the removal of predators, such as the Kaibab deer population in Northern Arizona that increased after decimation of local wolf and coyote populations. They assembled their observations and arguments in a paper entitled “Community Structure, Population Control, and Competition” and submitted it to the journal <i>Ecology</i> in May 1959.</p> <p>It was rejected. The article did not see the light of day until the year-end issue of the <i>American Naturalist</i> in 1960.</p> <p>The proposal that predators regulate herbivore populations is now widely known as the “HSS hypothesis” or “Green World Hypothesis.” While HSS declared, “The logic used is not easily refuted,” their ideas, like most that challenge the status quo, drew a lot of criticism. One legitimate critique was their claims needed testing and more evidence. And that was just what Smith’s former student set out to do on Mukkaw Bay in 1963.</p> <figure class=""breaker-image"" data-alt=""Carrol_BR-2"" data-title=""ruler of the tidal zone"" data-capper=""Starfish are opportunistic gourmands that eat barnacles, limpets, snails, and mussels. In this rocky intertidal zone on the Pacific coast, the starfish prey on mussels, which enables other species such as kelp and small animals to occupy the community."" data-credits=""David Cowles, rosario.wallawalla.edu/inverts""><img src=""http://static.nautil.us/8595_621765159ee1ea4299c0df3e1d29034b.png"" width=""733"" alt=""""><figcaption><span class=""caption""><strong>ruler of the tidal zone:</strong> Starfish are opportunistic gourmands that eat barnacles, limpets, snails, and mussels. In this rocky intertidal zone on the Pacific coast, the starfish prey on mussels, which enables other species such as kelp and small animals to occupy the community.</span><span class=""credit"">David Cowles, rosario.wallawalla.edu/inverts</span></figcaption></figure> <p><b>Kick It and See</b></p> <p>The HSS hypothesis was essentially a description of the natural world based on observation. Indeed, virtually all of ecology up to the 1960s had been based upon observation. The limitation of such observational biology was that it left itself open to alternative explanations and hypotheses. Paine realized that if he wanted to understand how nature worked—the rules that regulated animal populations—he would have to find situations where he could intervene and break them. In the specific case of the roles of predators, he needed a setting where he could remove predators and see what happened—what would later be described as “kick it and see” ecology. Hence, the starfish-hurling.</p> <p>Twice a month every spring and summer, and once a month in the winter, Paine kept returning to Mukkaw to repeat his starfish-throwing ritual. On a 25-feet long, 6-feet tall stretch of rock, he removed all of the starfish. On an adjacent stretch, he let nature take her course. On each plot, he counted the number and calculated the density of the inhabitants, tracking 15 species in all.</p> <p>To understand the structure of the Mukkaw food web, Paine paid close attention to what the predators were eating. The starfish has the neat trick of everting its stomach to consume prey. To see what they were feasting upon, Paine turned more than 1,000 starfish over and examined the animals held against their stomachs. He discovered that the starfish was an opportunistic gourmand that ate barnacles, chitons, limpets, snails, and mussels. While the small barnacles were the most numerous prey—the starfish was able to scarf up dozens of the little crustaceans at a time—they were not its primary source of calories. Mussels and chitons were the most important contributors to the starfish diet.</p> <p>By September, just three months after he began removing the starfish, Paine could already see that the community was changing. The acorn barnacles had spread out to occupy 60 to 80 percent of the available space. But by June of 1964, a year into the experiment, the acorn barnacles were in turn being crowded out by small, but rapidly growing goose barnacles and mussels. Moreover, four species of algae had largely disappeared, and the two limpet and two chiton species had abandoned the plot. While not preyed upon by the starfish, the anemone and sponges populations had also decreased. However, the population of one small predatory snail, <i>Thais emarginata</i>, increased 10- to 20-fold.</p> <p>Altogether, the removal of the predatory starfish had quickly reduced the diversity of the intertidal community from the original 15 species to eight.</p> <p>The results of this simple experiment were astonishing. They showed that one predator could control the composition of species in a community through its prey—affecting both animals it ate as well as animals and plants that it did not eat.</p> <p>As Paine continued the experiment over the next five years, the line of mussels advanced down the rock face by an average of almost 3 feet toward the low tide mark, monopolizing most of the available space and pushing all other species out completely. Paine realized that the starfish exerted their strong effects primarily by keeping the mussels in check. For the animals and algae of the intertidal zone, the important resource was real estate—space on the rocks. The mussels were very strong competitors for that space, and without the starfish, they took over and forced other species out. The predator stabilized the community by <i>negatively regulating</i> the population of the competitively dominant species.</p> <p>Paine’s starfish-tossing was strong confirmation of the HSS hypothesis that predators exerted control from the top down. But this was just one experiment with one predator in one spot on the Pacific Coast. If Paine was going to draw any generalities, it was important to test other sites and other predators. The dramatic results of the Mukkaw Bay experiments inspired a flurry of kick-it-and-see experiments.</p><blockquote class=""pull-quote""><p>Today, of course, one predator has more influence than any other. And humans will be the ultimate losers if the rules are not understood.</p> </blockquote><p>Paine discovered uninhabited Tatoosh Island when he was out on a salmon-fishing trip. On this small, storm-battered island, several miles up the coast from Mukkaw Bay and about half a mile offshore, Paine found many of the same species clinging to the rocks, including large <i>Pisaster</i> starfish. With the permission of the Makah tribe, Paine started tossing them back in the water. Within a few months, the mussels started spreading across the predator-free rocks.</p> <p>While on sabbatical in New Zealand, Paine investigated another intertidal community at the north end of a beach near Auckland. There, he found a different starfish species called <i>Stichaster australis</i> that preyed on the New Zealand green-lipped mussel, the same species exported to restaurants around the world. Over a period of nine months Paine removed all of the starfish from one 400-square-foot area, and left an adjacent, similar plot alone. He saw immediate and striking effects. The treated area quickly began to be dominated by mussels. Six of 20 other species initially present vanished in just eight months; within 15 months the majority of space was occupied solely by the mussels.</p> <p>To Paine, the predatory starfish of Washington and New Zealand were “keystones” in the structure of intertidal communities. Just as the stone at the apex of an arch is necessary for the stability of the structure, these apex predators at the top of the food web are critical to the diversity of an ecosystem. Dislodge them, and as Paine showed, the community falls apart. Paine’s pioneering experiments, and his coining of the term “keystone species” prompted the search for keystones in other communities, and would lead him to another seminal idea.</p> <p><b>Sea Otters and the Cascading Effect</b></p> <p>Paine’s kick-it-and-see experiments were not limited to manipulating predators. He was interested in understanding the rules that determined the overall make-up of coastal communities. Other prominent inhabitants of the tide pools and shallow waters included a great variety of algae, such as the large brown seaweed known as kelp. But their distribution was patchy—abundant and diverse in some places, nearly absent from others. One of the most prevalent grazers on the algae were sea urchins. Paine and zoologist Robert Vadas set out to find out what effect the urchins had on algal diversity.</p> <p>To do so, they removed all of the urchins by hand from some pools around Mukkaw Bay, or barred them from areas within Friday Harbor (near Bellingham) with wire cages. They left nearby pools and areas untouched as controls for their experiment. They observed dramatic effects of removing the sea urchins—several species of algae burst forth in the urchin-free zones. The control areas with large urchin populations contained very few algae.</p> <p>Paine also noticed that such urchin-dominated “barrens” were common in pools around Tatoosh Island. At first glance, the urchin barrens seemed to violate a key assertion of the HSS hypothesis that herbivores tended not to consume all of the vegetation available. But the explanation for why there were such barrens in Pacific waters would soon become clear—in the surprising discovery of another keystone species, an animal that had been removed from Washington’s coast long before Paine started tinkering with nature.</p> <p>Sea otters once ranged from Northern Japan to the Aleutian Islands and along the North American Pacific Coast as far south as Baja California. Coveted for their luxurious fur, the densest of all marine mammals, the animals were hunted so intensively in the 18th and 19th centuries that by the early 1900s only 2,000 or so animals remained of an original population of 150,000 to 300,000, and the species had disappeared from most of its range, including Washington state. The species gained protected status in 1911 under the terms of an international treaty. After their near-extermination from the Aleutian Islands, the animals rebounded to high densities in some locations.</p> <p>In 1971, Paine was offered a trip to one of those places—Amchitka Island, a treeless island in the western part of the Aleutians. Some students were working on the kelp communities there and Paine flew out to offer his advice. Jim Estes, a student from the University of Arizona, met with Paine and described his research plans. Estes was interested in sea otters, but he was not an ecologist. He explained to Paine that he was thinking about studying how the kelp forests supported the thriving sea otter populations.</p> <p>“Jim, you are asking the wrong questions,” Paine told him. “You want to look at the three trophic levels: sea otters eat urchins, sea urchins eat kelp.”</p> <figure class=""breaker-image"" data-alt=""Carrol_BR-3"" data-title=""the importance of being a sea otter"" data-capper=""In the presence of sea otters, sea urchin populations are controlled, which allows for kelp forests to grow (left). In the absence of sea otters, urchins proliferate, forming %u201Cbarrens%u201D that lack kelp (right)."" data-credits="" Bob Steneck""><img src=""http://static.nautil.us/8596_c74214a3877c4d8297ac96217d5189b7.png"" width=""733"" alt=""""><figcaption><span class=""caption""><strong>the importance of being a sea otter:</strong> In the presence of sea otters, sea urchin populations are controlled, which allows for kelp forests to grow (left). In the absence of sea otters, urchins proliferate, forming “barrens” that lack kelp (right).</span><span class=""credit""> Bob Steneck</span></figcaption></figure> <p>Estes had only seen Amchitka with its abundant otters and kelp forests. He quickly realized the opportunity to compare islands with and without otters. With fellow student John Palmisano, Estes traveled to Shemya Island, a 6-square-mile chunk of rock 200 miles to the west without otters. Their first hint that something was very different was when they walked down to the beach and saw huge sea urchin carcasses. But the real shock came when Estes dove under the water for the first time.</p> <p>“The most dramatic moment of learning in my life happened in less than a second. And that was sticking my head in the water at Shemya Island,” Estes recalled. “We were in this sea of just sea urchins. And there was no kelp anywhere. Any fool would have been able to figure out what was going on.”</p> <p>Estes and Palmisano saw other striking differences between the two communities around each island: Colorful rockfish, harbor seals, and bald eagles were abundant around Amchitka, but not around otter-less Shemya. They proposed that the vast differences between the two communities were driven by sea otters, which were voracious predators of sea urchins. They suggested that sea otters were keystone species whose negative regulation of sea urchin populations was key to the structure and diversity of the coastal marine community.</p> <p>Estes’ and Palmisano’s observations suggested that the reintroduction of sea otters would lead to a dramatic restructuring of coastal ecosystems. Shortly after their pioneering study, the opportunity arose to test the impact of sea otters as they spread along the Alaskan coast and re-colonized various communities. In 1975, sea otters were absent from Deer Harbor in southeast Alaska. But by 1978, the animals had established themselves there, sea urchins were small and scarce, the sea bottom was littered with their remains, and tall, dense stands of kelp had sprung up.</p> <p>The presence of the otters had suppressed the urchins, which had otherwise suppressed the growth of kelp. This kind of double negative logic is widespread in biology. In this instance, otters “induce” the growth of kelp by repressing the population of sea urchins. The discovery of the regulation of kelp forest by sea otter predation on herbivorous urchins was very strong support for the HSS hypothesis and for Paine’s keystone species concept.</p> <p>In ecological terms, the predatory sea otters have a cascading effect on multiple trophic levels below them. Paine coined a new term to describe the strong, top-down effects that he and others had discovered upon the removal or reintroduction of species: He called them trophic cascades.</p> <p>The discovery of trophic cascades was exciting. The many indirect effects caused by the presence or absence of predators (starfish, sea otters) were surprising because they revealed previously unsuspected, indeed unimagined, connections among creatures. Who would have thought that the growth of kelp forests depended on the presence of sea otters? These dramatic and unexpected effects raised the possibility that, unbeknownst to biologists, trophic cascades were operating elsewhere to shape other kinds of communities. And if they were, then keystone species and trophic cascades might be general features of ecosystems—rules of regulation that governed the numbers and kinds of creatures in a community.</p> <p>Indeed, trophic cascades have been discovered across the globe, where keystone predators such as wolves, lions, sharks, coyotes, starfish, and spiders shape communities. And because of their newly appreciated regulatory roles, the loss of large predators over the past century has Estes, Paine, and many other biologists deeply concerned.</p> <p>Today, of course, one predator has more influence than any other. We have created the extraordinary ecological situation where we are the top predator and the top consumer in all habitats. “Humans are certainly the overdominant keystones and will be the ultimate losers if the rules are not understood and global ecosystems continue to deteriorate,” Paine says. The only species that can regulate us is us.</p> <p><br></p> <p><i>Sean B. Carroll is a professor of molecular biology and genetics at the University of Wisconsin-Madison and Vice President for Science Education at the Howard Hughes Medical institute. His new book is</i> The Serengeti Rules: The Quest to Discover How Life Works and Why It Matters.</p> <p><i>Excerpted from </i>The Serengeti Rules: The Quest to Discover How Life Works And Why It Matters <i>by Sean B. Carroll. Copyright @ 2016 by Princeton University Press. Reprinted by permission.</i></p><p><br></p> <p><i>This article was originally published in our “Adaptation” issue in March, 2016.</i></p>
				



				<a name=""comment""></a>
				<section class=""leaderboard-ad-belt"">
					<div class=""leaderboard-ad-belt-inner adarticle"">
						<!--artad-728x90.php-->

<script type='text/javascript'>
	googletag.cmd.push(function() {
		googletag.defineSlot('/187856151/article_page', [728, 90], 'div-gpt-ad-1380044019755-0').addService(googletag.pubads());
		googletag.enableServices();
	});
</script>

<div id='div-gpt-ad-1380044019755-0' class=""leaderboard-ad"">
	<!--[if lte IE 9]>
	<script type='text/javascript'>
	$(window).load(function(){
		googletag.cmd.push(function() { googletag.display('div-gpt-ad-1380044019755-0'); });
	});
	</script>
	<![endif]-->

	<!--[if !IE | gt IE 9]>-->
	<script type='text/javascript'>
		googletag.cmd.push(function() { googletag.display('div-gpt-ad-1380044019755-0'); });
	</script>
	<!--<![endif]-->
</div>




					</div>
				</section>

			</div><!-- /.page-content -->
			<!--googleoff: all-->
			<div class=""rail"">
				
				<section id=""issue-map"" class=""issue-map rail-module"">




	<hgroup class=""module-header"">
		<h2 class=""issue-number"">
												Issue 037									</h2>
		<h3 class=""issue-title"">Currents</h3>
		<h4 class=""module-action""><a href=""/issue/37/currents"">Explore This Issue</a></h4>
	</hgroup>

	<div id=""collapse-wrapper"" class=""collapse-wrapper"">
		<div id=""scroll-wrapper"" class=""scroll-wrapper"">
			<ul class=""issue-map-chapters"">
				

                					<li class=""issue-map-chapter"">
<!--						<i class=""icon-down""></i>-->
						<div class=""chapter-number"">Chapter one</div>
						<div class=""issue-map-articles"">
							<div class=""chapter-title"">Motes</div>
							<ul>
																	<li class=' issnav '>



                                        <a href=""/issue/37/currents/the-strange-blissfulness-of-storms"">

                                            <img src=""http://static.nautil.us/9333_d4254a0e7aa1a351983d6b3b4c1816ea.jpg"" alt=""Scoles_TH-2"" width=""199"" height=""112"" />

                                            <span class=""article-tag"">Environment &nbsp;&nbsp;</span>


											<span class=""article-title"">The Strange Blissfulness of Storms </span>
										</a>
																			</li>
																	<li class=' issnav '>



                                        <a href=""/issue/37/currents/bacteria-are-masters-of-tai-chi"">

                                            <img src=""http://static.nautil.us/9412_e62111f5d7b0c67958f9acbdc0288154.jpg"" alt=""Krieger_THUMB"" width=""199"" height=""112"" />

                                            <span class=""article-tag"">Physics &nbsp;&nbsp;</span>


											<span class=""article-title"">Bacteria Are Masters of Tai Chi </span>
										</a>
																			</li>
																	<li class=' issnav active'>



                                        <a href=""/issue/37/currents/the-ecologist-who-threw-starfish-rp"">

                                            <img src=""http://static.nautil.us/8591_cd6b73b67c77edeaff94e24b961119dd.png"" alt=""Carrol_THUMB"" width=""199"" height=""112"" />

                                            <span class=""article-tag"">Environment &nbsp;&nbsp;</span>


											<span class=""article-title"">The Ecologist Who Threw Starfish </span>
										</a>
																					<div class=""article-progress-wrapper""><!--<div class=""article-progress""></div>-->
											</div>
																			</li>
																	<li class=' issnav '>



                                        <a href=""/issue/37/currents/the-surprising-importance-of-stratospheric-life"">

                                            <img src=""http://static.nautil.us/9420_2118b9f689c4e8d78d34218688a7a1cf.png"" alt=""Wald_THUMB-2"" width=""199"" height=""112"" />

                                            <span class=""article-tag"">Extraterrestrial Life &nbsp;&nbsp;</span>


											<span class=""article-title"">The Surprising Importance of Stratospheric Life </span>
										</a>
																			</li>
															</ul>
						</div>
					</li>

			</ul><!-- /.issue-map-chapters -->
		</div><!-- /#scroll-wrapper -->
	</div><!-- /#collapse-wrapper -->

</section>
				<div id=""footnote_sideview"">
									</div>


				
				
			</div><!-- /.rail -->

		</div><!-- /.wrap -->

		<footer class=""article-footer"">
			
						






				<div id=""comments-container"" class=""comments-container"">
					<div class=""button button_active"">Join the Discussion</div>
					<div id=""disqus-wrapper"">
						<div id=""disqus_thread"" class=""disqus-thread""></div>
						<script type=""text/javascript"">
							var disqus_shortname = 'nautilusmag';
							var disqus_identifier = 'http://nautil.us/issue/37/currents/the-ecologist-who-threw-starfish-rp';
							/* * * DON'T EDIT BELOW THIS LINE * * */
							(function() {
								var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
								dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
								(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
							})();
						</script>
					</div>
				</div>

			

		</footer>

		<section class=""module-more-articles  has-next"">
	<div class=""wrap"">

	<div class=""next-article"">

	<h2>Next Article:</h2>

	<article>
		<a href=""/issue/37/currents/the-surprising-importance-of-stratospheric-life"" class=""article-thumb"">
						<img src=""http://static.nautil.us/9420_2118b9f689c4e8d78d34218688a7a1cf.png"" width=""231"" height=""141"" alt=""Wald_THUMB-2"" />
		</a>
		<span class=""article-tag"">Biology</span>
		<h3 class=""article-title""><a href=""/issue/37/currents/the-surprising-importance-of-stratospheric-life"">The Surprising Importance of Stratospheric Life</a></h3>
		<span class=""article-author"">By Chelsea  Wald</span>
	</article>

</div>		<div class=""related-articles"">
			<h2>Related Articles:</h2>
			<ul>
							<li>
					<article>
						<a href=""/issue/34/adaptation/my-family-my-science"" class=""article-thumb"">
														<img src=""http://static.nautil.us/8541_93661c10ed346f9692f4d512319799b3.png"" width=""231"" height=""141"" alt=""Hope_THUMB"" />
						</a>
						<span class=""article-tag"">Ideas</span>
						<h3 class=""article-title""><a href=""/issue/34/adaptation/my-family-my-science"">My Family, My Science</a></h3>
						<span class=""article-author"">By Hope Jahren</span>
					</article>
				</li>
							<li>
					<article>
						<a href=""/issue/34/adaptation/strange-worms-are-taking-their-place-on-your-family-tree"" class=""article-thumb"">
														<img src=""http://static.nautil.us/8672_44885837c518b06e3f98b41ab8cedc0f.png"" width=""231"" height=""141"" alt=""Maxmen_THUMB"" />
						</a>
						<span class=""article-tag"">Biology</span>
						<h3 class=""article-title""><a href=""/issue/34/adaptation/strange-worms-are-taking-their-place-on-your-family-tree"">Strange Worms Are Taking Their Place on Your Family Tree</a></h3>
						<span class=""article-author"">By Amy Maxmen</span>
					</article>
				</li>
							<li>
					<article>
						<a href=""/issue/34/adaptation/does-stress-speed-up-evolution"" class=""article-thumb"">
														<img src=""http://static.nautil.us/8762_0c5534f554a26f7aeb7c780e12bb1525.png"" width=""231"" height=""141"" alt=""on-Bubnoff_THUMB"" />
						</a>
						<span class=""article-tag"">Biology</span>
						<h3 class=""article-title""><a href=""/issue/34/adaptation/does-stress-speed-up-evolution"">Does Stress Speed Up Evolution?</a></h3>
						<span class=""article-author"">By Andreas &#118;on Bubnoff</span>
					</article>
				</li>
			                                			</ul>
		</div>
	</div>
</section>
	</article>

	<span id=""noncookie"" style=""display:none"">
		<img src=""http://nautilus-prod.s3.amazonaws.com/Prime_paywall_1-733x200px.png"" style=""float:left;margin-right:25px;""/>
<p><i>Nautilus</i> uses cookies to manage your digital subscription and show you your reading progress. It's just not the same without them.<br>
Please sign in to <a href=""/primeuser"">Nautilus Prime</a> or turn your cookies on to continue reading.<br>Thank you!</p></span>




	<script>
		if (!navigator.cookieEnabled) {
			$(function () {
				$('.page-content').html($('#noncookie').html());
			})
		}
	</script>
	</div><!-- /.main-content -->
</div>

<footer class=""main-footer"">
	<div class=""main-footer-top"">
		<div class=""wrap"">
			<div class=""col1"">

				<nav class=""footer-links"">
					<ul>
						<li><a href=""/about"">About Nautilus</a></li>
						<li><a href=""/faq"">FAQ</a></li>
<!--                        <li><a href=""/advertise-and-sponsorship"">Advertising and Sponsorship</a></li>-->

                        <li><a href=""/primeuser"">Prime &nbsp;<i class=""icon-prime""></i></a></li>

<!--						<li><a href=""/support"">Support</a></li>-->
                        <li><a href=""http://shop.nautil.us"" target=""_blank"">Subscribe</a></li>
<!--                        <li><a href=""epub"">Digital Editions</a></li>-->
						<li><a href=""/terms-of-service"">Terms of Service</a></li>
						<li><a href=""/contact"">Contact / Work with Us</a></li>
                        <li><a href=""/awards-and-press"">Awards and Press</a></li>

						<li><a target=""_blank"" href=""/rss/all"">RSS</a></li>
                        <li><a href=""/sponsorship"">Media Kit</a></li>
                        <li><a target=""_blank"" href=""http://www.nautilusthink.org/support"">Donate</a></li>

                    </ul>
				</nav>
			</div>
			<div class=""col2"">
				<section class=""footer-about-us"">
					<h3 class=""cat-title"">NAUTILUS: SCIENCE CONNECTED</h3>
					<p>Nautilus is a different kind of science magazine. We deliver big-picture science by reporting on a single monthly topic from multiple perspectives. Read a new chapter in the story every Thursday.</p>
				</section>
			</div>
		</div>
	</div>

	<div class=""main-footer-bottom"">
		<div class=""wrap"">
			<p class=""copyright"">&copy; 2016 Nautilus, All rights reserved. <span class=""tagline"">Matter, Biology, Numbers, Ideas, Culture, <em>Connected</em></span></p>
			<a class=""obnd_lnk candt""  data-tract=""external_link"" data-trlbl=""footer"" data-trval=""codeandtheory"" href=""http://www.codeandtheory.com/"" target=""_blank"">Site by Code and Theory</a>
		</div>
	</div>
</footer>



<span style=""display:none;"" id=""hiddensrc"">

	<div id=""adpayload"">
		<div id=""ovly""></div>
		<div id=""offer"" style=""background: url('http://static.nautil.us/9329_c115ba9e04ab27fbbb664f932112246d.png') no-repeat scroll 0 0 rgba(0, 0, 0, 0); height: 320px; margin: 145px auto; position: relative; width: 640px;z-index: 103;"">
			<a href=""http://shop.nautil.us?utm_source=mainsite&utm_medium=popup&utm_campaign=13_springsale_2016""><div id=""buyovly""></div></a>

			<div id=""closeovly""></div>

		</div>

	</div>

</span>

	
<!--Footer scripts -->

<!--admin  20160504 > 20160602 > 20160530   -1-  --> 
<script type=""text/javascript"" src=""/min/b=assets/site/js&f=lib/jquery.easing-1.3.js,lib/jquery.touchSwipe-1.6.2.min.js,lib/jquery.nicescroll-3.1.9.min.js,orig_script.js,script.js,search.js,lib/jquery.vimeo.api.js,article.js""></script>

<div style=""display:none;"">
<img height=""1"" width=""1"" style=""border-style:none;"" alt="""" src=""//googleads.g.doubleclick.net/pagead/viewthroughconversion/981681253/?value=0&amp;guid=ON&amp;script=0""/>

</div>
    <!--  Quantcast Tag -->
    <script>
        qcdata = {} || qcdata;
        (function(){
            var elem = document.createElement('script');
            elem.src = (document.location.protocol == ""https:"" ? ""https://secure"" : ""http://pixel"") + "".quantserve.com/aquant.js?a=p-6EzWtvBV9sFU3"";
            elem.async = true;
            elem.type = ""text/javascript"";
            var scpt = document.getElementsByTagName('script')[0];
            scpt.parentNode.insertBefore(elem,scpt);
        }());


    </script>
    <noscript>
        <img src=""//pixel.quantserve.com/pixel/p-6EzWtvBV9sFU3.gif?"" style=""display: none;"" border=""0"" height=""1"" width=""1"" alt=""Quantcast""/>
    </noscript>
    <!-- End Quantcast Tag -->

	

<script>


// _gaq.push(['_setCustomVar',5,'readcount','1']);


ga('set', 'dimension1', 1);
ga('set', 'metric1', 1);
	window.onbeforeunload = function() {

//	console.log(""eyJjdXJkYXRlIjoiMiIsImNpZHMiOlsiMTU5MSJdfQ=="");
	document.cookie = ""_utntlb=eyJjdXJkYXRlIjoiMiIsImNpZHMiOlsiMTU5MSJdfQ==; expires=Fri, 2 Jun 2017 10:00:00 GMT;path=/;domain=.nautil.us"";
	}


</script><script>
	//PERMISSION REQUIRED TO FORWARD NAUTILUS CONTENT
	var hyp = window.location._orig_href;
	if (typeof hyp != 'undefined') {
		if (hyp.indexOf(""via.hypothes"") > -1) {

		var newad = window.location._href;
			var newrep = newad.replace(/https:\/\/via\.hypothes\.is\//i, '');

			$('body').html('<h1 class=""msgw"">Please visit the original article.<br> '+newrep+'</h1>');

		}
	}



</script>

 
<script type=""text/javascript"" src=""/assets/common/js/content.js"" ></script></body>
</html>

"
sidcool,42,11823691,71,1464883915,SyntaxDB – Quickly look up syntax for programming languages,story,https://syntaxdb.com/,"<!DOCTYPE html>
<html>
  <head>
  <link href=""/assets/favicon-98ae12b4105cac89c201f580ba3d9a17.ico"" rel=""shortcut icon"" type=""image/vnd.microsoft.icon"" />
  <meta name=""google-site-verification"" content=""SGL7Ec-8ybB83nPbyjhCnrBm1GaN8VN7-MWHTWIrdxw"" />
  <meta property=""og:image"" content=""/images/share.png"" />
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  <meta name=""description"" content=""SyntaxDB lets you easily look up syntax for your favourite programming language. Now supporting Java, C, C++, C#, JavaScript, Swift, Python, Ruby, and Go."">
  <title>SyntaxDB - Programming Syntax Database</title>

  <!-- CSS -->
  <link href='//fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=PT+Sans' rel='stylesheet' type='text/css'>
  <link href=""/assets/materialize-63007b2d6e546d671ba30b97bde927ce.css"" media=""screen"" rel=""stylesheet"" />
  <link href=""/assets/application-5a92a75c3d0ad1c3974673c019e12e71.css"" media=""all"" rel=""stylesheet"" />
  <link href=""/assets/home-fd8bb479ea3c1275251136b858f3f448.css"" media=""screen"" rel=""stylesheet"" />

  <meta content=""authenticity_token"" name=""csrf-param"" />
<meta content=""5ZSHVGiL70RjKi4kt8tzu+7tRFhr2sBS1f3LhLunys0="" name=""csrf-token"" />
  </head>

  <body>
  <main>
  <!-- Navigation menu -->
  <div class=""header"">  
  <nav class=""white black-text"" role=""navigation"">
    <div class=""nav-wrapper"">
    <a id=""logo-container"" href=""/"" class=""brand-logo""><img src=""/images/logo.png"" id=""navbar_logo""></a>

      <!-- Standard menu -->
      <ul class=""right hide-on-med-and-down"">
        <li><a href=""/about"" class=""deep-purple-text"">About</a></li>
        <li><a href=""/reference"" class=""deep-purple-text"">Reference</a></li>
        <li><a href=""/integrations"" class=""deep-purple-text"">Integrations</a></li>
        <li><a href=""/api/v1"" class=""deep-purple-text"" target=""_blank"">API</a></li>       
        <li><a href=""/contact"" class=""deep-purple-text"">Contact</a></li>
      </ul>

      <!-- Mobile menu -->
      <ul id=""home-mobile"" class=""side-nav"">
        <li><a href=""/about"" class=""deep-purple-text"">About</a></li>
        <li><a href=""/reference"" class=""deep-purple-text"">Reference</a></li>
        <li><a href=""/integrations"" class=""deep-purple-text"">Integrations</a></li>
        <li><a href=""/api/v1"" class=""deep-purple-text"" target=""_blank"">API</a></li>
        <li><a href=""/contact"" class=""deep-purple-text"">Contact</a></li>
      </ul>
      <!--Mobile menu button -->
      <a href=""#"" data-activates=""home-mobile"" class=""button-collapse deep-purple-text hide-on-large-only""><i class=""mdi-navigation-menu""></i></a>
    </div>
  </nav>
</div>


    <div class=""container"">
      <br><br><br><br><br>
<!-- Splash logo -->
<div class=""row center"">
  <img class=""col s8 offset-s2 offset-m3 m6 responsive-img"" src=""/images/logo.png"" id=""front_logo"">
</div>

<!-- Search bar -->
<div class=""row center"">
  <div row>
    <h5 class=""header front-prompt col s12 m8 offset-l2"">Enter a concept or a language</h5>

    <form accept-charset=""UTF-8"" action=""/reference/search"" method=""get""><div style=""display:none""><input name=""utf8"" type=""hidden"" value=""&#x2713;"" /></div>
      <div class=""input-field gray lighten-5 col s12 m12 l8 offset-l2"">
          <i class=""mdi-navigation-chevron-right deep-purple-text prefix""></i>
          <input class=""validate front-search"" data-autocomplete=""/concepts/autocomplete_concept_concept_search"" id=""search_placeholder"" minlength=""3"" name=""search"" placeholder=""Ex. For loop in Java"" type=""text"" value="""" />
      </div>
  </div>
</div>
<!-- Go button -->
<div class=""row"">
  <div class=""col offset-s9""><input class=""deep-purple btn offset-s3"" type=""submit"" value=""Go!"" /></div>
    </form> <!-- end form_tag -->
</div>

    </div>

  </main>
  

  <footer class=""page-footer white"">
    <div class=""footer-copyright grey lighten-5"">
      <div class=""container "">
          <div class=""black-text darken"">&copy 2016 SyntaxDB. All Rights Reserved. </div>
      </div>
    </div>
  </footer>

  <!-- SCRIPTS -->
  <script src=""/assets/jquery-ffe3d915535925807ce7cb9418a51292.js""></script>
  <script src=""/assets/jquery_ujs-75d90c7a7209df2f190cb8b0181a685c.js""></script>
  <script src=""/assets/autocomplete-rails-5030bbfba449d81ec5d744a34ce2f358.js""></script>
  <script data-turbolinks-track=""true"" src=""/assets/application-0e86429d4138f8f0dfc5f3d0262fa202.js""></script>
  <script src=""/assets/materialize-40751747523b7166cf1948b550143196.js""></script>
  <script src=""/assets/init-8b40bf9834cbaa3758e617f2b7951ecb.js""></script>
  </body>
</html>
"
ola,25,11824203,62,1464887462,Show HN: Reactpack – one command to build your React front end,story,https://github.com/olahol/reactpack,"



<!DOCTYPE html>
<html lang=""en"" class="""">
  <head prefix=""og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#"">
    <meta charset='utf-8'>

    <link crossorigin=""anonymous"" href=""https://assets-cdn.github.com/assets/frameworks-89838813501af0ab77e1b954a224433f83e8f31af4b3a4570c8343b6a972ba1c.css"" media=""all"" rel=""stylesheet"" />
    <link crossorigin=""anonymous"" href=""https://assets-cdn.github.com/assets/github-308233841d8e7af078ce5873e18f8a07f391a38ce8d12120a384edf406f51c38.css"" media=""all"" rel=""stylesheet"" />
    
    
    <link crossorigin=""anonymous"" href=""https://assets-cdn.github.com/assets/site-c2aeff568e26c813514b4d8e4befc924e3863ac2c0ad2aa52a2c4070f1793079.css"" media=""all"" rel=""stylesheet"" />
    

    <link as=""script"" href=""https://assets-cdn.github.com/assets/frameworks-b801b4f0918b70f4a3a4105efbf8e5c567b4b12e41a263b4805397c93aebf317.js"" rel=""preload"" />
    
    <link as=""script"" href=""https://assets-cdn.github.com/assets/github-9e11266e9840a1629501dc03630329cc0bd58efc0dcfcc89a16868ba1d5c1465.js"" rel=""preload"" />

    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta http-equiv=""Content-Language"" content=""en"">
    <meta name=""viewport"" content=""width=device-width"">
    
    
    <title>GitHub - olahol/reactpack: build your react apps with one command and one `npm i`.</title>
    <link rel=""search"" type=""application/opensearchdescription+xml"" href=""/opensearch.xml"" title=""GitHub"">
    <link rel=""fluid-icon"" href=""https://github.com/fluidicon.png"" title=""GitHub"">
    <link rel=""apple-touch-icon"" href=""/apple-touch-icon.png"">
    <link rel=""apple-touch-icon"" sizes=""57x57"" href=""/apple-touch-icon-57x57.png"">
    <link rel=""apple-touch-icon"" sizes=""60x60"" href=""/apple-touch-icon-60x60.png"">
    <link rel=""apple-touch-icon"" sizes=""72x72"" href=""/apple-touch-icon-72x72.png"">
    <link rel=""apple-touch-icon"" sizes=""76x76"" href=""/apple-touch-icon-76x76.png"">
    <link rel=""apple-touch-icon"" sizes=""114x114"" href=""/apple-touch-icon-114x114.png"">
    <link rel=""apple-touch-icon"" sizes=""120x120"" href=""/apple-touch-icon-120x120.png"">
    <link rel=""apple-touch-icon"" sizes=""144x144"" href=""/apple-touch-icon-144x144.png"">
    <link rel=""apple-touch-icon"" sizes=""152x152"" href=""/apple-touch-icon-152x152.png"">
    <link rel=""apple-touch-icon"" sizes=""180x180"" href=""/apple-touch-icon-180x180.png"">
    <meta property=""fb:app_id"" content=""1401488693436528"">

      <meta content=""https://avatars2.githubusercontent.com/u/1386739?v=3&amp;s=400"" name=""twitter:image:src"" /><meta content=""@github"" name=""twitter:site"" /><meta content=""summary"" name=""twitter:card"" /><meta content=""olahol/reactpack"" name=""twitter:title"" /><meta content=""reactpack - :package: build your react apps with one command and one `npm i`."" name=""twitter:description"" />
      <meta content=""https://avatars2.githubusercontent.com/u/1386739?v=3&amp;s=400"" property=""og:image"" /><meta content=""GitHub"" property=""og:site_name"" /><meta content=""object"" property=""og:type"" /><meta content=""olahol/reactpack"" property=""og:title"" /><meta content=""https://github.com/olahol/reactpack"" property=""og:url"" /><meta content=""reactpack - :package: build your react apps with one command and one `npm i`."" property=""og:description"" />
      <meta name=""browser-stats-url"" content=""https://api.github.com/_private/browser/stats"">
    <meta name=""browser-errors-url"" content=""https://api.github.com/_private/browser/errors"">
    <link rel=""assets"" href=""https://assets-cdn.github.com/"">
    
    <meta name=""pjax-timeout"" content=""1000"">
    

    <meta name=""msapplication-TileImage"" content=""/windows-tile.png"">
    <meta name=""msapplication-TileColor"" content=""#ffffff"">
    <meta name=""selected-link"" value=""repo_source"" data-pjax-transient>

    <meta name=""google-site-verification"" content=""KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU"">
<meta name=""google-site-verification"" content=""ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA"">
    <meta name=""google-analytics"" content=""UA-3769691-2"">

<meta content=""collector.githubapp.com"" name=""octolytics-host"" /><meta content=""github"" name=""octolytics-app-id"" /><meta content=""CFFB672E:1A18:69805:57509ADC"" name=""octolytics-dimension-request_id"" />
<meta content=""/&lt;user-name&gt;/&lt;repo-name&gt;"" data-pjax-transient=""true"" name=""analytics-location"" />



  <meta class=""js-ga-set"" name=""dimension1"" content=""Logged Out"">



        <meta name=""hostname"" content=""github.com"">
    <meta name=""user-login"" content="""">

        <meta name=""expected-hostname"" content=""github.com"">
      <meta name=""js-proxy-site-detection-payload"" content=""NDU2N2Q5ZmIwMGYwYTZlZmYxNTVlYWM2Njk4YmRlMDdlM2RmOTllODEyNDQwZTJjYTQ1MThkYTM3Yzg1ZmExNnx7InJlbW90ZV9hZGRyZXNzIjoiMjA3LjI1MS4xMDMuNDYiLCJyZXF1ZXN0X2lkIjoiQ0ZGQjY3MkU6MUExODo2OTgwNTo1NzUwOUFEQyIsInRpbWVzdGFtcCI6MTQ2NDkwMDMxNn0="">


      <link rel=""mask-icon"" href=""https://assets-cdn.github.com/pinned-octocat.svg"" color=""#4078c0"">
      <link rel=""icon"" type=""image/x-icon"" href=""https://assets-cdn.github.com/favicon.ico"">

    <meta name=""html-safe-nonce"" content=""809045178e1ecc1b641188de54a4cf771b35b5a3"">
    <meta content=""4709b92c41d18f8d5f7b5198dd121713073c283d"" name=""form-nonce"" />

    <meta http-equiv=""x-pjax-version"" content=""f0691b9f15824111b7853857b85a7fd5"">
    

      
  <meta name=""description"" content=""reactpack - :package: build your react apps with one command and one `npm i`."">
  <meta name=""go-import"" content=""github.com/olahol/reactpack git https://github.com/olahol/reactpack.git"">

  <meta content=""1386739"" name=""octolytics-dimension-user_id"" /><meta content=""olahol"" name=""octolytics-dimension-user_login"" /><meta content=""60278909"" name=""octolytics-dimension-repository_id"" /><meta content=""olahol/reactpack"" name=""octolytics-dimension-repository_nwo"" /><meta content=""true"" name=""octolytics-dimension-repository_public"" /><meta content=""false"" name=""octolytics-dimension-repository_is_fork"" /><meta content=""60278909"" name=""octolytics-dimension-repository_network_root_id"" /><meta content=""olahol/reactpack"" name=""octolytics-dimension-repository_network_root_nwo"" />
  <link href=""https://github.com/olahol/reactpack/commits/master.atom"" rel=""alternate"" title=""Recent Commits to reactpack:master"" type=""application/atom+xml"">


      <link rel=""canonical"" href=""https://github.com/olahol/reactpack"" data-pjax-transient>
  </head>


  <body class=""logged-out   env-production  vis-public"">
    <div id=""js-pjax-loader-bar"" class=""pjax-loader-bar""></div>
    <a href=""#start-of-content"" tabindex=""1"" class=""accessibility-aid js-skip-to-content"">Skip to content</a>

    
    
    



          <header class=""site-header js-details-container"" role=""banner"">
  <div class=""container-responsive"">
    <a class=""header-logo-invertocat"" href=""https://github.com/"" aria-label=""Homepage"" data-ga-click=""(Logged out) Header, go to homepage, icon:logo-wordmark"">
      <svg aria-hidden=""true"" class=""octicon octicon-mark-github"" height=""32"" version=""1.1"" viewBox=""0 0 16 16"" width=""32""><path d=""M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z""></path></svg>
    </a>

    <button class=""btn-link right site-header-toggle js-details-target"" type=""button"" aria-label=""Toggle navigation"">
      <svg aria-hidden=""true"" class=""octicon octicon-three-bars"" height=""24"" version=""1.1"" viewBox=""0 0 12 16"" width=""18""><path d=""M11.41 9H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1z m0-4H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1zM0.59 11h10.81c0.59 0 0.59 0.41 0.59 1s0 1-0.59 1H0.59c-0.59 0-0.59-0.41-0.59-1s0-1 0.59-1z""></path></svg>
    </button>

    <div class=""site-header-menu"">
      <nav class=""site-header-nav site-header-nav-main"">
        <a href=""/personal"" class=""js-selected-navigation-item nav-item nav-item-personal"" data-ga-click=""Header, click, Nav menu - item:personal"" data-selected-links=""/personal /personal"">
          Personal
</a>        <a href=""/open-source"" class=""js-selected-navigation-item nav-item nav-item-opensource"" data-ga-click=""Header, click, Nav menu - item:opensource"" data-selected-links=""/open-source /open-source"">
          Open source
</a>        <a href=""/business"" class=""js-selected-navigation-item nav-item nav-item-business"" data-ga-click=""Header, click, Nav menu - item:business"" data-selected-links=""/business /business/features /business/customers /business"">
          Business
</a>        <a href=""/explore"" class=""js-selected-navigation-item nav-item nav-item-explore"" data-ga-click=""Header, click, Nav menu - item:explore"" data-selected-links=""/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship /explore"">
          Explore
</a>      </nav>

      <div class=""site-header-actions"">
            <a class=""btn btn-primary site-header-actions-btn"" href=""/join?source=header-repo"" data-ga-click=""(Logged out) Header, clicked Sign up, text:sign-up"">Sign up</a>
          <a class=""btn site-header-actions-btn mr-2"" href=""/login?return_to=%2Folahol%2Freactpack"" data-ga-click=""(Logged out) Header, clicked Sign in, text:sign-in"">Sign in</a>
      </div>

        <nav class=""site-header-nav site-header-nav-secondary"">
          <a class=""nav-item"" href=""/pricing"">Pricing</a>
          <a class=""nav-item"" href=""/blog"">Blog</a>
          <a class=""nav-item"" href=""https://help.github.com"">Support</a>
          <a class=""nav-item header-search-link"" href=""https://github.com/search"">Search GitHub</a>
              <div class=""header-search scoped-search site-scoped-search js-site-search"" role=""search"">
  <!-- </textarea> --><!-- '""` --><form accept-charset=""UTF-8"" action=""/olahol/reactpack/search"" class=""js-site-search-form"" data-scoped-search-url=""/olahol/reactpack/search"" data-unscoped-search-url=""/search"" method=""get""><div style=""margin:0;padding:0;display:inline""><input name=""utf8"" type=""hidden"" value=""&#x2713;"" /></div>
    <label class=""form-control header-search-wrapper js-chromeless-input-container"">
      <div class=""header-search-scope"">This repository</div>
      <input type=""text""
        class=""form-control header-search-input js-site-search-focus js-site-search-field is-clearable""
        data-hotkey=""s""
        name=""q""
        placeholder=""Search""
        aria-label=""Search this repository""
        data-unscoped-placeholder=""Search GitHub""
        data-scoped-placeholder=""Search""
        tabindex=""1""
        autocapitalize=""off"">
    </label>
</form></div>

        </nav>
    </div>
  </div>
</header>



    <div id=""start-of-content"" class=""accessibility-aid""></div>

      <div id=""js-flash-container"">
</div>


    <div role=""main"" class=""main-content"">
        <div itemscope itemtype=""http://schema.org/SoftwareSourceCode"">
    <div id=""js-repo-pjax-container"" data-pjax-container>
      
<div class=""pagehead repohead instapaper_ignore readability-menu experiment-repo-nav"">
  <div class=""container repohead-details-container"">

    

<ul class=""pagehead-actions"">

  <li>
      <a href=""/login?return_to=%2Folahol%2Freactpack""
    class=""btn btn-sm btn-with-count tooltipped tooltipped-n""
    aria-label=""You must be signed in to watch a repository"" rel=""nofollow"">
    <svg aria-hidden=""true"" class=""octicon octicon-eye"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M8.06 2C3 2 0 8 0 8s3 6 8.06 6c4.94 0 7.94-6 7.94-6S13 2 8.06 2z m-0.06 10c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4z m2-4c0 1.11-0.89 2-2 2s-2-0.89-2-2 0.89-2 2-2 2 0.89 2 2z""></path></svg>
    Watch
  </a>
  <a class=""social-count"" href=""/olahol/reactpack/watchers"">
    9
  </a>

  </li>

  <li>
      <a href=""/login?return_to=%2Folahol%2Freactpack""
    class=""btn btn-sm btn-with-count tooltipped tooltipped-n""
    aria-label=""You must be signed in to star a repository"" rel=""nofollow"">
    <svg aria-hidden=""true"" class=""octicon octicon-star"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z""></path></svg>
    Star
  </a>

    <a class=""social-count js-social-count"" href=""/olahol/reactpack/stargazers"">
      202
    </a>

  </li>

  <li>
      <a href=""/login?return_to=%2Folahol%2Freactpack""
        class=""btn btn-sm btn-with-count tooltipped tooltipped-n""
        aria-label=""You must be signed in to fork a repository"" rel=""nofollow"">
        <svg aria-hidden=""true"" class=""octicon octicon-repo-forked"" height=""16"" version=""1.1"" viewBox=""0 0 10 16"" width=""10""><path d=""M8 1c-1.11 0-2 0.89-2 2 0 0.73 0.41 1.38 1 1.72v1.28L5 8 3 6v-1.28c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72v1.78l3 3v1.78c-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72V9.5l3-3V4.72c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2zM2 4.2c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3 10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m3-10c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z""></path></svg>
        Fork
      </a>

    <a href=""/olahol/reactpack/network"" class=""social-count"">
      5
    </a>
  </li>
</ul>

    <h1 class=""entry-title public "">
  <svg aria-hidden=""true"" class=""octicon octicon-repo"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M4 9h-1v-1h1v1z m0-3h-1v1h1v-1z m0-2h-1v1h1v-1z m0-2h-1v1h1v-1z m8-1v12c0 0.55-0.45 1-1 1H6v2l-1.5-1.5-1.5 1.5V14H1c-0.55 0-1-0.45-1-1V1C0 0.45 0.45 0 1 0h10c0.55 0 1 0.45 1 1z m-1 10H1v2h2v-1h3v1h5V11z m0-10H2v9h9V1z""></path></svg>
  <span class=""author"" itemprop=""author""><a href=""/olahol"" class=""url fn"" rel=""author"">olahol</a></span><!--
--><span class=""path-divider"">/</span><!--
--><strong itemprop=""name""><a href=""/olahol/reactpack"" data-pjax=""#js-repo-pjax-container"">reactpack</a></strong>

</h1>

  </div>
  <div class=""container"">
    
<nav class=""reponav js-repo-nav js-sidenav-container-pjax""
     itemscope
     itemtype=""http://schema.org/BreadcrumbList""
     role=""navigation""
     data-pjax=""#js-repo-pjax-container"">

  <span itemscope itemtype=""http://schema.org/ListItem"" itemprop=""itemListElement"">
    <a href=""/olahol/reactpack"" aria-selected=""true"" class=""js-selected-navigation-item selected reponav-item"" data-hotkey=""g c"" data-selected-links=""repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /olahol/reactpack"" itemprop=""url"">
      <svg aria-hidden=""true"" class=""octicon octicon-code"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M9.5 3l-1.5 1.5 3.5 3.5L8 11.5l1.5 1.5 4.5-5L9.5 3zM4.5 3L0 8l4.5 5 1.5-1.5L2.5 8l3.5-3.5L4.5 3z""></path></svg>
      <span itemprop=""name"">Code</span>
      <meta itemprop=""position"" content=""1"">
</a>  </span>

    <span itemscope itemtype=""http://schema.org/ListItem"" itemprop=""itemListElement"">
      <a href=""/olahol/reactpack/issues"" class=""js-selected-navigation-item reponav-item"" data-hotkey=""g i"" data-selected-links=""repo_issues repo_labels repo_milestones /olahol/reactpack/issues"" itemprop=""url"">
        <svg aria-hidden=""true"" class=""octicon octicon-issue-opened"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M7 2.3c3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8s2.56-5.7 5.7-5.7m0-1.3C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7S10.86 1 7 1z m1 3H6v5h2V4z m0 6H6v2h2V10z""></path></svg>
        <span itemprop=""name"">Issues</span>
        <span class=""counter"">1</span>
        <meta itemprop=""position"" content=""2"">
</a>    </span>

  <span itemscope itemtype=""http://schema.org/ListItem"" itemprop=""itemListElement"">
    <a href=""/olahol/reactpack/pulls"" class=""js-selected-navigation-item reponav-item"" data-hotkey=""g p"" data-selected-links=""repo_pulls /olahol/reactpack/pulls"" itemprop=""url"">
      <svg aria-hidden=""true"" class=""octicon octicon-git-pull-request"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M11 11.28c0-1.73 0-6.28 0-6.28-0.03-0.78-0.34-1.47-0.94-2.06s-1.28-0.91-2.06-0.94c0 0-1.02 0-1 0V0L4 3l3 3V4h1c0.27 0.02 0.48 0.11 0.69 0.31s0.3 0.42 0.31 0.69v6.28c-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72z m-1 2.92c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2zM4 3c0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72 0 1.55 0 5.56 0 6.56-0.59 0.34-1 0.98-1 1.72 0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.73-0.41-1.38-1-1.72V4.72c0.59-0.34 1-0.98 1-1.72z m-0.8 10c0 0.66-0.55 1.2-1.2 1.2s-1.2-0.55-1.2-1.2 0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2z m-1.2-8.8c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z""></path></svg>
      <span itemprop=""name"">Pull requests</span>
      <span class=""counter"">0</span>
      <meta itemprop=""position"" content=""3"">
</a>  </span>



  <a href=""/olahol/reactpack/pulse"" class=""js-selected-navigation-item reponav-item"" data-selected-links=""pulse /olahol/reactpack/pulse"">
    <svg aria-hidden=""true"" class=""octicon octicon-pulse"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0V10h3.6L4.5 8.2l0.9 5.4L9 8.5l1.6 1.5H14V8H11.5z""></path></svg>
    Pulse
</a>
  <a href=""/olahol/reactpack/graphs"" class=""js-selected-navigation-item reponav-item"" data-selected-links=""repo_graphs repo_contributors /olahol/reactpack/graphs"">
    <svg aria-hidden=""true"" class=""octicon octicon-graph"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M16 14v1H0V0h1v14h15z m-11-1H3V8h2v5z m4 0H7V3h2v10z m4 0H11V6h2v7z""></path></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class=""container new-discussion-timeline experiment-repo-nav"">
  <div class=""repository-content"">

    
<div class=""repository-meta js-details-container"">
  <span class=""repository-meta-content"">
        <span itemprop=""about""> 
<g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji> build your react apps with one command and one `npm i`.</span>
  </span>

</div>


<div class=""overall-summary overall-summary-bottomless"">
  <div class=""stats-switcher-viewport js-stats-switcher-viewport"">
    <div class=""stats-switcher-wrapper"">
    <ul class=""numbers-summary"">
      <li class=""commits"">
        <a data-pjax href=""/olahol/reactpack/commits/master"">
            <svg aria-hidden=""true"" class=""octicon octicon-history"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M8 13H6V6h5v2H8v5zM7 1c-2.19 0-4.13 1.02-5.41 2.59L0 2v4h4l-1.5-1.5c1.05-1.33 2.67-2.2 4.5-2.2 3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8c0-0.34 0.03-0.67 0.09-1H0.08c-0.05 0.33-0.08 0.66-0.08 1 0 3.86 3.14 7 7 7s7-3.14 7-7S10.86 1 7 1z""></path></svg>
            <span class=""num text-emphasized"">
              12
            </span>
            commits
        </a>
      </li>
      <li>
        <a data-pjax href=""/olahol/reactpack/branches"">
          <svg aria-hidden=""true"" class=""octicon octicon-git-branch"" height=""16"" version=""1.1"" viewBox=""0 0 10 16"" width=""10""><path d=""M10 5c0-1.11-0.89-2-2-2s-2 0.89-2 2c0 0.73 0.41 1.38 1 1.72v0.3c-0.02 0.52-0.23 0.98-0.63 1.38s-0.86 0.61-1.38 0.63c-0.83 0.02-1.48 0.16-2 0.45V4.72c0.59-0.34 1-0.98 1-1.72 0-1.11-0.89-2-2-2S0 1.89 0 3c0 0.73 0.41 1.38 1 1.72v6.56C0.41 11.63 0 12.27 0 13c0 1.11 0.89 2 2 2s2-0.89 2-2c0-0.53-0.2-1-0.53-1.36 0.09-0.06 0.48-0.41 0.59-0.47 0.25-0.11 0.56-0.17 0.94-0.17 1.05-0.05 1.95-0.45 2.75-1.25s1.2-1.98 1.25-3.02h-0.02c0.61-0.36 1.02-1 1.02-1.73zM2 1.8c0.66 0 1.2 0.55 1.2 1.2s-0.55 1.2-1.2 1.2-1.2-0.55-1.2-1.2 0.55-1.2 1.2-1.2z m0 12.41c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z m6-8c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2 1.2 0.55 1.2 1.2-0.55 1.2-1.2 1.2z""></path></svg>
          <span class=""num text-emphasized"">
            1
          </span>
          branch
        </a>
      </li>

      <li>
        <a data-pjax href=""/olahol/reactpack/releases"">
          <svg aria-hidden=""true"" class=""octicon octicon-tag"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M6.73 2.73c-0.47-0.47-1.11-0.73-1.77-0.73H2.5C1.13 2 0 3.13 0 4.5v2.47c0 0.66 0.27 1.3 0.73 1.77l6.06 6.06c0.39 0.39 1.02 0.39 1.41 0l4.59-4.59c0.39-0.39 0.39-1.02 0-1.41L6.73 2.73zM1.38 8.09c-0.31-0.3-0.47-0.7-0.47-1.13V4.5c0-0.88 0.72-1.59 1.59-1.59h2.47c0.42 0 0.83 0.16 1.13 0.47l6.14 6.13-4.73 4.73L1.38 8.09z m0.63-4.09h2v2H2V4z""></path></svg>
          <span class=""num text-emphasized"">
            0
          </span>
          releases
        </a>
      </li>

      <li>
          <a href=""/olahol/reactpack/graphs/contributors"">
  <svg aria-hidden=""true"" class=""octicon octicon-organization"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M4.75 4.95c0.55 0.64 1.34 1.05 2.25 1.05s1.7-0.41 2.25-1.05c0.34 0.63 1 1.05 1.75 1.05 1.11 0 2-0.89 2-2s-0.89-2-2-2c-0.41 0-0.77 0.13-1.08 0.33C9.61 1 8.42 0 7 0S4.39 1 4.08 2.33c-0.31-0.2-0.67-0.33-1.08-0.33-1.11 0-2 0.89-2 2s0.89 2 2 2c0.75 0 1.41-0.42 1.75-1.05z m5.2-1.52c0.2-0.38 0.59-0.64 1.05-0.64 0.66 0 1.2 0.55 1.2 1.2s-0.55 1.2-1.2 1.2-1.17-0.53-1.19-1.17c0.06-0.19 0.11-0.39 0.14-0.59zM7 0.98c1.11 0 2.02 0.91 2.02 2.02s-0.91 2.02-2.02 2.02-2.02-0.91-2.02-2.02S5.89 0.98 7 0.98zM3 5.2c-0.66 0-1.2-0.55-1.2-1.2s0.55-1.2 1.2-1.2c0.45 0 0.84 0.27 1.05 0.64 0.03 0.2 0.08 0.41 0.14 0.59-0.02 0.64-0.53 1.17-1.19 1.17z m10 0.8H1c-0.55 0-1 0.45-1 1v3c0 0.55 0.45 1 1 1v2c0 0.55 0.45 1 1 1h1c0.55 0 1-0.45 1-1v-1h1v3c0 0.55 0.45 1 1 1h2c0.55 0 1-0.45 1-1V12h1v1c0 0.55 0.45 1 1 1h1c0.55 0 1-0.45 1-1V11c0.55 0 1-0.45 1-1V7c0-0.55-0.45-1-1-1zM3 13h-1V10H1V7h2v6z m7-2h-1V9h-1v6H6V9h-1v2h-1V7h6v4z m3-1h-1v3h-1V7h2v3z""></path></svg>
    <span class=""num text-emphasized"">
      3
    </span>
    contributors
</a>

      </li>
    </ul>

      <div class=""repository-lang-stats"">
        <ol class=""repository-lang-stats-numbers"">
          <li>
              <a href=""/olahol/reactpack/search?l=javascript""  data-ga-click=""Repository, language stats search click, location:repo overview"">
                <span class=""color-block language-color"" style=""background-color:#f1e05a;""></span>
                <span class=""lang"">JavaScript</span>
                <span class=""percent"">96.2%</span>
              </a>
          </li>
          <li>
              <a href=""/olahol/reactpack/search?l=html""  data-ga-click=""Repository, language stats search click, location:repo overview"">
                <span class=""color-block language-color"" style=""background-color:#e44b23;""></span>
                <span class=""lang"">HTML</span>
                <span class=""percent"">3.8%</span>
              </a>
          </li>
        </ol>
      </div>
    </div>
  </div>
</div>

  <div class=""repository-lang-stats-graph js-toggle-lang-stats"" title=""Click for language details"" data-ga-click=""Repository, language bar stats toggle, location:repo overview"">
    <span class=""language-color"" aria-label=""JavaScript 96.2%"" style=""width:96.2%; background-color:#f1e05a;"" itemprop=""keywords"">JavaScript</span>
    <span class=""language-color"" aria-label=""HTML 3.8%"" style=""width:3.8%; background-color:#e44b23;"" itemprop=""keywords"">HTML</span>
  </div>


<div class=""file-navigation in-mid-page"">

    <div class=""select-menu get-repo-select-menu js-menu-container right select-menu-modal-right"">
  <button class=""btn btn-sm btn-primary select-menu-button js-menu-target""
    title=""Clone or download this repository""
    type=""button"" aria-label=""Clone or download this repository"" tabindex=""0"" aria-haspopup=""true"">
    <span>Clone or download</span>
  </button>

  <div class=""select-menu-modal-holder dropdown-menu-content js-menu-content"" aria-hidden=""true"">
    <div class=""get-repo-modal dropdown-menu dropdown-menu-sw pb-0 js-toggler-container "">
      <div class=""clone-options https-clone-options"">
        <!-- </textarea> --><!-- '""` --><form accept-charset=""UTF-8"" action=""/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone"" class=""right"" data-form-nonce=""4709b92c41d18f8d5f7b5198dd121713073c283d"" data-remote=""true"" method=""post""><div style=""margin:0;padding:0;display:inline""><input name=""utf8"" type=""hidden"" value=""&#x2713;"" /><input name=""authenticity_token"" type=""hidden"" value=""koQZIBCQB+zZmAYE4PNhGMpU6qKhVrvhglEctC8WRj863aD8dYoR5c0cbc2av7G4bJGx9Zk5NkLDPh6TXLm9Xw=="" /></div>
          <button type=""submit"" class=""btn-link btn-change-protocol js-toggler-target"">
            Use SSH
          </button>
</form>
        <h4 class=""mb-2"">
          Clone with HTTPS
          <a class=""muted-link"" href=""https://help.github.com/articles/which-remote-url-should-i-use"" target=""_blank"">
            <svg aria-hidden=""true"" class=""octicon octicon-question"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M6 10h2v2H6V10z m4-3.5c0 2.14-2 2.5-2 2.5H6c0-0.55 0.45-1 1-1h0.5c0.28 0 0.5-0.22 0.5-0.5v-1c0-0.28-0.22-0.5-0.5-0.5h-1c-0.28 0-0.5 0.22-0.5 0.5v0.5H4c0-1.5 1.5-3 3-3s3 1 3 2.5zM7 2.3c3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8s2.56-5.7 5.7-5.7m0-1.3C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7S10.86 1 7 1z""></path></svg>
          </a>
        </h4>
        <p class=""mb-1 get-repo-decription-text"">
          Use Git or checkout with SVN using the web URL.
        </p>

        <div class=""input-group js-zeroclipboard-container"">
  <input type=""text"" class=""form-control input-monospace input-sm js-zeroclipboard-target js-url-field"" value=""https://github.com/olahol/reactpack.git"" aria-label=""Clone this repository at https://github.com/olahol/reactpack.git"" readonly>
  <div class=""input-group-button"">
    <button aria-label=""Copy to clipboard"" class=""js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s"" data-copied-hint=""Copied!"" type=""button""><svg aria-hidden=""true"" class=""octicon octicon-clippy"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M2 12h4v1H2v-1z m5-6H2v1h5v-1z m2 3V7L6 10l3 3V11h5V9H9z m-4.5-1H2v1h2.5v-1zM2 11h2.5v-1H2v1z m9 1h1v2c-0.02 0.28-0.11 0.52-0.3 0.7s-0.42 0.28-0.7 0.3H1c-0.55 0-1-0.45-1-1V3c0-0.55 0.45-1 1-1h3C4 0.89 4.89 0 6 0s2 0.89 2 2h3c0.55 0 1 0.45 1 1v5h-1V5H1v9h10V12zM2 4h8c0-0.55-0.45-1-1-1h-1c-0.55 0-1-0.45-1-1s-0.45-1-1-1-1 0.45-1 1-0.45 1-1 1h-1c-0.55 0-1 0.45-1 1z""></path></svg></button>
  </div>
</div>

      </div>

      <div class=""clone-options ssh-clone-options"">
        <!-- </textarea> --><!-- '""` --><form accept-charset=""UTF-8"" action=""/users/set_protocol?protocol_selector=https&amp;protocol_type=clone"" class=""right"" data-form-nonce=""4709b92c41d18f8d5f7b5198dd121713073c283d"" data-remote=""true"" method=""post""><div style=""margin:0;padding:0;display:inline""><input name=""utf8"" type=""hidden"" value=""&#x2713;"" /><input name=""authenticity_token"" type=""hidden"" value=""o4LupQpVh84uTsFFmpN7iV6C0OQzqJm5ZERgw5Exi76e9DYVOJWDOcs3RO7+qXfRnx2R/FRqFqT+wYmf+/x2qw=="" /></div>
          <button type=""submit"" class=""btn-link btn-change-protocol js-toggler-target"">
            Use HTTPS
          </button>
</form>
        <h4 class=""mb-2"">
          Clone with SSH
          <a class=""muted-link"" href=""https://help.github.com/articles/which-remote-url-should-i-use"" target=""_blank"">
            <svg aria-hidden=""true"" class=""octicon octicon-question"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M6 10h2v2H6V10z m4-3.5c0 2.14-2 2.5-2 2.5H6c0-0.55 0.45-1 1-1h0.5c0.28 0 0.5-0.22 0.5-0.5v-1c0-0.28-0.22-0.5-0.5-0.5h-1c-0.28 0-0.5 0.22-0.5 0.5v0.5H4c0-1.5 1.5-3 3-3s3 1 3 2.5zM7 2.3c3.14 0 5.7 2.56 5.7 5.7S10.14 13.7 7 13.7 1.3 11.14 1.3 8s2.56-5.7 5.7-5.7m0-1.3C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7S10.86 1 7 1z""></path></svg>
          </a>
        </h4>
        <p class=""mb-1 get-repo-decription-text"">
          Use an SSH key and passphrase from account.
        </p>

        <div class=""input-group js-zeroclipboard-container"">
  <input type=""text"" class=""form-control input-monospace input-sm js-zeroclipboard-target js-url-field"" value=""git@github.com:olahol/reactpack.git"" aria-label=""Clone this repository at git@github.com:olahol/reactpack.git"" readonly>
  <div class=""input-group-button"">
    <button aria-label=""Copy to clipboard"" class=""js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s"" data-copied-hint=""Copied!"" type=""button""><svg aria-hidden=""true"" class=""octicon octicon-clippy"" height=""16"" version=""1.1"" viewBox=""0 0 14 16"" width=""14""><path d=""M2 12h4v1H2v-1z m5-6H2v1h5v-1z m2 3V7L6 10l3 3V11h5V9H9z m-4.5-1H2v1h2.5v-1zM2 11h2.5v-1H2v1z m9 1h1v2c-0.02 0.28-0.11 0.52-0.3 0.7s-0.42 0.28-0.7 0.3H1c-0.55 0-1-0.45-1-1V3c0-0.55 0.45-1 1-1h3C4 0.89 4.89 0 6 0s2 0.89 2 2h3c0.55 0 1 0.45 1 1v5h-1V5H1v9h10V12zM2 4h8c0-0.55-0.45-1-1-1h-1c-0.55 0-1-0.45-1-1s-0.45-1-1-1-1 0.45-1 1-0.45 1-1 1h-1c-0.55 0-1 0.45-1 1z""></path></svg></button>
  </div>
</div>

      </div>

      <div class=""mt-2"">
        
<a href=""/olahol/reactpack/archive/master.zip""
   class=""btn btn-outline get-repo-btn
""
   rel=""nofollow""
   data-ga-click=""Repository, download zip, location:repo overview"">
  Download ZIP
</a>

      </div>
    </div>
  </div>
</div>


  <div class=""btn-group right"">

    <a href=""/olahol/reactpack/find/master""
      class=""btn btn-sm empty-icon right""
      data-pjax
      data-hotkey=""t""
      data-ga-click=""Repository, find file, location:repo overview"">
      Find file
    </a>
  </div>

  
<div class=""select-menu branch-select-menu js-menu-container js-select-menu left"">
  <button class=""btn btn-sm select-menu-button js-menu-target css-truncate"" data-hotkey=""w""
    title=""master""
    type=""button"" aria-label=""Switch branches or tags"" tabindex=""0"" aria-haspopup=""true"">
    <i>Branch:</i>
    <span class=""js-select-button css-truncate-target"">master</span>
  </button>

  <div class=""select-menu-modal-holder js-menu-content js-navigation-container"" data-pjax aria-hidden=""true"">

    <div class=""select-menu-modal"">
      <div class=""select-menu-header"">
        <svg aria-label=""Close"" class=""octicon octicon-x js-menu-close"" height=""16"" role=""img"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z""></path></svg>
        <span class=""select-menu-title"">Switch branches/tags</span>
      </div>

      <div class=""select-menu-filters"">
        <div class=""select-menu-text-filter"">
          <input type=""text"" aria-label=""Filter branches/tags"" id=""context-commitish-filter-field"" class=""form-control js-filterable-field js-navigation-enable"" placeholder=""Filter branches/tags"">
        </div>
        <div class=""select-menu-tabs"">
          <ul>
            <li class=""select-menu-tab"">
              <a href=""#"" data-tab-filter=""branches"" data-filter-placeholder=""Filter branches/tags"" class=""js-select-menu-tab"" role=""tab"">Branches</a>
            </li>
            <li class=""select-menu-tab"">
              <a href=""#"" data-tab-filter=""tags"" data-filter-placeholder=""Find a tag…"" class=""js-select-menu-tab"" role=""tab"">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class=""select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket"" data-tab-filter=""branches"" role=""menu"">

        <div data-filterable-for=""context-commitish-filter-field"" data-filterable-type=""substring"">


            <a class=""select-menu-item js-navigation-item js-navigation-open selected""
               href=""/olahol/reactpack/tree/master""
               data-name=""master""
               data-skip-pjax=""true""
               rel=""nofollow"">
              <svg aria-hidden=""true"" class=""octicon octicon-check select-menu-item-icon"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M12 5L4 13 0 9l1.5-1.5 2.5 2.5 6.5-6.5 1.5 1.5z""></path></svg>
              <span class=""select-menu-item-text css-truncate-target js-select-menu-filter-text"" title=""master"">
                master
              </span>
            </a>
        </div>

          <div class=""select-menu-no-results"">Nothing to show</div>
      </div>

      <div class=""select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket"" data-tab-filter=""tags"">
        <div data-filterable-for=""context-commitish-filter-field"" data-filterable-type=""substring"">


        </div>

        <div class=""select-menu-no-results"">Nothing to show</div>
      </div>

    </div>
  </div>
</div>


      <button type=""button"" class=""btn btn-sm disabled tooltipped tooltipped-n new-pull-request-btn"" aria-label=""You must be signed in to create a pull request"">
        New pull request
      </button>

  <div class=""breadcrumb"">
    
  </div>
</div>





  <div class=""commit-tease js-details-container"">
    <span class=""right"">
      Latest commit
      <a class=""commit-tease-sha"" href=""/olahol/reactpack/commit/19209bce006ab1e731b0de4dd2e0bd47260473b6"" data-pjax>
        19209bc
      </a>
      <span itemprop=""dateModified""><relative-time datetime=""2016-06-02T20:19:22Z"">Jun 2, 2016</relative-time></span>
    </span>


    <span class=""commit-author-section"">
      <img alt=""@olahol"" class=""avatar"" height=""20"" src=""https://avatars0.githubusercontent.com/u/1386739?v=3&amp;s=40"" width=""20"" />
      <a href=""/olahol"" class=""user-mention"" rel=""author"">olahol</a>
    </span>

        <a href=""/olahol/reactpack/commit/19209bce006ab1e731b0de4dd2e0bd47260473b6"" class=""message"" data-pjax=""true"" title=""clearer readme"">clearer readme</a>
    </span>

  </div>


<div class=""file-wrap"">

  <a href=""/olahol/reactpack/tree/19209bce006ab1e731b0de4dd2e0bd47260473b6"" class=""hidden js-permalink-shortcut"" data-hotkey=""y"">Permalink</a>

  <table class=""files js-navigation-container js-active-navigation-container"" data-pjax>


    <tbody>
      <tr class=""warning include-fragment-error"">
        <td class=""icon""><svg aria-hidden=""true"" class=""octicon octicon-alert"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M15.72 12.5l-6.85-11.98C8.69 0.21 8.36 0.02 8 0.02s-0.69 0.19-0.87 0.5l-6.85 11.98c-0.18 0.31-0.18 0.69 0 1C0.47 13.81 0.8 14 1.15 14h13.7c0.36 0 0.69-0.19 0.86-0.5S15.89 12.81 15.72 12.5zM9 12H7V10h2V12zM9 9H7V5h2V9z""></path></svg></td>
        <td class=""content"" colspan=""3"">Failed to load latest commit information.</td>
      </tr>

        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/.gitignore"" class=""js-navigation-open"" id=""a084b794bc0759e7a6b77810e01874f2-25d7d3aff15a72d1cf4202dbd0dcf46293f95eb1"" title="".gitignore"">.gitignore</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/README.md"" class=""js-navigation-open"" id=""04c6e90faac2675aa89e2176d2eec7d8-1f7d2e2f0da0a5585fadbd2e3f228c9e0a348a5c"" title=""README.md"">README.md</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/19209bce006ab1e731b0de4dd2e0bd47260473b6"" class=""message"" data-pjax=""true"" title=""clearer readme"">clearer readme</a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T20:19:22Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/bar.js"" class=""js-navigation-open"" id=""32b3a1e284cb4df2e1b23f9fb8d789f5-a9555baa26bb21be50365ae6a4caa248549fb770"" title=""bar.js"">bar.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/build.js"" class=""js-navigation-open"" id=""efd59cd1bdc5c9ac6d0eaa368f1e149f-db5e1001d69dafbcba60f1188b00ad659fd95e2f"" title=""build.js"">build.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/cli.js"" class=""js-navigation-open"" id=""2cce40143051e25f811b56c79d619bf5-a688510e9db3d391552db1c9621af0281889e263"" title=""cli.js"">cli.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/config.js"" class=""js-navigation-open"" id=""e22b50e740e102c8de5e858dbcd7753d-6c80755ce528f0d69171a9b581abddc32b5f6035"" title=""config.js"">config.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/ec472936a64e1248147d2cafaccb4ae2d335d864"" class=""message"" data-pjax=""true"" title=""Typo correction

Fixed spelling for the default HTML title."">Typo correction</a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T18:53:36Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/demo.gif"" class=""js-navigation-open"" id=""df537fdc576e33db40f6f4295b2ea8a0-4fc1b5cf5a18a138c6224e2480ae43b1ced8eba9"" title=""demo.gif"">demo.gif</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/dev.js"" class=""js-navigation-open"" id=""fef45a639edd03b578f5eaeb0364b587-5fd52e0c2bee1a6d9cf020232d0f8dcd50d8bbe6"" title=""dev.js"">dev.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/format.js"" class=""js-navigation-open"" id=""e98819f4748a68aa1ab35b1264f678be-7e3af7f86825115e199fa24344717a162b1bfb3d"" title=""format.js"">format.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/index.ejs"" class=""js-navigation-open"" id=""0f1343266c87b6be115f176f1317d150-b3c104f5097790634e5a81320d97e458b8762dea"" title=""index.ejs"">index.ejs</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/package.json"" class=""js-navigation-open"" id=""b9cfc7f2cdf78a7f4b91a753d10865a2-dc3824b404d8c71266ef35ac5d26886b9b511901"" title=""package.json"">package.json</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/19209bce006ab1e731b0de4dd2e0bd47260473b6"" class=""message"" data-pjax=""true"" title=""clearer readme"">clearer readme</a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T20:19:22Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/reactpack.png"" class=""js-navigation-open"" id=""2f2744034a40855d1634a416d105616a-20656178fa12277043e339e87dbc755edccad8ad"" title=""reactpack.png"">reactpack.png</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
        <tr class=""js-navigation-item"">
          <td class=""icon"">
            <svg aria-hidden=""true"" class=""octicon octicon-file-text"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z""></path></svg>
            <img alt="""" class=""spinner"" height=""16"" src=""https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif"" width=""16"" />
          </td>
          <td class=""content"">
            <span class=""css-truncate css-truncate-target""><a href=""/olahol/reactpack/blob/master/watch.js"" class=""js-navigation-open"" id=""761a95718c9050f2a52aa03350d58a41-5a851c63ec0ed72f33c36643782cb72b0629c2b5"" title=""watch.js"">watch.js</a></span>
          </td>
          <td class=""message"">
            <span class=""css-truncate css-truncate-target"">
                  <a href=""/olahol/reactpack/commit/25116aff988221ef515cd2423435ddb5739ed22d"" class=""message"" data-pjax=""true"" title=""first version :package:"">first version <g-emoji alias=""package"" fallback-src=""https://assets-cdn.github.com/images/icons/emoji/unicode/1f4e6.png"">📦</g-emoji></a>
            </span>
          </td>
          <td class=""age"">
            <span class=""css-truncate css-truncate-target""><time-ago datetime=""2016-06-02T16:14:19Z"">Jun 2, 2016</time-ago></span>
          </td>
        </tr>
    </tbody>
  </table>

</div>



  <div id=""readme"" class=""readme boxed-group clearfix announce instapaper_body md"">
    <h3>
      <svg aria-hidden=""true"" class=""octicon octicon-book"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M2 5h4v1H2v-1z m0 3h4v-1H2v1z m0 2h4v-1H2v1z m11-5H9v1h4v-1z m0 2H9v1h4v-1z m0 2H9v1h4v-1z m2-6v9c0 0.55-0.45 1-1 1H8.5l-1 1-1-1H1c-0.55 0-1-0.45-1-1V3c0-0.55 0.45-1 1-1h5.5l1 1 1-1h5.5c0.55 0 1 0.45 1 1z m-8 0.5l-0.5-0.5H1v9h6V3.5z m7-0.5H8.5l-0.5 0.5v8.5h6V3z""></path></svg>
      README.md
    </h3>

      <article class=""markdown-body entry-content"" itemprop=""text""><h1><a id=""user-content-reactpack-"" class=""anchor"" href=""#reactpack-"" aria-hidden=""true""><svg aria-hidden=""true"" class=""octicon octicon-link"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z""></path></svg></a>reactpack <a href=""https://github.com/feross/standard""><img src=""https://camo.githubusercontent.com/60b623caed11e738da0b201abab8b8d2de66a7b0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d7374616e646172642d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"" alt=""js-standard-style"" data-canonical-src=""https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square"" style=""max-width:100%;""></a></h1>

<blockquote>
<p>one command to build your React frontend.</p>
</blockquote>

<p align=""center"">
  <a href=""/olahol/reactpack/blob/master/reactpack.png"" target=""_blank""><img src=""/olahol/reactpack/raw/master/reactpack.png"" alt=""reactpack"" style=""max-width:100%;""></a>
</p>

<ul class=""contains-task-list"">
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Unified package, only one <code>npm i</code> needed.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Linting with <code>standard</code>.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> ES6 with Babel presets <code>react</code>, <code>es2015</code> and <code>stage-0</code>.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> PostCSS with <code>precss</code> and <code>autoprefixer</code>.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Style extraction into css bundle.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Automatic index.html creation with <code>html-webpack-plugin</code>.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Source maps for styles and scripts.</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Watch mode (<code>--watch</code>).</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Development server mode (<code>--dev</code>).</li>
<li class=""task-list-item""><input type=""checkbox"" class=""task-list-item-checkbox"" checked="""" disabled=""""> Toggle optimizations with <code>uglify</code> and <code>cssnano</code> (<code>-O</code>).</li>
</ul>

<h2><a id=""user-content-install"" class=""anchor"" href=""#install"" aria-hidden=""true""><svg aria-hidden=""true"" class=""octicon octicon-link"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z""></path></svg></a>Install</h2>

<div class=""highlight highlight-source-shell""><pre>$ npm i reactpack -g</pre></div>

<p>or</p>

<div class=""highlight highlight-source-shell""><pre>$ npm i reactpack --save-dev</pre></div>

<h2><a id=""user-content-example"" class=""anchor"" href=""#example"" aria-hidden=""true""><svg aria-hidden=""true"" class=""octicon octicon-link"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z""></path></svg></a>Example</h2>

<div class=""highlight highlight-source-js""><pre><span class=""pl-k"">import</span> <span class=""pl-smi"">React</span>, { <span class=""pl-smi"">Component</span> } <span class=""pl-k"">from</span> <span class=""pl-s""><span class=""pl-pds"">'</span>react<span class=""pl-pds"">'</span></span>
<span class=""pl-k"">import</span> { <span class=""pl-smi"">render</span> } <span class=""pl-k"">from</span> <span class=""pl-s""><span class=""pl-pds"">'</span>react-dom<span class=""pl-pds"">'</span></span>

<span class=""pl-c1"">require</span>(<span class=""pl-s""><span class=""pl-pds"">'</span>bootstrap/dist/css/bootstrap.css<span class=""pl-pds"">'</span></span>)

<span class=""pl-k"">class</span> <span class=""pl-en"">Example</span> <span class=""pl-k"">extends</span> <span class=""pl-e"">Component</span> {
  <span class=""pl-en"">render</span> () {
    <span class=""pl-k"">return</span> <span class=""pl-k"">&lt;</span>h1<span class=""pl-k"">&gt;</span>Hello World<span class=""pl-k"">!</span><span class=""pl-k"">&lt;</span><span class=""pl-k"">/</span>h1<span class=""pl-k"">&gt;</span>
  }
}

<span class=""pl-en"">render</span>(<span class=""pl-k"">&lt;</span>Example <span class=""pl-k"">/</span><span class=""pl-k"">&gt;</span>, <span class=""pl-c1"">document</span>.<span class=""pl-c1"">getElementById</span>(<span class=""pl-s""><span class=""pl-pds"">'</span>react-app<span class=""pl-pds"">'</span></span>))</pre></div>

<div class=""highlight highlight-source-js""><pre>{
  <span class=""pl-k"">...</span>
  <span class=""pl-s""><span class=""pl-pds"">""</span>scripts<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> {
    <span class=""pl-s""><span class=""pl-pds"">""</span>build<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> <span class=""pl-s""><span class=""pl-pds"">""</span>reactpack src/index.js<span class=""pl-pds"">""</span></span>,
  },
  <span class=""pl-s""><span class=""pl-pds"">""</span>dependencies<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> {
    <span class=""pl-s""><span class=""pl-pds"">""</span>bootstrap<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> <span class=""pl-s""><span class=""pl-pds"">""</span>^3.3.6<span class=""pl-pds"">""</span></span>,
    <span class=""pl-s""><span class=""pl-pds"">""</span>react<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> <span class=""pl-s""><span class=""pl-pds"">""</span>^15.1.0<span class=""pl-pds"">""</span></span>,
    <span class=""pl-s""><span class=""pl-pds"">""</span>react-dom<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> <span class=""pl-s""><span class=""pl-pds"">""</span>^15.1.0<span class=""pl-pds"">""</span></span>,
  },
  <span class=""pl-s""><span class=""pl-pds"">""</span>devDependencies<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> {
    <span class=""pl-s""><span class=""pl-pds"">""</span>reactpack<span class=""pl-pds"">""</span></span><span class=""pl-k"">:</span> <span class=""pl-s""><span class=""pl-pds"">""</span>^0.2.0<span class=""pl-pds"">""</span></span>
  },
  <span class=""pl-k"">...</span>
}</pre></div>

<p align=""center"">
  <a href=""/olahol/reactpack/blob/master/demo.gif"" target=""_blank""><img src=""/olahol/reactpack/raw/master/demo.gif"" alt=""reactpack"" style=""max-width:100%;""></a>
</p>

<h2><a id=""user-content-cli"" class=""anchor"" href=""#cli"" aria-hidden=""true""><svg aria-hidden=""true"" class=""octicon octicon-link"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M4 9h1v1h-1c-1.5 0-3-1.69-3-3.5s1.55-3.5 3-3.5h4c1.45 0 3 1.69 3 3.5 0 1.41-0.91 2.72-2 3.25v-1.16c0.58-0.45 1-1.27 1-2.09 0-1.28-1.02-2.5-2-2.5H4c-0.98 0-2 1.22-2 2.5s1 2.5 2 2.5z m9-3h-1v1h1c1 0 2 1.22 2 2.5s-1.02 2.5-2 2.5H9c-0.98 0-2-1.22-2-2.5 0-0.83 0.42-1.64 1-2.09v-1.16c-1.09 0.53-2 1.84-2 3.25 0 1.81 1.55 3.5 3 3.5h4c1.45 0 3-1.69 3-3.5s-1.5-3.5-3-3.5z""></path></svg></a>CLI</h2>

<pre><code>  Usage: reactpack [options] &lt;entry&gt; [path/to/bundle]

  Options:

    -h, --help       output usage information
    -V, --version    output the version number
    -q, --quiet      no output
    -O, --optimize   optimize
    -w, --watch      watch
    -d, --dev        dev
    -p, --port       port for webpack-dev-server
    --clean          clean everything in bundle path before building
    --no-source-map  output source map
    --no-postcss     do not use postcss
    --no-html        do not output an index.html
    --no-lint        turn off linting
</code></pre>
</article>
  </div>


  </div>
  <div class=""modal-backdrop""></div>
</div>


    </div>
  </div>

    </div>

        <div class=""container site-footer-container"">
  <div class=""site-footer"" role=""contentinfo"">
    <ul class=""site-footer-links right"">
        <li><a href=""https://status.github.com/"" data-ga-click=""Footer, go to status, text:status"">Status</a></li>
      <li><a href=""https://developer.github.com"" data-ga-click=""Footer, go to api, text:api"">API</a></li>
      <li><a href=""https://training.github.com"" data-ga-click=""Footer, go to training, text:training"">Training</a></li>
      <li><a href=""https://shop.github.com"" data-ga-click=""Footer, go to shop, text:shop"">Shop</a></li>
        <li><a href=""https://github.com/blog"" data-ga-click=""Footer, go to blog, text:blog"">Blog</a></li>
        <li><a href=""https://github.com/about"" data-ga-click=""Footer, go to about, text:about"">About</a></li>

    </ul>

    <a href=""https://github.com"" aria-label=""Homepage"" class=""site-footer-mark"" title=""GitHub"">
      <svg aria-hidden=""true"" class=""octicon octicon-mark-github"" height=""24"" version=""1.1"" viewBox=""0 0 16 16"" width=""24""><path d=""M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z""></path></svg>
</a>
    <ul class=""site-footer-links"">
      <li>&copy; 2016 <span title=""0.10986s from github-fe147-cp1-prd.iad.github.net"">GitHub</span>, Inc.</li>
        <li><a href=""https://github.com/site/terms"" data-ga-click=""Footer, go to terms, text:terms"">Terms</a></li>
        <li><a href=""https://github.com/site/privacy"" data-ga-click=""Footer, go to privacy, text:privacy"">Privacy</a></li>
        <li><a href=""https://github.com/security"" data-ga-click=""Footer, go to security, text:security"">Security</a></li>
        <li><a href=""https://github.com/contact"" data-ga-click=""Footer, go to contact, text:contact"">Contact</a></li>
        <li><a href=""https://help.github.com"" data-ga-click=""Footer, go to help, text:help"">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id=""ajax-error-message"" class=""ajax-error-message flash flash-error"">
      <svg aria-hidden=""true"" class=""octicon octicon-alert"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M15.72 12.5l-6.85-11.98C8.69 0.21 8.36 0.02 8 0.02s-0.69 0.19-0.87 0.5l-6.85 11.98c-0.18 0.31-0.18 0.69 0 1C0.47 13.81 0.8 14 1.15 14h13.7c0.36 0 0.69-0.19 0.86-0.5S15.89 12.81 15.72 12.5zM9 12H7V10h2V12zM9 9H7V5h2V9z""></path></svg>
      <button type=""button"" class=""flash-close js-flash-close js-ajax-error-dismiss"" aria-label=""Dismiss error"">
        <svg aria-hidden=""true"" class=""octicon octicon-x"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z""></path></svg>
      </button>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin=""anonymous"" src=""https://assets-cdn.github.com/assets/compat-7db58f8b7b91111107fac755dd8b178fe7db0f209ced51fc339c446ad3f8da2b.js""></script>
      <script crossorigin=""anonymous"" src=""https://assets-cdn.github.com/assets/frameworks-b801b4f0918b70f4a3a4105efbf8e5c567b4b12e41a263b4805397c93aebf317.js""></script>
      <script async=""async"" crossorigin=""anonymous"" src=""https://assets-cdn.github.com/assets/github-9e11266e9840a1629501dc03630329cc0bd58efc0dcfcc89a16868ba1d5c1465.js""></script>
      
      
      
      
      
      
    <div class=""js-stale-session-flash stale-session-flash flash flash-warn flash-banner hidden"">
      <svg aria-hidden=""true"" class=""octicon octicon-alert"" height=""16"" version=""1.1"" viewBox=""0 0 16 16"" width=""16""><path d=""M15.72 12.5l-6.85-11.98C8.69 0.21 8.36 0.02 8 0.02s-0.69 0.19-0.87 0.5l-6.85 11.98c-0.18 0.31-0.18 0.69 0 1C0.47 13.81 0.8 14 1.15 14h13.7c0.36 0 0.69-0.19 0.86-0.5S15.89 12.81 15.72 12.5zM9 12H7V10h2V12zM9 9H7V5h2V9z""></path></svg>
      <span class=""signed-in-tab-flash"">You signed in with another tab or window. <a href="""">Reload</a> to refresh your session.</span>
      <span class=""signed-out-tab-flash"">You signed out in another tab or window. <a href="""">Reload</a> to refresh your session.</span>
    </div>
    <div class=""facebox"" id=""facebox"" style=""display:none;"">
  <div class=""facebox-popup"">
    <div class=""facebox-content"" role=""dialog"" aria-labelledby=""facebox-header"" aria-describedby=""facebox-description"">
    </div>
    <button type=""button"" class=""facebox-close js-facebox-close"" aria-label=""Close modal"">
      <svg aria-hidden=""true"" class=""octicon octicon-x"" height=""16"" version=""1.1"" viewBox=""0 0 12 16"" width=""12""><path d=""M7.48 8l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75-1.48-1.48 3.75-3.75L0.77 4.25l1.48-1.48 3.75 3.75 3.75-3.75 1.48 1.48-3.75 3.75z""></path></svg>
    </button>
  </div>
</div>

  </body>
</html>

"
okket,129,11823274,223,1464881543,Async and Await,story,https://zeit.co/blog/async-and-await,"<html><head><title class=""next-head"">ZEIT – Async and Await</title><meta name=""viewport"" content=""width=device-width, user-scalable=no"" class=""next-head""/><meta name=""twitter:card"" content=""summary_large_image"" class=""next-head""/><meta name=""twitter:site"" content=""@zeithq"" class=""next-head""/><meta name=""og:title"" content=""Async and Await"" class=""next-head""/><meta name=""og:url"" content=""https://zeit.co/api"" class=""next-head""/><meta name=""description"" content=""JavaScript, in particular Node.js, has been frequently associated with callback hell. If you&#x27;ve written code that deals with a lot async I/O, you&#x27;re probably familiar with this pattern:"" class=""next-head""/><meta name=""og:description"" content=""JavaScript, in particular Node.js, has been frequently associated with callback hell. If you&#x27;ve written code that deals with a lot async I/O, you&#x27;re probably familiar with this pattern:"" class=""next-head""/><meta name=""og:image"" content=""https://zeit.co/static/twitter-card.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""57x57"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-57x57.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""60x60"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-60x60.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""72x72"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-72x72.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""76x76"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-76x76.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""114x114"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-114x114.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""120x120"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-120x120.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""144x144"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-144x144.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""152x152"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-152x152.png"" class=""next-head""/><link rel=""apple-touch-icon"" sizes=""180x180"" href=""https://cdn.zeit.co/favicon/apple-touch-icon-180x180.png"" class=""next-head""/><link rel=""icon"" type=""image/png"" href=""https://cdn.zeit.co/favicon/favicon-32x32.png"" sizes=""32x32"" class=""next-head""/><link rel=""icon"" type=""image/png"" href=""https://cdn.zeit.co/favicon/android-chrome-192x192.png"" sizes=""192x192"" class=""next-head""/><link rel=""icon"" type=""image/png"" href=""https://cdn.zeit.co/favicon/favicon-96x96.png"" sizes=""96x96"" class=""next-head""/><link rel=""icon"" type=""image/png"" href=""https://cdn.zeit.co/favicon/favicon-16x16.png"" sizes=""16x16"" class=""next-head""/><link rel=""manifest"" href=""https://cdn.zeit.co/favicon/manifest.json"" class=""next-head""/><link rel=""mask-icon"" href=""https://cdn.zeit.co/favicon/safari-pinned-tab.svg"" color=""#ffffff"" class=""next-head""/><link rel=""shortcut icon"" href=""https://cdn.zeit.co/favicon/favicon.ico"" class=""next-head""/><meta name=""theme-color"" content=""#000"" class=""next-head""/><style id=""_next-style_BlogAsyncAndAwait"" class=""_next-style"">.__blog_async-and-await_p_tag{line-height:18px;color:#ccc;font-size:12px}.__blog_async-and-await_h1_tag,.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag{font-weight:400;margin:20px 0}.__blog_async-and-await_h1_tag{color:#fff;font-size:12px}.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag{color:#909090;font-size:12px}.__blog_async-and-await_h1_tag:before{content:""# ""}.__blog_async-and-await_h2_tag:before{content:""## ""}.__blog_async-and-await_h3_tag:before{content:""### ""}.__blog_async-and-await_h4_tag:before{content:""#### ""}.__blog_async-and-await_ol_tag,.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag{color:#ccc;font-size:12px}.__blog_async-and-await_a_tag{color:#fff}.__blog_async-and-await_ul_tag{margin:20px 0;padding:0}.__blog_async-and-await_ul_tag .__blog_async-and-await_ul_tag{margin-left:15px;margin-top:10px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{list-style-type:none;margin-bottom:5px;padding-left:15px;line-height:16px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag:before{content:""-"";display:inline-block;color:#999;position:absolute;margin-left:-15px}.__blog_async-and-await_ol_tag{list-style-type:lower-alpha;margin-bottom:16px}.__blog_async-and-await_ol_tag .__blog_async-and-await_li_tag{line-height:18px}.__blog_async-and-await_ol_tag .__blog_async-and-await_ol_tag{list-style-type:lower-roman;margin:20px 0}.__blog_async-and-await_hr_tag{border:none;margin:12px 0;text-align:center}.__blog_async-and-await_hr_tag:before{content:""***"";font-size:13px}.__blog_async-and-await_em_tag:after,.__blog_async-and-await_em_tag:before{content:""_""}.__blog_async-and-await_strong_tag:after,.__blog_async-and-await_strong_tag:before{content:""*""}.__blog_async-and-await_code_tag:after,.__blog_async-and-await_code_tag:before{content:""`""}.__blog_async-and-await_h1_tag{color:#000;font-size:16px;margin-bottom:0}.__blog_async-and-await_h1_tag,.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag{font-weight:700}.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag,.__blog_async-and-await_ol_tag,.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag{color:#424242}.__blog_async-and-await_a_tag{color:#4a90e2;text-decoration:none;border-bottom:1px solid #4a90e2;padding-bottom:1px}.__blog_async-and-await_hr_tag:before{color:#424242}.__blog_async-and-await_h1_tag{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:16px}.__blog_async-and-await_h2_tag{font-size:13px}.__blog_async-and-await_h1_tag:before,.__blog_async-and-await_h2_tag:before,.__blog_async-and-await_h3_tag:before{display:none}.__blog_async-and-await_pre_tag{margin-left:20px;color:#666;padding:10px 0;line-height:18px;white-space:pre-wrap}.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag:after,.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag:before{content:''}.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{font-size:12px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{line-height:20px}.__blog_async-and-await_code_tag{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:12px;color:#777}.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag{color:#b800e3;word-wrap:break-word}.__blog_async-and-await_img_tag{max-width:100%;height:auto}.__blog_async-and-await_container{margin:0 auto;padding:40px 20px;max-width:800px}.__blog_async-and-await_meta{margin-top:7px;font-size:12px}.__blog_async-and-await_meta .__blog_async-and-await_a_tag{border-bottom-width:0}.__blog_async-and-await_a_tag.__blog_async-and-await_ref{font-size:10px;border-bottom-width:0;position:relative;bottom:3px}.__blog_async-and-await_footnotes:before{content:'***';color:#666;text-align:center;margin:20px;display:block}.__blog_async-and-await_footnotes,.__blog_async-and-await_footnotes .__blog_async-and-await_li_tag{list-style:inside decimal;margin:0;padding:0}.__blog_async-and-await_footnotes .__blog_async-and-await_li_tag{margin-bottom:18px}.__blog_async-and-await_comment{color:#999}</style><style id=""_next-style_ComponentsHeader"" class=""_next-style"">.__components_header_header_tag{max-width:900px;margin:auto;padding:30px 0;position:relative}.__components_header_a_tag{color:#ccc;font-size:11px;text-decoration:none}.__components_header_inverse .__components_header_a_tag{color:#000}.__components_header_a_tag.__components_header_logo{display:block;margin:0 auto;width:39px;height:35px}.__components_header_loading .__components_header_img_tag{-webkit-animation:.5s __components_header_fadeOut,.5s 1.5s __components_header_rotateInitial,2s ease-in 2s infinite __components_header_rotate;animation:.5s __components_header_fadeOut,.5s 1.5s __components_header_rotateInitial,2s ease-in 2s infinite __components_header_rotate;-webkit-animation-delay:1.2s,1.5s,2s;animation-delay:1.2s,1.5s,2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-direction:alternate;animation-direction:alternate}.__components_header_nav{padding:10px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.__components_header_nav .__components_header_a_tag{padding:10px}.__components_header_nav .__components_header_a_tag.__components_header_active{font-weight:700}.__components_header_right{right:0}.__components_header_left{left:0}.__components_header_title{margin-bottom:60px;font-size:14px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-weight:400;text-rendering:geometricPrecision;text-align:center;color:#fff}.__components_header_title .__components_header_b_tag{font-weight:700}.__components_header_inverse .__components_header_title{color:#000}@-webkit-keyframes __components_header_fadeOut{0%{opacity:1}to{opacity:.7}}@keyframes __components_header_fadeOut{0%{opacity:1}to{opacity:.7}}@-webkit-keyframes __components_header_rotateInitial{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);transform:rotate(15deg)}}@keyframes __components_header_rotateInitial{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);transform:rotate(15deg)}}@-webkit-keyframes __components_header_rotate{0%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}}@keyframes __components_header_rotate{0%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}}@media screen and (max-width:730px){.__components_header_header_tag{text-align:center}.__components_header_nav{padding-top:40px;padding-bottom:0;position:relative;-webkit-transform:none;transform:none}}</style><style id=""_next-style_ComponentsLogo"" class=""_next-style"">.__components_logo_linearGradient_tag .__components_logo_stop_tag:first-child{stop-color:#000}.__components_logo_inverse .__components_logo_linearGradient_tag .__components_logo_stop_tag:first-child,.__components_logo_linearGradient_tag .__components_logo_stop_tag:last-child{stop-color:#fff}.__components_logo_inverse .__components_logo_linearGradient_tag .__components_logo_stop_tag:last-child{stop-color:#000}</style><style id=""_next-style_ComponentsHeading"" class=""_next-style"">.__components_heading_a_tag{border-bottom:1px solid transparent;color:inherit;text-decoration:none}.__components_heading_a_tag:hover{border-bottom-color:inherit}.__components_heading_h1 .__components_heading_a_tag:before{content:""# ""}.__components_heading_h2 .__components_heading_a_tag:before{content:""## ""}.__components_heading_h3 .__components_heading_a_tag:before{content:""### ""}.__components_heading_h1:before,.__components_heading_h2:before,.__components_heading_h3:before{display:none}.__components_heading_target{display:block;margin-top:-20px;padding-top:20px;visibility:hidden;position:absolute}.__components_heading_permalink{text-align:center;vertical-align:middle;visibility:hidden}.__components_heading_a_tag:hover~.__components_heading_permalink{visibility:visible}</style><style id=""_next-style_ComponentsZeit"" class=""_next-style"">.__components_zeit_zeit-logo{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:14px;display:inline-block;color:#fff}.__components_zeit_zeit-logo .__components_zeit_b_tag{font-size:11px;font-weight:700;display:inline-block;text-indent:4px}.__components_zeit_zeit-logo.__components_zeit_inverse{color:#424242}</style><style id=""_next-style_ComponentsFooter"" class=""_next-style"">.__components_footer_footer_tag{position:absolute;right:0;bottom:0;left:0;padding:20px;font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;vertical-align:top;max-width:900px;margin:auto}.__components_footer_left{float:left;height:20px;line-height:20px;vertical-align:middle}.__components_footer_right{float:right}.__components_footer_copyright{color:#666;font-size:11px}@media screen and (max-width:730px){.__components_footer_footer_tag{text-align:center}.__components_footer_copyright .__components_footer_text{display:none}.__components_footer_left,.__components_footer_right{float:none}}</style><style id=""_next-style_ComponentsNavigation"" class=""_next-style"">.__components_navigation_nav_tag{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif}.__components_navigation_navigation{margin:0;padding:0;list-style:none}.__components_navigation_navigation .__components_navigation_li_tag{display:inline-block;vertical-align:middle;margin-right:15px;border-right:1px solid #4a4a4a;height:20px;line-height:20px}.__components_navigation_inverse .__components_navigation_navigation .__components_navigation_li_tag{border-right:1px solid #ccc}.__components_navigation_navigation .__components_navigation_li_tag .__components_navigation_a_tag{margin-right:15px;height:20px;display:inline-block}.__components_navigation_navigation .__components_navigation_li_tag:last-child{border-right:0;margin-right:0}.__components_navigation_navigation .__components_navigation_li_tag:last-child .__components_navigation_a_tag{margin-right:0}.__components_navigation_navigation .__components_navigation_a_tag{color:#666;text-decoration:none;font-size:11px}.__components_navigation_navigation .__components_navigation_a_tag:hover{color:#999}.__components_navigation_bird{padding-top:5px}.__components_navigation_bar{width:0;border-left:1px solid #5e5e5e}@media screen and (max-width:730px){.__components_navigation_privacy .__components_navigation_long,.__components_navigation_terms .__components_navigation_long{display:none}}</style><style id=""_next-style_ComponentsTwitterBird"" class=""_next-style"">.__components_twitter-bird_svg_tag:hover .__components_twitter-bird_path_tag{fill:#999}</style></head><body><div><div id=""__next""><div class=""__blog_async-and-await_div_tag"" data-reactroot="""" data-reactid=""1"" data-react-checksum=""1507435878""><!-- react-empty: 2 --><div class=""__components_header_inverse __components_header_div_tag"" data-reactid=""3""><header class=""__components_header_header_tag"" data-reactid=""4""><a class=""__components_header_logo __components_header_a_tag"" href=""/"" data-reactid=""5""><svg class=""__components_logo_inverse __components_logo_svg_tag"" viewBox=""0 0 226 200"" version=""1.1"" data-reactid=""6""><defs class=""__components_logo_defs_tag"" data-reactid=""7""><linearGradient class=""__components_logo_linearGradient_tag"" x1=""196.572434%"" y1=""228.815483%"" x2=""50%"" y2=""50%"" id=""l1"" data-reactid=""8""><stop class=""__components_logo_stop_tag"" offset=""0%"" data-reactid=""9""></stop><stop class=""__components_logo_stop_tag"" offset=""100%"" data-reactid=""10""></stop></linearGradient></defs><g class=""__components_logo_g_tag"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""11""><g class=""__components_logo_g_tag"" transform=""translate(-141.000000, -156.000000)"" fill=""url(#l1)"" data-reactid=""12""><polygon class=""__components_logo_polygon_tag"" points=""254 156.459299 367 356 141 356 "" data-reactid=""13""></polygon></g></g></svg></a><div class=""__components_header_nav __components_header_right __components_header_div_tag"" data-reactid=""14""><a class=""__components_header_a_tag"" href=""/now"" data-reactid=""15"">/now</a><a class=""__components_header_active __components_header_a_tag"" href=""/blog"" data-reactid=""16"">/blog</a><a class=""__components_header_a_tag"" href=""/api"" data-reactid=""17"">/api</a><a class=""__components_header_a_tag"" href=""/about"" data-reactid=""18"">/about</a><a class=""__components_header_a_tag"" href=""/login"" data-reactid=""19"">/login</a></div></header><style class=""__components_header_style_tag"" data-reactid=""20"">    html {      height: 100%;      box-sizing: border-box;    }    *,    *:before,    *:after {      box-sizing: inherit;    }    a {      -webkit-tap-highlight-color: rgba(0,0,0,0);    }    body {      position: relative;      min-height: 100%;      margin: 0;      padding-bottom: 6rem;      font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif;      text-rendering: geometricPrecision;    }  </style><style class=""__components_header_style_tag"" data-reactid=""21"">      html, body {        background-color: #fff;      }    </style></div><div class=""__blog_async-and-await_container __blog_async-and-await_div_tag"" data-reactid=""22""><h1 class=""__components_heading_h1 __components_heading_Heading_tag __blog_async-and-await_h1_tag"" data-reactid=""23""><span id="""" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""24""></span><!-- react-text: 25 --> <!-- /react-text --><!-- react-text: 26 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#"" data-reactid=""27"">Async and Await</a><!-- react-text: 28 --> <!-- /react-text --><!-- react-text: 29 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""30""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""31""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""32""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""33""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""34""></path></g></g></svg></span></h1><p class=""__blog_async-and-await_meta __blog_async-and-await_p_tag"" data-reactid=""35""><!-- react-text: 36 -->&gt; Guillermo Rauch (<!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://twitter.com/rauchg"" target=""_blank"" data-reactid=""37"">@rauchg</a><!-- react-text: 38 -->). <!-- /react-text --><span data-reactid=""39""><!-- react-text: 40 -->Thursday, June 2nd 2016<!-- /react-text --><!-- react-text: 41 --> (<!-- /react-text --><!-- react-text: 42 -->20h<!-- /react-text --><!-- react-text: 43 --> ago)<!-- /react-text --></span><!-- react-text: 44 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""45""><!-- react-text: 46 -->JavaScript, in particular Node.js, has been frequently associated with <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""47"">callback hell</em><a href=""#f1"" class=""__blog_async-and-await_ref __blog_async-and-await_a_tag"" id=""r1"" data-reactid=""48"">[1]</a><!-- react-text: 49 -->. If you&#x27;ve written code that deals with a lot of async I/O, you&#x27;re probably familiar with this pattern:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""50""><code class=""__blog_async-and-await_code_tag"" data-reactid=""51"">export default function getLikes () {
  getUsers((err, users) =&gt; {
    if (err) return fn(err);
    filterUsersWithFriends((err, usersWithFriends) =&gt; {
      if (err) return fn(err);
      getUsersLikes(usersWithFriends, (err, likes) =&gt; {
        if (err) return fn (err);
        fn(null, likes);
      });
    });
  });
}
</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""52"">It turns out, this code can be much easier and safer to write.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""53""><!-- react-text: 54 -->I&#x27;ll show you how <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""55"">Promise</code><!-- react-text: 56 --> combined with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""57"">async</code><!-- react-text: 58 --> / <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""59"">await</code><!-- react-text: 60 --> enables this, but also some of the lessons we&#x27;ve learned from using these new features in production.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""61"">Let&#x27;s start with the pitfalls of the example above.</p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""62""><span id=""callback-problems"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""63""></span><!-- react-text: 64 --> <!-- /react-text --><!-- react-text: 65 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#callback-problems"" data-reactid=""66"">Callback problems</a><!-- react-text: 67 --> <!-- /react-text --><!-- react-text: 68 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""69""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""70""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""71""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""72""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""73""></path></g></g></svg></span></h2><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""74""><span id=""error-handling-is-repetitive"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""75""></span><!-- react-text: 76 --> <!-- /react-text --><!-- react-text: 77 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#error-handling-is-repetitive"" data-reactid=""78"">Error handling is repetitive</a><!-- react-text: 79 --> <!-- /react-text --><!-- react-text: 80 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""81""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""82""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""83""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""84""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""85""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""86""><!-- react-text: 87 -->In a great majority of cases, you want to just <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""88"">pass the error along</em><!-- react-text: 89 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""90""><!-- react-text: 91 -->In the example above, however, you repeat yourself many times. It&#x27;s also easy to miss a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""92"">return</code><!-- react-text: 93 --> and only discover it (with non-obvious debugging) when the error actually occurs.<!-- /react-text --></p><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""94""><span id=""error-handling-in-unspecified"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""95""></span><!-- react-text: 96 --> <!-- /react-text --><!-- react-text: 97 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#error-handling-in-unspecified"" data-reactid=""98"">Error handling in unspecified</a><!-- react-text: 99 --> <!-- /react-text --><!-- react-text: 100 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""101""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""102""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""103""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""104""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""105""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""106""><!-- react-text: 107 -->When errors occur, most popular libraries will invoke the callback with an <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""108"">Error</code><!-- react-text: 109 --> parameter, or in the success case use <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""110"">null</code><!-- react-text: 111 --> instead.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""112""><!-- react-text: 113 -->Unfortunately this is not always the case. You might get <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""114"">false</code><!-- react-text: 115 --> instead of <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""116"">null</code><!-- react-text: 117 -->. Some libraries omit it altogether. If several errors occur, you might even get multiple callbacks! Which leads us to…<!-- /react-text --></p><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""118""><span id=""scheduling-is-unspecified"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""119""></span><!-- react-text: 120 --> <!-- /react-text --><!-- react-text: 121 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#scheduling-is-unspecified"" data-reactid=""122"">Scheduling is unspecified</a><!-- react-text: 123 --> <!-- /react-text --><!-- react-text: 124 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""125""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""126""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""127""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""128""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""129""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""130""><!-- react-text: 131 -->Does the callback fire immediately? or on a different <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://jakearchibald.com/20r5/tasks-microtasks-queues-and-schedules/"" target=""_blank"" data-reactid=""132"">microtask</a><!-- react-text: 133 -->? or on a different tick? Sometimes? Always?<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""134""><!-- react-text: 135 -->Who knows! Reading your own code certainly won&#x27;t tell you. Reading the library&#x27;s documentation <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""136"">might</em><!-- react-text: 137 --> tell you, if you&#x27;re lucky.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""138""><!-- react-text: 139 -->It&#x27;s possible that the callback will fire <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""140"">more than once</strong><!-- react-text: 141 --> without you expecting it. Once again, this will almost certainly result in code that&#x27;s <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""142"">extremely hard to debug</em><!-- react-text: 143 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""144"">In certain cases, the code might continue to run but not doing quite what it should. In others, you might get a stack trace that doesn&#x27;t exactly make the root cause obvious.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""145""><!-- react-text: 146 -->The solution to these problems is the standarization on <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""147""><b class=""__blog_async-and-await_b_tag"" data-reactid=""148"">Promise</b></code><!-- react-text: 149 -->.<!-- /react-text --></p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""150""><span id=""how-promise-works"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""151""></span><!-- react-text: 152 --> <!-- /react-text --><!-- react-text: 153 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#how-promise-works"" data-reactid=""154"">How Promise works</a><!-- react-text: 155 --> <!-- /react-text --><!-- react-text: 156 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""157""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""158""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""159""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""160""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""161""></path></g></g></svg></span></h2><p class=""__blog_async-and-await_p_tag"" data-reactid=""162"">Promises present a clear contract and API to you. While we might disagree on whether the details and API of this contract are the best ones, they&#x27;re strictly defined.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""163""><!-- react-text: 164 -->Thus, the lack of specification we mentioned above is not a concern when you&#x27;re dealing with code that uses <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""165"">Promise</code><!-- react-text: 166 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""167""><!-- react-text: 168 -->This is what the equivalent to <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""169"">setTimeout</code><!-- react-text: 170 --> would look like using <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""171"">Promise</code><!-- react-text: 172 -->:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""173""><code class=""__blog_async-and-await_code_tag"" data-reactid=""174"">function sleep (time) {
  return new Promise((resolve) =&gt; setTimeout(resolve, time));
}

sleep(100)
.then(() =&gt; console.log(&#x27;100ms elapsed&#x27;))
.catch(() =&gt; console.error(&#x27;error!&#x27;));</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""175"">Promises can be in two settled states: resolved and rejected. As seen above, you can set up a pair of callbacks to obtain the resolved value and the rejected value.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""176""><!-- react-text: 177 -->The fact that we <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""178"">pass callbacks to a promise</em><!-- react-text: 179 --> shows that we often deal with somewhat of a false dichotomy. Obviously, promises need callbacks to do anything meaningful. The real comparison is then between promises and the callback <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""180"">pattern</strong><!-- react-text: 181 --> that the JavaScript community has <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""182"">informally</em><!-- react-text: 183 --> agreed upon<!-- /react-text --><a href=""#f2"" id=""r2"" class=""__blog_async-and-await_ref __blog_async-and-await_a_tag"" data-reactid=""184"">[2]</a><!-- react-text: 185 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""186""><!-- react-text: 187 -->Promises represent a <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""188"">single</em><!-- react-text: 189 --> value. Unlike the callback pattern above, you can&#x27;t get an error followed by success for the a certain invocation. Or get a value and an error later on.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""190""><!-- react-text: 191 -->You can think of <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""192"">resolve</code><!-- react-text: 193 --> as the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""194"">Promise</code><!-- react-text: 195 --> equivalent of <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""196"">return</code><!-- react-text: 197 --> and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""198"">reject</code><!-- react-text: 199 --> as <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""200"">throw</code><!-- react-text: 201 -->. As we&#x27;ll see later on, this semantic equivalency is <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""202"">syntactically realized</strong><!-- react-text: 203 --> by the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""204"">async</code><!-- react-text: 205 --> and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""206"">await</code><!-- react-text: 207 --> keywords.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""208""><!-- react-text: 209 -->As far as scheduling goes, the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""210"">Promise</code><!-- react-text: 211 --> spec has <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""212"">settled</em><!-- react-text: 213 --> on always invoking callbacks &quot;at a future time&quot; (i.e.: the next microtask). This meants the behavior of a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""214"">Promise</code><!-- react-text: 215 --> is consistently asynchronous every time you call <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""216"">then</code><!-- react-text: 217 --> or <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""218"">catch</code><!-- react-text: 219 -->, whether it&#x27;s already been <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""220"">settled</em><!-- react-text: 221 --> or not.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""222"">If we write our initial example with this API it would look as follows:</p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""223""><code class=""__blog_async-and-await_code_tag"" data-reactid=""224"">export default function getUsers () {
  return getUsers()
  .then(users =&gt; filterUsersWithFriends)
  .then(usersWithFriends =&gt; getUsersLikes);
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""225"">This already looks much better! That said, if our logic were to change, refactoring the code gets complicated very quickly.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""226""><!-- react-text: 227 -->Imagine that in the code above, a particular type of failure of <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""228"">filterUsersWithFriends</code><!-- react-text: 229 --> needs to be handled differently:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""230""><code class=""__blog_async-and-await_code_tag"" data-reactid=""231"">export default function getUsers () {
  return new Promise((resolve, reject) =&gt; {
    getUsers().then(users =&gt; {
      filterUsersWithFriends(users)
      .then(resolve)
      .catch((err) =&gt; {
        resolve(trySomethingElse(users));
      });
    }, reject)
  });
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""232"">No amount of chaining &quot;convenience&quot; can save us. Let&#x27;s look at the solution.</p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""233""><span id=""the-future:-async-and-await"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""234""></span><!-- react-text: 235 --> <!-- /react-text --><!-- react-text: 236 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#the-future:-async-and-await"" data-reactid=""237"">The future: async and await</a><!-- react-text: 238 --> <!-- /react-text --><!-- react-text: 239 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""240""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""241""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""242""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""243""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""244""></path></g></g></svg></span></h2><p class=""__blog_async-and-await_p_tag"" data-reactid=""245""><!-- react-text: 246 -->As known for a while in the C# and F# <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""http://tirania.org/blog/archive/2013/Aug-15.html"" target=""_blank"" data-reactid=""247"">world</a><!-- react-text: 248 -->, there&#x27;s an elegant solution to our problems:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""249""><code class=""__blog_async-and-await_code_tag"" data-reactid=""250"">export default async function getLikes () {
  const users = await getUsers();
  const filtered = await filterUsersWithFriends(users);
  return getUsersLikes(filtered);
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""251""><!-- react-text: 252 -->For this to work, we just need to make sure that the functions that perform I/O that we depend on (like <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""253"">getUsers</code><!-- react-text: 254 -->) return a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""255"">Promise</code><!-- react-text: 256 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""257"">Not only is it easier to read (as the chaining example was), but now the error handling behavior is the exact same as regular synchronous JavaScript code.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""258""><!-- react-text: 259 -->That is, when we <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""260"">await</code><!-- react-text: 261 --> a function, errors (if any) are surfaced and thrown. If our <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""262"">getLikes</code><!-- react-text: 263 --> function is invoked, errors bubble up by default. If you want to handle a particular error differently, just wrap your <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""264"">await</code><!-- react-text: 265 --> invocation with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""266"">try</code><!-- react-text: 267 -->/<!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""268"">catch</code><!-- react-text: 269 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""270""><!-- react-text: 271 -->This will increase your productivity and correctness as you won&#x27;t be writing (or worse, ignoring!) <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""272"">if (err) return fn(err)</code><!-- react-text: 273 --> everywhere.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""274"">How certain are we of this future?</p><ul class=""__blog_async-and-await_ul_tag"" data-reactid=""275""><li class=""__blog_async-and-await_li_tag"" data-reactid=""276""><code class=""__blog_async-and-await_code_tag"" data-reactid=""277"">Promise</code><!-- react-text: 278 --> is already in all modern <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""http://caniuse.com/#feat=promises"" target=""_blank"" data-reactid=""279"">mobile and desktop browsers</a><!-- react-text: 280 --> and Node.js 0.12+<!-- /react-text --></li><li class=""__blog_async-and-await_li_tag"" data-reactid=""281""><code class=""__blog_async-and-await_code_tag"" data-reactid=""282"">async</code><!-- react-text: 283 --> / <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""284"">await</code><!-- react-text: 285 --> has been almost completely implemented in <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://chromium.googlesource.com/v8/v8.git/+/d08c0304c5779223d6c468373af4815ec3ccdb84"" target=""_blank"" data-reactid=""286"">V8</a><!-- react-text: 287 -->, <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://www.infoq.com/news/2015/10/async-await-javascript-edge"" data-reactid=""288"">Edge</a><!-- react-text: 289 --> and <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://bugzilla.mozilla.org/show_bug.cgi?id=1185106"" data-reactid=""290"">Firefox</a><!-- react-text: 291 -->.<!-- /react-text --></li></ul><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""292""><span id=""lessons-learned"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""293""></span><!-- react-text: 294 --> <!-- /react-text --><!-- react-text: 295 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#lessons-learned"" data-reactid=""296"">Lessons learned</a><!-- react-text: 297 --> <!-- /react-text --><!-- react-text: 298 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""299""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""300""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""301""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""302""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""303""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""304""><!-- react-text: 305 -->We&#x27;ve been using these features at <!-- /react-text --><span class=""__components_zeit_zeit-logo __components_zeit_inverse __components_zeit_span_tag"" data-reactid=""306""><!-- react-text: 307 -->▲<!-- /react-text --><b class=""__components_zeit_b_tag"" data-reactid=""308"">ZEIT</b></span><!-- react-text: 309 --> for many months now and have been extremely happy and productive with them.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""310""><!-- react-text: 311 -->I recently <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://gist.github.com/rauchg/8199de60db48026a6670620a1c33b700"" target=""_blank"" data-reactid=""312"">published a guide</a><!-- react-text: 313 --> to transpiling with Babel and Node 6, which due to its great support for ES6 now only needs <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""314"">two transformation plugins</strong><!-- react-text: 315 --> and exhibits great compilation performance.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""316""><!-- react-text: 317 -->If you want support for the browser or older versions of Node, I suggest you also include the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""318"">es2015</code><!-- react-text: 319 --> preset. This will compile to a state machine instead of generators.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""320""><!-- react-text: 321 -->In order to maximize your usage of this feature, you&#x27;ll want to use modules from the ecosystem that expose <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""322"">Promise</code><!-- react-text: 323 --> instead of just a callback.<!-- /react-text --></p><ul class=""__blog_async-and-await_ul_tag"" data-reactid=""324""><li class=""__blog_async-and-await_li_tag"" data-reactid=""325""><!-- react-text: 326 -->Some modules already do both. <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""327"">node_redis</code><!-- react-text: 328 -->, for example, exposes <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""329"">Promise</code><!-- react-text: 330 --> if you suffix <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""331""><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/NodeRedis/node_redis#promises"" target=""_blank"" data-reactid=""332"">Async</a></code><!-- react-text: 333 --> to the methods it exposes.<!-- /react-text --></li><li class=""__blog_async-and-await_li_tag"" data-reactid=""334""><!-- react-text: 335 -->Some modules exist to wrap existing modules with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""336"">Promise</code><!-- react-text: 337 -->. You can usually identify these by their prefix or suffix <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""338"">then</code><!-- react-text: 339 --> or <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""340"">promise</code><!-- react-text: 341 -->. Examples: <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""342""><a class=""__blog_async-and-await_a_tag"" href=""https://www.npmjs.com/package/fs-promise"" target=""_blank"" data-reactid=""343"">fs-promise</a></code><!-- react-text: 344 -->, <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""345""><a class=""__blog_async-and-await_a_tag"" href=""https://www.npmjs.com/package/then-sleep"" target=""_blank"" data-reactid=""346"">then-sleep</a></code><!-- react-text: 347 -->.<!-- /react-text --></li></ul><p class=""__blog_async-and-await_p_tag"" data-reactid=""348""><!-- react-text: 349 -->In addition to these, Node is considering returning <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""350"">Promise</code><!-- react-text: 351 -->s directly in the standard library. You can follow that <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/nodejs/node/pull/5020"" target=""_blank"" data-reactid=""352"">discussion here</a><!-- react-text: 353 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""354""><!-- react-text: 355 -->I also need to stress that this syntax doesn&#x27;t make <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""356"">Promise</code><!-- react-text: 357 --> go away from your codebase. In fact, you must have a thorough understanding of them, which you&#x27;ll <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""358"">frequently need</strong><!-- react-text: 359 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""360""><!-- react-text: 361 -->A common example where <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""362"">Promise</code><!-- react-text: 363 --> makes an appearence is code that requires multiple values as part of a loop, which are requested concurrently:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""364""><code class=""__blog_async-and-await_code_tag"" data-reactid=""365"">const ids = [1, 2, 3];
const values = await Promise.all(ids.map((id) =&gt; {
  return db.query(&#x27;SELECT * from products WHERE id = ?&#x27;, id);
}));</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""366""><!-- react-text: 367 -->Notice also that in the example presented above (<!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""368"">async getLikes()</code><!-- react-text: 369 -->), I opted to <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""370"">return getUserLikes()</code><!-- react-text: 371 --> instead of <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""372"">return await getUserLikes()</code><!-- react-text: 373 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""374""><!-- react-text: 375 -->Since the goal of the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""376"">async</code><!-- react-text: 377 --> keyword is to make the function return a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""378"">Promise</code><!-- react-text: 379 -->, those two snippets are therefore equivalent.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""380"">This means that the following code: </p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""381""><code class=""__blog_async-and-await_code_tag"" data-reactid=""382"">async function getAnswer () {
  return 42;
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""383""><!-- react-text: 384 -->is perfectly valid and equivalent to its sync counter-part <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""385"">const getAnswer = () =&gt; 42</code><!-- react-text: 386 --> with the exception that when invoked with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""387"">await</code><!-- react-text: 388 --> it will resolve <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""389"">in the next microtask</em><!-- react-text: 390 -->. When called without <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""391"">await</code><!-- react-text: 392 -->, it will return a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""393"">Promise</code><!-- react-text: 394 -->.<!-- /react-text --></p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""395""><span id=""the-boulevard-of-broken-promises"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""396""></span><!-- react-text: 397 --> <!-- /react-text --><!-- react-text: 398 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#the-boulevard-of-broken-promises"" data-reactid=""399"">The boulevard of broken Promises</a><!-- react-text: 400 --> <!-- /react-text --><!-- react-text: 401 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""402""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""403""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""404""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""405""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""406""></path></g></g></svg></span></h2><p class=""__blog_async-and-await_p_tag"" data-reactid=""407""><!-- react-text: 408 -->Earlier I mentioned the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""409"">Promise</code><!-- react-text: 410 --> spec set out to solve a host of problems we would frequently run into with callbacks.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""411"">I&#x27;ll cover some of the problems that have remained or have been now introduced, and some behaviors that were left unspecified but are critical for our needs.</p><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""412""><span id=""debugging-difficulties"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""413""></span><!-- react-text: 414 --> <!-- /react-text --><!-- react-text: 415 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#debugging-difficulties"" data-reactid=""416"">Debugging difficulties</a><!-- react-text: 417 --> <!-- /react-text --><!-- react-text: 418 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""419""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""420""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""421""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""422""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""423""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""424""><!-- react-text: 425 -->When you use a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""426"">Promise</code><!-- react-text: 427 --> and don&#x27;t attach an error handler, in many environments you might never find out about the error.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""428""><!-- react-text: 429 -->This is the equivalent to ignoring the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""430"">err</code><!-- react-text: 431 --> parameter in the callback pattern, with the difference that a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""432"">TypeError</code><!-- react-text: 433 --> <!-- /react-text --><!-- react-text: 434 -->is likely to occur when you try to access the value you&#x27;re interested in.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""435""><!-- react-text: 436 -->In the callback pattern, while you can manage to <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""437""><!-- react-text: 438 -->ignore <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""439"">err</code></em><!-- react-text: 440 -->, you&#x27;re likely to find out with a crash later on when the error does occur.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""441""><!-- react-text: 442 -->Ignoring errors is normally quite difficult to do with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""443"">async</code><!-- react-text: 444 --> and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""445"">await</code><!-- react-text: 446 -->, however. The exception would be the <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""447"">entry point</em><!-- react-text: 448 --> of your asynchronous code:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""449""><code class=""__blog_async-and-await_code_tag"" data-reactid=""450"">async function run () {
  // your app code…
}

run().catch((err) =&gt; {
  // make sure to handle the error!
});</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""451"">Fortunately, there are workarounds and a potential definitive solution to this problem:</p><ul class=""__blog_async-and-await_ul_tag"" data-reactid=""452""><li class=""__blog_async-and-await_li_tag"" data-reactid=""453"">Chrome and Firefox warn about unhandled rejections in the developer tools.</li><li class=""__blog_async-and-await_li_tag"" data-reactid=""454""><!-- react-text: 455 -->Node.js emits <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""456""><a class=""__blog_async-and-await_a_tag"" href=""https://nodejs.org/api/process.html#process_event_unhandledrejection"" target=""_blank"" data-reactid=""457"">unhandledRejection</a></code><!-- react-text: 458 -->, with which you can log manually. I recommend you read this <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/nodejs/node/issues/830"" target=""_blank"" data-reactid=""459"">discussion</a><!-- react-text: 460 --> about the implications of unhandled rejections for backend systems.<!-- /react-text --></li><li class=""__blog_async-and-await_li_tag"" data-reactid=""461""><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/tc39/ecmascript-asyncawait/issues/9"" target=""_blank"" data-reactid=""462"">Top-level</a><!-- react-text: 463 --> support for <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""464"">await</code><!-- react-text: 465 --> in the future would make the manual<!-- /react-text --><!-- react-text: 466 --> <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""467"">Promise</code><!-- react-text: 468 --> instantiation and catching unnecessary!<!-- /react-text --></li></ul><p class=""__blog_async-and-await_p_tag"" data-reactid=""469""><!-- react-text: 470 -->Finally, I mentioned earlier that <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""471"">Promise</code><!-- react-text: 472 -->s will be resolved once, unlike callbacks that could fire multiple times unexpectedly.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""473""><!-- react-text: 474 -->The problem is that once again, <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""475"">Promise</code><!-- react-text: 476 -->s will swallow subsequent resolutions and more concerningly, rejections. There might be errors that are never logged!<!-- /react-text --></p><h3 class=""__components_heading_h3 __components_heading_Heading_tag __blog_async-and-await_h3_tag"" data-reactid=""477""><span id=""cancellation"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""478""></span><!-- react-text: 479 --> <!-- /react-text --><!-- react-text: 480 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#cancellation"" data-reactid=""481"">Cancellation</a><!-- react-text: 482 --> <!-- /react-text --><!-- react-text: 483 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""484""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""485""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""486""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""487""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""488""></path></g></g></svg></span></h3><p class=""__blog_async-and-await_p_tag"" data-reactid=""489""><!-- react-text: 490 -->The original <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""491"">Promise</code><!-- react-text: 492 --> spec left out the semantics of<!-- /react-text --><!-- react-text: 493 --> <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""494"">cancelling</em><!-- react-text: 495 --> the ongoing asynchronous retrieval of a value.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""496"">As fate would have it, browser vendors went on to implement them as the return value of functions that have historically needed cancelation, like HTTP requests.</p><p class=""__blog_async-and-await_p_tag"" data-reactid=""497""><!-- react-text: 498 -->Namely, with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""499"">XMLHttpRequest</code><!-- react-text: 500 --> you can call <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""501"">abort</code><!-- react-text: 502 --> <!-- /react-text --><!-- react-text: 503 -->on the resulting object, but with the new and shiny <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""504"">fetch</code><!-- react-text: 505 -->… you can&#x27;t.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""506""><!-- react-text: 507 -->TC39 is now considering the addition of a third state: cancelled. You can read more about the <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://docs.google.com/presentation/d/1V4vmC54gJkwAss1nfEt9ywc-QOVOfleRxD5qtpMpc8U/edit?usp=sharing"" target=""_blank"" data-reactid=""508"">stage 1 proposal here</a><!-- react-text: 509 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""510""><!-- react-text: 511 -->While retro-fitted to <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""512"">Promise</code><!-- react-text: 513 -->s, cancellation is a fundamental property of the next abstraction we&#x27;ll cover: the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""514"">Observable</code><!-- react-text: 515 -->.<!-- /react-text --></p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""516""><span id=""observables"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""517""></span><!-- react-text: 518 --> <!-- /react-text --><!-- react-text: 519 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#observables"" data-reactid=""520"">Observables</a><!-- react-text: 521 --> <!-- /react-text --><!-- react-text: 522 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""523""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""524""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""525""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""526""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""527""></path></g></g></svg></span></h2><p class=""__blog_async-and-await_p_tag"" data-reactid=""528""><!-- react-text: 529 -->Earlier in the post it became evident that waiting on a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""530"">Promise</code><!-- react-text: 531 --> <!-- /react-text --><!-- react-text: 532 -->to resolve is somewhat equivalent to a function doing some work and returning a value synchronously.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""533""><!-- react-text: 534 -->The <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""535"">Observable</code><!-- react-text: 536 --> is a more general (and therefore more powerful) abstraction that represents a function invokation that can return several values.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""537""><!-- react-text: 538 -->Unlike <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""539"">Promise</code><!-- react-text: 540 -->, <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""541"">Observable</code><!-- react-text: 542 --> objects can return synchronously (same tick) or asynchronously.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""543""><!-- react-text: 544 -->These design decisions make an <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""545"">Observable</code><!-- react-text: 546 --> suitable for a wider range of usecases.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""547""><!-- react-text: 548 -->In the spirit of our earlier examples, here&#x27;s how <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""549"">Observable</code><!-- react-text: 550 --> <!-- /react-text --><!-- react-text: 551 -->can work with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""552"">setInterval</code><!-- react-text: 553 --> to give us a value over time:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""554""><code class=""__blog_async-and-await_code_tag"" data-reactid=""555"">function timer (ms) {
  return new Observable(obv =&gt; {
    let i = 0;
    const iv = setInterval(() =&gt; {
      obv.next(i++);
    }, ms);
    return () =&gt; clearInterval(iv);
  });
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""556""><!-- react-text: 557 -->As I mentioned earlier, <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""558"">Observable</code><!-- react-text: 559 --> covers a broader spectrum of possibility. From this lense, a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""560"">Promise</code><!-- react-text: 561 --> is simply an<!-- /react-text --><!-- react-text: 562 --> <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""563"">Observable</code><!-- react-text: 564 --> that returns a single value and completes:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""565""><code class=""__blog_async-and-await_code_tag"" data-reactid=""566"">function delay(ms) {
  return new Observable(obv =&gt; {
    const t = setTimeout(() =&gt; {
      obv.next();
      obv.complete();
    }, ms);
    return () =&gt; clearTimeout(t);
  });
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""567""><!-- react-text: 568 -->Notice that the value returned in the setup of the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""569"">Observable</code><!-- react-text: 570 --> <!-- /react-text --><!-- react-text: 571 -->is a function that performs cleanup. Such a function is executed when no subscriptions are left:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""572""><code class=""__blog_async-and-await_code_tag"" data-reactid=""573"">const subscription = delay(100).subscribe();
subscription.unsubscribe(); // cleanup happens</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""574""><!-- react-text: 575 -->This means that <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""576"">Observable</code><!-- react-text: 577 --> also fills another missing gap in <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""578"">Promise</code><!-- react-text: 579 -->: cancelation. In this model, cancelation is simply a consequence of the <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""580"">cease of observation</em><!-- react-text: 581 -->.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""582""><!-- react-text: 583 -->With this said, a lot of asynchronous work can be expressed with only the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""584"">Promise</code><!-- react-text: 585 --> subset just fine. As a matter of fact, a great portion of the core library of Node.js only needs that (the exceptions being <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""586"">Stream</code><!-- react-text: 587 --> and some <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""588"">EventEmitter</code><!-- react-text: 589 -->).<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""590""><!-- react-text: 591 -->What about <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""592"">async</code><!-- react-text: 593 --> and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""594"">await</code><!-- react-text: 595 -->? One could implement an operator that restricts the behavior of a given<!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""596"">Observable</code><!-- react-text: 597 --> to that of a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""598"">Promise</code><!-- react-text: 599 --> <!-- /react-text --><!-- react-text: 600 -->(which libraries like RxJS <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/topromise.md"" target=""_blank"" data-reactid=""601"">already have</a><!-- react-text: 602 -->) and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""603"">await</code><!-- react-text: 604 --> it:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""605""><code class=""__blog_async-and-await_code_tag"" data-reactid=""606"">await toPromise(timer(1000));</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""607""><!-- react-text: 608 -->This example shows us the generalization in action: the <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""609"">timer</code><!-- react-text: 610 --> <!-- /react-text --><!-- react-text: 611 -->function is just as useful as <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""612"">delay</code><!-- react-text: 613 -->, but <!-- /react-text --><em class=""__blog_async-and-await_em_tag"" data-reactid=""614"">also</em><!-- react-text: 615 --> <!-- /react-text --><!-- react-text: 616 -->works for intervals!<!-- /react-text --></p><h2 class=""__components_heading_h2 __components_heading_Heading_tag __blog_async-and-await_h2_tag"" data-reactid=""617""><span id=""future-directions"" class=""__components_heading_target __components_heading_span_tag"" data-reactid=""618""></span><!-- react-text: 619 --> <!-- /react-text --><!-- react-text: 620 -->  <!-- /react-text --><a class=""__components_heading_a_tag"" href=""#future-directions"" data-reactid=""621"">Future directions</a><!-- react-text: 622 --> <!-- /react-text --><!-- react-text: 623 -->  <!-- /react-text --><span class=""__components_heading_permalink __components_heading_span_tag"" data-reactid=""624""><svg width=""11px"" height=""11px"" viewBox=""0 0 11 11"" version=""1.1"" data-reactid=""625""><g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"" data-reactid=""626""><g transform=""translate(-432.000000, -181.000000)"" fill=""#9B9B9B"" data-reactid=""627""><path d=""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z"" data-reactid=""628""></path></g></g></svg></span></h2><p class=""__blog_async-and-await_p_tag"" data-reactid=""629""><code class=""__blog_async-and-await_code_tag"" data-reactid=""630"">async</code><!-- react-text: 631 --> and <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""632"">await</code><!-- react-text: 633 --> will enable significant improvements in your codebases.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""634""><!-- react-text: 635 -->Our open-source library <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/zeit/micro"" target=""_blank"" data-reactid=""636"">micro</a><!-- react-text: 637 --> <!-- /react-text --><!-- react-text: 638 -->is a great example of how the request / response cycle can be made a lot more straightforward.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""639""><!-- react-text: 640 -->The following microservice responds with a <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""641"">JSON</code><!-- react-text: 642 --> encoded array of users a database.<!-- /react-text --><br class=""__blog_async-and-await_br_tag"" data-reactid=""643""/><!-- react-text: 644 --> <!-- /react-text --><!-- react-text: 645 -->If any of the handlers throw, the response is aborted with <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""646"">err.statusCode</code><!-- react-text: 647 -->. <!-- /react-text --><br class=""__blog_async-and-await_br_tag"" data-reactid=""648""/><!-- react-text: 649 --> <!-- /react-text --><!-- react-text: 650 -->If unhandled exceptions occur, a <!-- /react-text --><strong class=""__blog_async-and-await_strong_tag"" data-reactid=""651"">500</strong><!-- react-text: 652 --> response is produced and the error logged.<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""653""><code class=""__blog_async-and-await_code_tag"" data-reactid=""654"">export default async function (req, res) {
  await rateLimit(req);
  const uid = await authenticate(req);
  return getUsers(uid);
}</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""655""><!-- react-text: 656 -->As mentioned, proposals have been made for ES6 modules to admit a top-level <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""657"">await</code><!-- react-text: 658 -->. For Node.js this would mean being able to write code like this:<!-- /react-text --></p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""659""><code class=""__blog_async-and-await_code_tag"" data-reactid=""660"">import request from &#x27;request&#x27;;
const file = await fs.readFile(&#x27;some-file&#x27;);
const res = await request.post(&#x27;/some-api&#x27;, { body: { file } });
console.log(res.data);</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""661"">and then run it without any wrappers (and straight-forward error handling)!</p><pre class=""__blog_async-and-await_pre_tag"" data-reactid=""662""><code class=""__blog_async-and-await_code_tag"" data-reactid=""663"">▲ node my-script.mjs</code></pre><p class=""__blog_async-and-await_p_tag"" data-reactid=""664""><!-- react-text: 665 -->Simultaneously, <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""666"">Observable</code><!-- react-text: 667 --> continues to <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://github.com/zenparsing/es-observable"" target=""_blank"" data-reactid=""668"">make progress</a><!-- react-text: 669 --> within TC39 to become a first-class construct of the language.<!-- /react-text --></p><p class=""__blog_async-and-await_p_tag"" data-reactid=""670""><!-- react-text: 671 -->I believe these new primitives for managing concurrency and asynchrony will have a very profound impact on the JavaScript ecosystem. <!-- /react-text --><b class=""__blog_async-and-await_b_tag"" data-reactid=""672"">It&#x27;s about time</b><!-- react-text: 673 -->.<!-- /react-text --></p><ol class=""__blog_async-and-await_footnotes __blog_async-and-await_ol_tag"" data-reactid=""674""><li class=""__blog_async-and-await_li_tag"" id=""f1"" data-reactid=""675""><a class=""__blog_async-and-await_a_tag"" href=""#r1"" data-reactid=""676"">^</a><!-- react-text: 677 --> A litmus test for callback hell: does a Ryu performing Hadouken <!-- /react-text --><a class=""__blog_async-and-await_a_tag"" href=""https://twitter.com/dr4goonis/status/476617165463105536"" target=""_blank"" data-reactid=""678"">fit in your indentation?</a></li><li class=""__blog_async-and-await_li_tag"" id=""f2"" data-reactid=""679""><a class=""__blog_async-and-await_a_tag"" href=""#r2"" data-reactid=""680"">^</a><!-- react-text: 681 --> The pattern can be summarized as follows: the callback is invoked once, on a different tick, with an <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""682"">Error</code><!-- react-text: 683 --> object as the first parameter in the case of an error, or <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""684"">null</code><!-- react-text: 685 --> and the intended value as the second. However, deviations from this implicit agreement are commonly encountered in the ecosystem. Some libraries omit the error object and emit an <!-- /react-text --><code class=""__blog_async-and-await_code_tag"" data-reactid=""686"">error</code><!-- react-text: 687 --> event somewhere else. Some callbacks fire with multiple values. Et cetera.<!-- /react-text --></li></ol></div><footer class=""__components_footer_footer_tag"" data-reactid=""688""><div class=""__components_footer_left __components_footer_div_tag"" data-reactid=""689""><span class=""__components_footer_copyright __components_footer_span_tag"" data-reactid=""690""><span class=""__components_footer_text __components_footer_span_tag"" data-reactid=""691"">Copyright</span><!-- react-text: 692 --> © 2016 Zeit, Inc. All rights reserved.<!-- /react-text --></span></div><div class=""__components_footer_right __components_footer_div_tag"" data-reactid=""693""><nav class=""__components_navigation_inverse __components_navigation_nav_tag"" data-reactid=""694""><ul class=""__components_navigation_navigation __components_navigation_ul_tag"" data-reactid=""695""><li class=""__components_navigation_li_tag"" data-reactid=""696""><a class=""__components_navigation_bird __components_navigation_a_tag"" href=""https://twitter.com/zeithq"" target=""_blank"" data-reactid=""697""><svg class=""__components_twitter-bird_svg_tag"" width=""11"" height=""9"" viewBox=""0 0 11 9"" data-reactid=""698""><path class=""__components_twitter-bird_path_tag"" d=""M11 1.029L9.969 2.058v.171c0 .188-.03.368-.075.542-.024 1.415-.475 3.292-2.332 4.773C3.913 10.458 0 7.887 0 7.887c3.094 0 3.094-1.029 3.094-1.029-.688 0-2.063-1.371-2.063-1.371.344.342 1.032 0 1.032 0C.343 4.458.343 3.429.343 3.429c.344.343 1.032 0 1.032 0C-.344 2.058.687.343.687.343c.344 1.715 4.813 2.4 4.813 2.4l.057-.028a4.056 4.056 0 0 1-.057-.657C5.5.827 6.5 0 7.734 0c.68 0 1.28.309 1.69.786l.201-.1L10.656 0 9.97 1.372 11 1.029z"" fill=""#5E5E5E"" fill-rule=""evenodd"" data-reactid=""699""></path></svg></a></li><li class=""__components_navigation_privacy __components_navigation_li_tag"" data-reactid=""700""><a class=""__components_navigation_a_tag"" href=""/privacy"" data-reactid=""701""><!-- react-text: 702 -->Privacy<!-- /react-text --><span class=""__components_navigation_long __components_navigation_span_tag"" data-reactid=""703""> Policy</span></a></li><li class=""__components_navigation_terms __components_navigation_li_tag"" data-reactid=""704""><a class=""__components_navigation_a_tag"" href=""/terms"" data-reactid=""705""><!-- react-text: 706 -->Terms<!-- /react-text --><span class=""__components_navigation_long __components_navigation_span_tag"" data-reactid=""707""> of Service</span></a></li><li class=""__components_navigation_li_tag"" data-reactid=""708""><a class=""__components_navigation_a_tag"" href=""mailto:team@zeit.co"" data-reactid=""709"">team@zeit.co</a></li></ul></nav></div></footer></div></div><script>__NEXT_DATA__ = {""props"":{},""hash"":null,""base"":"""",""app"":""module.exports=function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\""\"",e(0)}([function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}Object.defineProperty(e,\""__esModule\"",{value:!0});var o=n(1),u=r(o),i=n(39),f=r(i),c=n(41),a=r(c),s=n(46),l=r(s),p=n(47),d=r(p),v=n(51),y=r(v),h=n(86),m=r(h),b=n(90),g=r(b),x=n(98),_=r(x),O=n(99),w=n(102),S=r(w),j=function(t){function e(t){(0,l[\""default\""])(this,e);var n=(0,y[\""default\""])(this,(0,a[\""default\""])(e).call(this,t));return n.state=n.state||{},n.state.user=n.state.props.user,n.onUser=n.onUser.bind(n),n.onStorage=n.onStorage.bind(n),n}return(0,g[\""default\""])(e,t),(0,d[\""default\""])(e,[{key:\""componentWillUpdate\"",value:function(t,n){if((0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentWillUpdate\"",this)\u0026\u0026(0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentWillUpdate\"",this).call(this,t,n),this.shouldUpdateSharedState(n)){var r=this.getSharedState(n);localStorage.setItem(\""sharedState\"",(0,f[\""default\""])(r))}}},{key:\""componentDidMount\"",value:function(){(0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentDidMount\"",this)\u0026\u0026(0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentDidMount\"",this).call(this),window.addEventListener(\""storage\"",this.onStorage),(0,O.saveTZOffset)()}},{key:\""componentWillUnmount\"",value:function(){(0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentWillUnmount\"",this)\u0026\u0026(0,m[\""default\""])((0,a[\""default\""])(e.prototype),\""componentWillUnmount\"",this).call(this),window.removeEventListener(\""storage\"",this.onStorage)}},{key:\""onUser\"",value:function(t){this.setState({user:t})}},{key:\""onStorage\"",value:function(t){if(\""sharedState\""===t.key){var e=JSON.parse(t.newValue);this.setState(e)}}},{key:\""shouldUpdateSharedState\"",value:function(t){return this.state.user!==t.user}},{key:\""getSharedState\"",value:function(t){var e=t.user;return{user:e}}},{key:\""render\"",value:function(){try{var t=this.state,e=t.Component,n=t.props,r=t.user;return _[\""default\""].createElement(e,(0,u[\""default\""])({},this._spreadAttrs(n),{user:r,onUser:this.onUser}))}catch(o){if(\""undefined\""==typeof window)throw o;return this.renderError=o,null}}}]),e}(S[\""default\""]);j.displayName=\""_app\"",e[\""default\""]=j},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(2),u=r(o);e[\""default\""]=u[\""default\""]||function(t){for(var e=1;e\u003carguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)\u0026\u0026(t[r]=n[r])}return t}},function(t,e,n){t.exports={\""default\"":n(3),__esModule:!0}},function(t,e,n){n(4),t.exports=n(7).Object.assign},function(t,e,n){var r=n(5);r(r.S+r.F,\""Object\"",{assign:n(20)})},function(t,e,n){var r=n(6),o=n(7),u=n(8),i=n(10),f=\""prototype\"",c=function(t,e,n){var a,s,l,p=t\u0026c.F,d=t\u0026c.G,v=t\u0026c.S,y=t\u0026c.P,h=t\u0026c.B,m=t\u0026c.W,b=d?o:o[e]||(o[e]={}),g=b[f],x=d?r:v?r[e]:(r[e]||{})[f];d\u0026\u0026(n=e);for(a in n)s=!p\u0026\u0026x\u0026\u0026void 0!==x[a],s\u0026\u0026a in b||(l=s?x[a]:n[a],b[a]=d\u0026\u0026\""function\""!=typeof x[a]?n[a]:h\u0026\u0026s?u(l,r):m\u0026\u0026x[a]==l?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e[f]=t[f],e}(l):y\u0026\u0026\""function\""==typeof l?u(Function.call,l):l,y\u0026\u0026((b.virtual||(b.virtual={}))[a]=l,t\u0026c.R\u0026\u0026g\u0026\u0026!g[a]\u0026\u0026i(g,a,l)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,t.exports=c},function(t,e){var n=t.exports=\""undefined\""!=typeof window\u0026\u0026window.Math==Math?window:\""undefined\""!=typeof self\u0026\u0026self.Math==Math?self:Function(\""return this\"")();\""number\""==typeof __g\u0026\u0026(__g=n)},function(t,e){var n=t.exports={version:\""2.4.0\""};\""number\""==typeof __e\u0026\u0026(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if(\""function\""!=typeof t)throw TypeError(t+\"" is not a function!\"");return t}},function(t,e,n){var r=n(11),o=n(19);t.exports=n(15)?function(t,e,n){return r.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(12),o=n(14),u=n(18),i=Object.defineProperty;e.f=n(15)?Object.defineProperty:function(t,e,n){if(r(t),e=u(e,!0),r(n),o)try{return i(t,e,n)}catch(f){}if(\""get\""in n||\""set\""in n)throw TypeError(\""Accessors not supported!\"");return\""value\""in n\u0026\u0026(t[e]=n.value),t}},function(t,e,n){var r=n(13);t.exports=function(t){if(!r(t))throw TypeError(t+\"" is not an object!\"");return t}},function(t,e){t.exports=function(t){return\""object\""==typeof t?null!==t:\""function\""==typeof t}},function(t,e,n){t.exports=!n(15)\u0026\u0026!n(16)(function(){return 7!=Object.defineProperty(n(17)(\""div\""),\""a\"",{get:function(){return 7}}).a})},function(t,e,n){t.exports=!n(16)(function(){return 7!=Object.defineProperty({},\""a\"",{get:function(){return 7}}).a})},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e,n){var r=n(13),o=n(6).document,u=r(o)\u0026\u0026r(o.createElement);t.exports=function(t){return u?o.createElement(t):{}}},function(t,e,n){var r=n(13);t.exports=function(t,e){if(!r(t))return t;var n,o;if(e\u0026\u0026\""function\""==typeof(n=t.toString)\u0026\u0026!r(o=n.call(t)))return o;if(\""function\""==typeof(n=t.valueOf)\u0026\u0026!r(o=n.call(t)))return o;if(!e\u0026\u0026\""function\""==typeof(n=t.toString)\u0026\u0026!r(o=n.call(t)))return o;throw TypeError(\""Can't convert object to primitive value\"")}},function(t,e){t.exports=function(t,e){return{enumerable:!(1\u0026t),configurable:!(2\u0026t),writable:!(4\u0026t),value:e}}},function(t,e,n){\""use strict\"";var r=n(21),o=n(36),u=n(37),i=n(38),f=n(25),c=Object.assign;t.exports=!c||n(16)(function(){var t={},e={},n=Symbol(),r=\""abcdefghijklmnopqrst\"";return t[n]=7,r.split(\""\"").forEach(function(t){e[t]=t}),7!=c({},t)[n]||Object.keys(c({},e)).join(\""\"")!=r})?function(t,e){for(var n=i(t),c=arguments.length,a=1,s=o.f,l=u.f;c\u003ea;)for(var p,d=f(arguments[a++]),v=s?r(d).concat(s(d)):r(d),y=v.length,h=0;y\u003eh;)l.call(d,p=v[h++])\u0026\u0026(n[p]=d[p]);return n}:c},function(t,e,n){var r=n(22),o=n(35);t.exports=Object.keys||function(t){return r(t,o)}},function(t,e,n){var r=n(23),o=n(24),u=n(28)(!1),i=n(32)(\""IE_PROTO\"");t.exports=function(t,e){var n,f=o(t),c=0,a=[];for(n in f)n!=i\u0026\u0026r(f,n)\u0026\u0026a.push(n);for(;e.length\u003ec;)r(f,n=e[c++])\u0026\u0026(~u(a,n)||a.push(n));return a}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var r=n(25),o=n(27);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(26);t.exports=Object(\""z\"").propertyIsEnumerable(0)?Object:function(t){return\""String\""==r(t)?t.split(\""\""):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\""Can't call method on  \""+t);return t}},function(t,e,n){var r=n(24),o=n(29),u=n(31);t.exports=function(t){return function(e,n,i){var f,c=r(e),a=o(c.length),s=u(i,a);if(t\u0026\u0026n!=n){for(;a\u003es;)if(f=c[s++],f!=f)return!0}else for(;a\u003es;s++)if((t||s in c)\u0026\u0026c[s]===n)return t||s||0;return!t\u0026\u0026-1}}},function(t,e,n){var r=n(30),o=Math.min;t.exports=function(t){return t\u003e0?o(r(t),9007199254740991):0}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t\u003e0?r:n)(t)}},function(t,e,n){var r=n(30),o=Math.max,u=Math.min;t.exports=function(t,e){return t=r(t),0\u003et?o(t+e,0):u(t,e)}},function(t,e,n){var r=n(33)(\""keys\""),o=n(34);t.exports=function(t){return r[t]||(r[t]=o(t))}},function(t,e,n){var r=n(6),o=\""__core-js_shared__\"",u=r[o]||(r[o]={});t.exports=function(t){return u[t]||(u[t]={})}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return\""Symbol(\"".concat(void 0===t?\""\"":t,\"")_\"",(++n+r).toString(36))}},function(t,e){t.exports=\""constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\"".split(\"",\"")},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,n){var r=n(27);t.exports=function(t){return Object(r(t))}},function(t,e,n){t.exports={\""default\"":n(40),__esModule:!0}},function(t,e,n){var r=n(7),o=r.JSON||(r.JSON={stringify:JSON.stringify});t.exports=function(t){return o.stringify.apply(o,arguments)}},function(t,e,n){t.exports={\""default\"":n(42),__esModule:!0}},function(t,e,n){n(43),t.exports=n(7).Object.getPrototypeOf},function(t,e,n){var r=n(38),o=n(44);n(45)(\""getPrototypeOf\"",function(){return function(t){return o(r(t))}})},function(t,e,n){var r=n(23),o=n(38),u=n(32)(\""IE_PROTO\""),i=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=o(t),r(t,u)?t[u]:\""function\""==typeof t.constructor\u0026\u0026t instanceof t.constructor?t.constructor.prototype:t instanceof Object?i:null}},function(t,e,n){var r=n(5),o=n(7),u=n(16);t.exports=function(t,e){var n=(o.Object||{})[t]||Object[t],i={};i[t]=e(n),r(r.S+r.F*u(function(){n(1)}),\""Object\"",i)}},function(t,e){\""use strict\"";e.__esModule=!0,e[\""default\""]=function(t,e){if(!(t instanceof e))throw new TypeError(\""Cannot call a class as a function\"")}},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(48),u=r(o);e[\""default\""]=function(){function t(t,e){for(var n=0;n\u003ce.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\""value\""in r\u0026\u0026(r.writable=!0),(0,u[\""default\""])(t,r.key,r)}}return function(e,n,r){return n\u0026\u0026t(e.prototype,n),r\u0026\u0026t(e,r),e}}()},function(t,e,n){t.exports={\""default\"":n(49),__esModule:!0}},function(t,e,n){n(50);var r=n(7).Object;t.exports=function(t,e,n){return r.defineProperty(t,e,n)}},function(t,e,n){var r=n(5);r(r.S+r.F*!n(15),\""Object\"",{defineProperty:n(11).f})},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(52),u=r(o);e[\""default\""]=function(t,e){if(!t)throw new ReferenceError(\""this hasn't been initialised - super() hasn't been called\"");return!e||\""object\""!==(\""undefined\""==typeof e?\""undefined\"":(0,u[\""default\""])(e))\u0026\u0026\""function\""!=typeof e?t:e}},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(53),u=r(o),i=n(72),f=r(i),c=\""function\""==typeof f[\""default\""]\u0026\u0026\""symbol\""==typeof u[\""default\""]?function(t){return typeof t}:function(t){return t\u0026\u0026\""function\""==typeof f[\""default\""]\u0026\u0026t.constructor===f[\""default\""]?\""symbol\"":typeof t};e[\""default\""]=\""function\""==typeof f[\""default\""]\u0026\u0026\""symbol\""===c(u[\""default\""])?function(t){return\""undefined\""==typeof t?\""undefined\"":c(t)}:function(t){return t\u0026\u0026\""function\""==typeof f[\""default\""]\u0026\u0026t.constructor===f[\""default\""]?\""symbol\"":\""undefined\""==typeof t?\""undefined\"":c(t)}},function(t,e,n){t.exports={\""default\"":n(54),__esModule:!0}},function(t,e,n){n(55),n(67),t.exports=n(71).f(\""iterator\"")},function(t,e,n){\""use strict\"";var r=n(56)(!0);n(57)(String,\""String\"",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,n=this._i;return n\u003e=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})})},function(t,e,n){var r=n(30),o=n(27);t.exports=function(t){return function(e,n){var u,i,f=String(o(e)),c=r(n),a=f.length;return 0\u003ec||c\u003e=a?t?\""\"":void 0:(u=f.charCodeAt(c),55296\u003eu||u\u003e56319||c+1===a||(i=f.charCodeAt(c+1))\u003c56320||i\u003e57343?t?f.charAt(c):u:t?f.slice(c,c+2):(u-55296\u003c\u003c10)+(i-56320)+65536)}}},function(t,e,n){\""use strict\"";var r=n(58),o=n(5),u=n(59),i=n(10),f=n(23),c=n(60),a=n(61),s=n(65),l=n(44),p=n(66)(\""iterator\""),d=!([].keys\u0026\u0026\""next\""in[].keys()),v=\""@@iterator\"",y=\""keys\"",h=\""values\"",m=function(){return this};t.exports=function(t,e,n,b,g,x,_){a(n,e,b);var O,w,S,j=function(t){if(!d\u0026\u0026t in k)return k[t];switch(t){case y:return function(){return new n(this,t)};case h:return function(){return new n(this,t)}}return function(){return new n(this,t)}},E=e+\"" Iterator\"",M=g==h,P=!1,k=t.prototype,T=k[p]||k[v]||g\u0026\u0026k[g],C=T||j(g),N=g?M?j(\""entries\""):C:void 0,U=\""Array\""==e?k.entries||T:T;if(U\u0026\u0026(S=l(U.call(new t)),S!==Object.prototype\u0026\u0026(s(S,E,!0),r||f(S,p)||i(S,p,m))),M\u0026\u0026T\u0026\u0026T.name!==h\u0026\u0026(P=!0,C=function(){return T.call(this)}),r\u0026\u0026!_||!d\u0026\u0026!P\u0026\u0026k[p]||i(k,p,C),c[e]=C,c[E]=m,g)if(O={values:M?C:j(h),keys:x?C:j(y),entries:N},_)for(w in O)w in k||u(k,w,O[w]);else o(o.P+o.F*(d||P),e,O);return O}},function(t,e){t.exports=!0},function(t,e,n){t.exports=n(10)},function(t,e){t.exports={}},function(t,e,n){\""use strict\"";var r=n(62),o=n(19),u=n(65),i={};n(10)(i,n(66)(\""iterator\""),function(){return this}),t.exports=function(t,e,n){t.prototype=r(i,{next:o(1,n)}),u(t,e+\"" Iterator\"")}},function(t,e,n){var r=n(12),o=n(63),u=n(35),i=n(32)(\""IE_PROTO\""),f=function(){},c=\""prototype\"",a=function(){var t,e=n(17)(\""iframe\""),r=u.length,o=\""\u003e\"";for(e.style.display=\""none\"",n(64).appendChild(e),e.src=\""javascript:\"",t=e.contentWindow.document,t.open(),t.write(\""\u003cscript\u003edocument.F=Object\u003c/script\""+o),t.close(),a=t.F;r--;)delete a[c][u[r]];return a()};t.exports=Object.create||function(t,e){var n;return null!==t?(f[c]=r(t),n=new f,f[c]=null,n[i]=t):n=a(),void 0===e?n:o(n,e)}},function(t,e,n){var r=n(11),o=n(12),u=n(21);t.exports=n(15)?Object.defineProperties:function(t,e){o(t);for(var n,i=u(e),f=i.length,c=0;f\u003ec;)r.f(t,n=i[c++],e[n]);return t}},function(t,e,n){t.exports=n(6).document\u0026\u0026document.documentElement},function(t,e,n){var r=n(11).f,o=n(23),u=n(66)(\""toStringTag\"");t.exports=function(t,e,n){t\u0026\u0026!o(t=n?t:t.prototype,u)\u0026\u0026r(t,u,{configurable:!0,value:e})}},function(t,e,n){var r=n(33)(\""wks\""),o=n(34),u=n(6).Symbol,i=\""function\""==typeof u,f=t.exports=function(t){return r[t]||(r[t]=i\u0026\u0026u[t]||(i?u:o)(\""Symbol.\""+t))};f.store=r},function(t,e,n){n(68);for(var r=n(6),o=n(10),u=n(60),i=n(66)(\""toStringTag\""),f=[\""NodeList\"",\""DOMTokenList\"",\""MediaList\"",\""StyleSheetList\"",\""CSSRuleList\""],c=0;5\u003ec;c++){var a=f[c],s=r[a],l=s\u0026\u0026s.prototype;l\u0026\u0026!l[i]\u0026\u0026o(l,i,a),u[a]=u.Array}},function(t,e,n){\""use strict\"";var r=n(69),o=n(70),u=n(60),i=n(24);t.exports=n(57)(Array,\""Array\"",function(t,e){this._t=i(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,n=this._i++;return!t||n\u003e=t.length?(this._t=void 0,o(1)):\""keys\""==e?o(0,n):\""values\""==e?o(0,t[n]):o(0,[n,t[n]])},\""values\""),u.Arguments=u.Array,r(\""keys\""),r(\""values\""),r(\""entries\"")},function(t,e){t.exports=function(){}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,n){e.f=n(66)},function(t,e,n){t.exports={\""default\"":n(73),__esModule:!0}},function(t,e,n){n(74),n(83),n(84),n(85),t.exports=n(7).Symbol},function(t,e,n){\""use strict\"";var r=n(6),o=n(23),u=n(15),i=n(5),f=n(59),c=n(75).KEY,a=n(16),s=n(33),l=n(65),p=n(34),d=n(66),v=n(71),y=n(76),h=n(77),m=n(78),b=n(79),g=n(12),x=n(24),_=n(18),O=n(19),w=n(62),S=n(80),j=n(82),E=n(11),M=n(21),P=j.f,k=E.f,T=S.f,C=r.Symbol,N=r.JSON,U=N\u0026\u0026N.stringify,A=\""prototype\"",F=d(\""_hidden\""),I=d(\""toPrimitive\""),D={}.propertyIsEnumerable,R=s(\""symbol-registry\""),W=s(\""symbols\""),J=s(\""op-symbols\""),L=Object[A],z=\""function\""==typeof C,B=r.QObject,q=!B||!B[A]||!B[A].findChild,Z=u\u0026\u0026a(function(){return 7!=w(k({},\""a\"",{get:function(){return k(this,\""a\"",{value:7}).a}})).a})?function(t,e,n){var r=P(L,e);r\u0026\u0026delete L[e],k(t,e,n),r\u0026\u0026t!==L\u0026\u0026k(L,e,r)}:k,G=function(t){var e=W[t]=w(C[A]);return e._k=t,e},K=z\u0026\u0026\""symbol\""==typeof C.iterator?function(t){return\""symbol\""==typeof t}:function(t){return t instanceof C},Y=function(t,e,n){return t===L\u0026\u0026Y(J,e,n),g(t),e=_(e,!0),g(n),o(W,e)?(n.enumerable?(o(t,F)\u0026\u0026t[F][e]\u0026\u0026(t[F][e]=!1),n=w(n,{enumerable:O(0,!1)})):(o(t,F)||k(t,F,O(1,{})),t[F][e]=!0),Z(t,e,n)):k(t,e,n)},H=function(t,e){g(t);for(var n,r=m(e=x(e)),o=0,u=r.length;u\u003eo;)Y(t,n=r[o++],e[n]);return t},Q=function(t,e){return void 0===e?w(t):H(w(t),e)},V=function(t){var e=D.call(this,t=_(t,!0));return this===L\u0026\u0026o(W,t)\u0026\u0026!o(J,t)?!1:e||!o(this,t)||!o(W,t)||o(this,F)\u0026\u0026this[F][t]?e:!0},$=function(t,e){if(t=x(t),e=_(e,!0),t!==L||!o(W,e)||o(J,e)){var n=P(t,e);return!n||!o(W,e)||o(t,F)\u0026\u0026t[F][e]||(n.enumerable=!0),n}},X=function(t){for(var e,n=T(x(t)),r=[],u=0;n.length\u003eu;)o(W,e=n[u++])||e==F||e==c||r.push(e);return r},tt=function(t){for(var e,n=t===L,r=T(n?J:x(t)),u=[],i=0;r.length\u003ei;)o(W,e=r[i++])\u0026\u0026(n?o(L,e):!0)\u0026\u0026u.push(W[e]);return u};z||(C=function(){if(this instanceof C)throw TypeError(\""Symbol is not a constructor!\"");var t=p(arguments.length\u003e0?arguments[0]:void 0),e=function(n){this===L\u0026\u0026e.call(J,n),o(this,F)\u0026\u0026o(this[F],t)\u0026\u0026(this[F][t]=!1),Z(this,t,O(1,n))};return u\u0026\u0026q\u0026\u0026Z(L,t,{configurable:!0,set:e}),G(t)},f(C[A],\""toString\"",function(){return this._k}),j.f=$,E.f=Y,n(81).f=S.f=X,n(37).f=V,n(36).f=tt,u\u0026\u0026!n(58)\u0026\u0026f(L,\""propertyIsEnumerable\"",V,!0),v.f=function(t){return G(d(t))}),i(i.G+i.W+i.F*!z,{Symbol:C});for(var et=\""hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\"".split(\"",\""),nt=0;et.length\u003ent;)d(et[nt++]);for(var et=M(d.store),nt=0;et.length\u003ent;)y(et[nt++]);i(i.S+i.F*!z,\""Symbol\"",{\""for\"":function(t){return o(R,t+=\""\"")?R[t]:R[t]=C(t)},keyFor:function(t){if(K(t))return h(R,t);throw TypeError(t+\"" is not a symbol!\"")},useSetter:function(){q=!0},useSimple:function(){q=!1}}),i(i.S+i.F*!z,\""Object\"",{create:Q,defineProperty:Y,defineProperties:H,getOwnPropertyDescriptor:$,getOwnPropertyNames:X,getOwnPropertySymbols:tt}),N\u0026\u0026i(i.S+i.F*(!z||a(function(){var t=C();return\""[null]\""!=U([t])||\""{}\""!=U({a:t})||\""{}\""!=U(Object(t))})),\""JSON\"",{stringify:function(t){if(void 0!==t\u0026\u0026!K(t)){for(var e,n,r=[t],o=1;arguments.length\u003eo;)r.push(arguments[o++]);return e=r[1],\""function\""==typeof e\u0026\u0026(n=e),!n\u0026\u0026b(e)||(e=function(t,e){return n\u0026\u0026(e=n.call(this,t,e)),K(e)?void 0:e}),r[1]=e,U.apply(N,r)}}}),C[A][I]||n(10)(C[A],I,C[A].valueOf),l(C,\""Symbol\""),l(Math,\""Math\"",!0),l(r.JSON,\""JSON\"",!0)},function(t,e,n){var r=n(34)(\""meta\""),o=n(13),u=n(23),i=n(11).f,f=0,c=Object.isExtensible||function(){return!0},a=!n(16)(function(){return c(Object.preventExtensions({}))}),s=function(t){i(t,r,{value:{i:\""O\""+ ++f,w:{}}})},l=function(t,e){if(!o(t))return\""symbol\""==typeof t?t:(\""string\""==typeof t?\""S\"":\""P\"")+t;if(!u(t,r)){if(!c(t))return\""F\"";if(!e)return\""E\"";s(t)}return t[r].i},p=function(t,e){if(!u(t,r)){if(!c(t))return!0;if(!e)return!1;s(t)}return t[r].w},d=function(t){return a\u0026\u0026v.NEED\u0026\u0026c(t)\u0026\u0026!u(t,r)\u0026\u0026s(t),t},v=t.exports={KEY:r,NEED:!1,fastKey:l,getWeak:p,onFreeze:d}},function(t,e,n){var r=n(6),o=n(7),u=n(58),i=n(71),f=n(11).f;t.exports=function(t){var e=o.Symbol||(o.Symbol=u?{}:r.Symbol||{});\""_\""==t.charAt(0)||t in e||f(e,t,{value:i.f(t)})}},function(t,e,n){var r=n(21),o=n(24);t.exports=function(t,e){for(var n,u=o(t),i=r(u),f=i.length,c=0;f\u003ec;)if(u[n=i[c++]]===e)return n}},function(t,e,n){var r=n(21),o=n(36),u=n(37);t.exports=function(t){var e=r(t),n=o.f;if(n)for(var i,f=n(t),c=u.f,a=0;f.length\u003ea;)c.call(t,i=f[a++])\u0026\u0026e.push(i);return e}},function(t,e,n){var r=n(26);t.exports=Array.isArray||function(t){return\""Array\""==r(t)}},function(t,e,n){var r=n(24),o=n(81).f,u={}.toString,i=\""object\""==typeof window\u0026\u0026window\u0026\u0026Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],f=function(t){try{return o(t)}catch(e){return i.slice()}};t.exports.f=function(t){return i\u0026\u0026\""[object Window]\""==u.call(t)?f(t):o(r(t))}},function(t,e,n){var r=n(22),o=n(35).concat(\""length\"",\""prototype\"");e.f=Object.getOwnPropertyNames||function(t){return r(t,o)}},function(t,e,n){var r=n(37),o=n(19),u=n(24),i=n(18),f=n(23),c=n(14),a=Object.getOwnPropertyDescriptor;e.f=n(15)?a:function(t,e){if(t=u(t),e=i(e,!0),c)try{return a(t,e)}catch(n){}return f(t,e)?o(!r.f.call(t,e),t[e]):void 0}},function(t,e){},function(t,e,n){n(76)(\""asyncIterator\"")},function(t,e,n){n(76)(\""observable\"")},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(41),u=r(o),i=n(87),f=r(i);e[\""default\""]=function c(t,e,n){null===t\u0026\u0026(t=Function.prototype);var r=(0,f[\""default\""])(t,e);if(void 0===r){var o=(0,u[\""default\""])(t);return null===o?void 0:c(o,e,n)}if(\""value\""in r)return r.value;var i=r.get;if(void 0!==i)return i.call(n)}},function(t,e,n){t.exports={\""default\"":n(88),__esModule:!0}},function(t,e,n){n(89);var r=n(7).Object;t.exports=function(t,e){return r.getOwnPropertyDescriptor(t,e)}},function(t,e,n){var r=n(24),o=n(82).f;n(45)(\""getOwnPropertyDescriptor\"",function(){return function(t,e){return o(r(t),e)}})},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}e.__esModule=!0;var o=n(91),u=r(o),i=n(95),f=r(i),c=n(52),a=r(c);e[\""default\""]=function(t,e){if(\""function\""!=typeof e\u0026\u0026null!==e)throw new TypeError(\""Super expression must either be null or a function, not \""+(\""undefined\""==typeof e?\""undefined\"":(0,a[\""default\""])(e)));t.prototype=(0,f[\""default\""])(e\u0026\u0026e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e\u0026\u0026(u[\""default\""]?(0,u[\""default\""])(t,e):t.__proto__=e)}},function(t,e,n){t.exports={\""default\"":n(92),__esModule:!0}},function(t,e,n){n(93),t.exports=n(7).Object.setPrototypeOf},function(t,e,n){var r=n(5);r(r.S,\""Object\"",{setPrototypeOf:n(94).set})},function(t,e,n){var r=n(13),o=n(12),u=function(t,e){if(o(t),!r(e)\u0026\u0026null!==e)throw TypeError(e+\"": can't set as prototype!\"")};t.exports={set:Object.setPrototypeOf||(\""__proto__\""in{}?function(t,e,r){try{r=n(8)(Function.call,n(82).f(Object.prototype,\""__proto__\"").set,2),r(t,[]),e=!(t instanceof Array)}catch(o){e=!0}return function(t,n){return u(t,n),e?t.__proto__=n:r(t,n),t}}({},!1):void 0),check:u}},function(t,e,n){t.exports={\""default\"":n(96),__esModule:!0}},function(t,e,n){n(97);var r=n(7).Object;t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){var r=n(5);r(r.S,\""Object\"",{create:n(62)})},function(t,e){t.exports=require(\""react\"")},function(t,e,n){\""use strict\"";function r(t){return t\u0026\u0026t.__esModule?t:{\""default\"":t}}function o(t){var e=t.req,r={};if(e){var o=e.headers.cookie;if(o){var u=n(101).parse,i=u(o),f=i.tzOffset;f\u0026\u0026(r.tzOffset=parseInt(f,10))}}return r}function u(){var t=(new Date).getTimezoneOffset();f[\""default\""].set(\""tzOffset\"",t,{expires:365})}Object.defineProperty(e,\""__esModule\"",{value:!0}),e.getTZOffset=o,e.saveTZOffset=u;var i=n(100),f=r(i)},function(t,e,n){var r,o;!function(u){r=u,o=\""function\""==typeof r?r.call(e,n,e,t):r,!(void 0!==o\u0026\u0026(t.exports=o))}(function(){function t(){for(var t=0,e={};t\u003carguments.length;t++){var n=arguments[t];for(var r in n)e[r]=n[r]}return e}function e(n){function r(e,o,u){var i;if(\""undefined\""!=typeof document){if(arguments.length\u003e1){if(u=t({path:\""/\""},r.defaults,u),\""number\""==typeof u.expires){var f=new Date;f.setMilliseconds(f.getMilliseconds()+864e5*u.expires),u.expires=f}try{i=JSON.stringify(o),/^[\\{\\[]/.test(i)\u0026\u0026(o=i)}catch(c){}return o=n.write?n.write(o,e):encodeURIComponent(String(o)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)),e=e.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),e=e.replace(/[\\(\\)]/g,escape),document.cookie=[e,\""=\"",o,u.expires\u0026\u0026\""; expires=\""+u.expires.toUTCString(),u.path\u0026\u0026\""; path=\""+u.path,u.domain\u0026\u0026\""; domain=\""+u.domain,u.secure?\""; secure\"":\""\""].join(\""\"")}e||(i={});for(var a=document.cookie?document.cookie.split(\""; \""):[],s=/(%[0-9A-Z]{2})+/g,l=0;l\u003ca.length;l++){var p=a[l].split(\""=\""),d=p[0].replace(s,decodeURIComponent),v=p.slice(1).join(\""=\"");'\""'===v.charAt(0)\u0026\u0026(v=v.slice(1,-1));try{if(v=n.read?n.read(v,d):n(v,d)||v.replace(s,decodeURIComponent),this.json)try{v=JSON.parse(v)}catch(c){}if(e===d){i=v;break}e||(i[d]=v)}catch(c){}}return i}}return r.set=r,r.get=function(t){return r(t)},r.getJSON=function(){return r.apply({json:!0},[].slice.call(arguments))},r.defaults={},r.remove=function(e,n){r(e,\""\"",t(n,{expires:-1}))},r.withConverter=e,r}return e(function(){})})},function(t,e){function n(t,e){if(\""string\""!=typeof t)throw new TypeError(\""argument str must be a string\"");var n={},r=e||{},i=t.split(f),c=r.decode||u;return i.forEach(function(t){var e=t.indexOf(\""=\"");if(!(0\u003ee)){var r=t.substr(0,e).trim(),u=t.substr(++e,t.length).trim();'\""'==u[0]\u0026\u0026(u=u.slice(1,-1)),void 0==n[r]\u0026\u0026(n[r]=o(u,c))}}),n}function r(t,e,n){var r=n||{},o=r.encode||i;if(!c.test(t))throw new TypeError(\""argument name is invalid\"");var u=o(e);if(u\u0026\u0026!c.test(u))throw new TypeError(\""argument val is invalid\"");var f=[t+\""=\""+u];if(null!=r.maxAge){var a=r.maxAge-0;if(isNaN(a))throw new Error(\""maxAge should be a Number\"");f.push(\""Max-Age=\""+Math.floor(a))}if(r.domain){if(!c.test(r.domain))throw new TypeError(\""option domain is invalid\"");f.push(\""Domain=\""+r.domain)}if(r.path){if(!c.test(r.path))throw new TypeError(\""option path is invalid\"");f.push(\""Path=\""+r.path)}return r.expires\u0026\u0026f.push(\""Expires=\""+r.expires.toUTCString()),r.httpOnly\u0026\u0026f.push(\""HttpOnly\""),r.secure\u0026\u0026f.push(\""Secure\""),r.firstPartyOnly\u0026\u0026f.push(\""First-Party-Only\""),f.join(\""; \"")}function o(t,e){try{return e(t)}catch(n){return t}}/*!\r\n\t * cookie\r\n\t * Copyright(c) 2012-2014 Roman Shtylman\r\n\t * Copyright(c) 2015 Douglas Christopher Wilson\r\n\t * MIT Licensed\r\n\t */\ne.parse=n,e.serialize=r;var u=decodeURIComponent,i=encodeURIComponent,f=/; */,c=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/},function(t,e){t.exports=require(\""next/app\"")}]);"",""component"":""module.exports=function(e){function t(s){if(a[s])return a[s].exports;var n=a[s]={exports:{},id:s,loaded:!1};return e[s].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var a={};return t.m=e,t.c=a,t.p=\""\"",t(0)}([function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(1),r=s(n),o=a(39),i=s(o),l=a(40),c=s(l),f=a(87),u=a(88),d=s(u),p=a(89),_=(s(p),a(90)),h=s(_),m=a(124),g=s(m),y=a(130),v=s(y),x=a(133),b=s(x),w=a(135),E=s(w),C=a(137),N=(s(C),a(139)),k=(s(N),a(140)),M=s(k);t[\""default\""]=d[\""default\""].createClass({isolationPrefix:\""__blog_async-and-await_\"",style:'.__blog_async-and-await_p_tag{line-height:18px;color:#ccc;font-size:12px}.__blog_async-and-await_h1_tag,.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag{font-weight:400;margin:20px 0}.__blog_async-and-await_h1_tag{color:#fff;font-size:12px}.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag{color:#909090;font-size:12px}.__blog_async-and-await_h1_tag:before{content:\""# \""}.__blog_async-and-await_h2_tag:before{content:\""## \""}.__blog_async-and-await_h3_tag:before{content:\""### \""}.__blog_async-and-await_h4_tag:before{content:\""#### \""}.__blog_async-and-await_ol_tag,.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag{color:#ccc;font-size:12px}.__blog_async-and-await_a_tag{color:#fff}.__blog_async-and-await_ul_tag{margin:20px 0;padding:0}.__blog_async-and-await_ul_tag .__blog_async-and-await_ul_tag{margin-left:15px;margin-top:10px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{list-style-type:none;margin-bottom:5px;padding-left:15px;line-height:16px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag:before{content:\""-\"";display:inline-block;color:#999;position:absolute;margin-left:-15px}.__blog_async-and-await_ol_tag{list-style-type:lower-alpha;margin-bottom:16px}.__blog_async-and-await_ol_tag .__blog_async-and-await_li_tag{line-height:18px}.__blog_async-and-await_ol_tag .__blog_async-and-await_ol_tag{list-style-type:lower-roman;margin:20px 0}.__blog_async-and-await_hr_tag{border:none;margin:12px 0;text-align:center}.__blog_async-and-await_hr_tag:before{content:\""***\"";font-size:13px}.__blog_async-and-await_em_tag:after,.__blog_async-and-await_em_tag:before{content:\""_\""}.__blog_async-and-await_strong_tag:after,.__blog_async-and-await_strong_tag:before{content:\""*\""}.__blog_async-and-await_code_tag:after,.__blog_async-and-await_code_tag:before{content:\""`\""}.__blog_async-and-await_h1_tag{color:#000;font-size:16px;margin-bottom:0}.__blog_async-and-await_h1_tag,.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag{font-weight:700}.__blog_async-and-await_h2_tag,.__blog_async-and-await_h3_tag,.__blog_async-and-await_h4_tag,.__blog_async-and-await_ol_tag,.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag{color:#424242}.__blog_async-and-await_a_tag{color:#4a90e2;text-decoration:none;border-bottom:1px solid #4a90e2;padding-bottom:1px}.__blog_async-and-await_hr_tag:before{color:#424242}.__blog_async-and-await_h1_tag{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-size:16px}.__blog_async-and-await_h2_tag{font-size:13px}.__blog_async-and-await_h1_tag:before,.__blog_async-and-await_h2_tag:before,.__blog_async-and-await_h3_tag:before{display:none}.__blog_async-and-await_pre_tag{margin-left:20px;color:#666;padding:10px 0;line-height:18px;white-space:pre-wrap}.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag:after,.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag:before{content:\\'\\'}.__blog_async-and-await_p_tag,.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{font-size:12px}.__blog_async-and-await_ul_tag .__blog_async-and-await_li_tag{line-height:20px}.__blog_async-and-await_code_tag{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:12px;color:#777}.__blog_async-and-await_pre_tag .__blog_async-and-await_code_tag{color:#b800e3;word-wrap:break-word}.__blog_async-and-await_img_tag{max-width:100%;height:auto}.__blog_async-and-await_container{margin:0 auto;padding:40px 20px;max-width:800px}.__blog_async-and-await_meta{margin-top:7px;font-size:12px}.__blog_async-and-await_meta .__blog_async-and-await_a_tag{border-bottom-width:0}.__blog_async-and-await_a_tag.__blog_async-and-await_ref{font-size:10px;border-bottom-width:0;position:relative;bottom:3px}.__blog_async-and-await_footnotes:before{content:\\'***\\';color:#666;text-align:center;margin:20px;display:block}.__blog_async-and-await_footnotes,.__blog_async-and-await_footnotes .__blog_async-and-await_li_tag{list-style:inside decimal;margin:0;padding:0}.__blog_async-and-await_footnotes .__blog_async-and-await_li_tag{margin-bottom:18px}.__blog_async-and-await_comment{color:#999}',displayName:\""BlogAsyncAndAwait\"",getInitialProps:function(e){return(0,c[\""default\""])(e).then(function(t){var a=(0,f.getTZOffset)(e);return(0,r[\""default\""])({},t,a)})},render:function(){var e=this;try{return i[\""default\""].createElement(\""div\"",{className:this._prefixClasses(\""div_tag\"")},i[\""default\""].createElement(E[\""default\""],{className:this._prefixClasses(\""Head_tag\""),title:\""Async and Await\"",description:\""JavaScript, in particular Node.js, has been frequently associated with callback hell. If you've written code that deals with a lot async I/O, you're probably familiar with this pattern:\"",url:\""https://zeit.co/api\"",image:\""https://zeit.co/static/twitter-card.png\""}),i[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Header_tag\""),inverse:!0,user:this.props.user,pathname:this.props.url.pathname,onLogoRightClick:function(){return e.props.url.goTo(\""/logos\"")}}),i[\""default\""].createElement(\""div\"",{className:this._prefixClasses(\""container div_tag\"")},i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\""),id:\""\""},i[\""default\""].createElement(\""h1\"",{className:this._prefixClasses(\""h1_tag\"")},\""Async and Await\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""meta p_tag\"")},\""\u003e Guillermo Rauch (\"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://twitter.com/rauchg\"",target:\""_blank\""},\""@rauchg\""),\""). \"",i[\""default\""].createElement(M[\""default\""],{className:this._prefixClasses(\""Date_tag\""),value:\""Wed Jun 01 2016 17:30:00 GMT-0700 (PDT)\"",tzOffset:this.props.tzOffset}),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""JavaScript, in particular Node.js, has been frequently associated with \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""callback hell\""),i[\""default\""].createElement(\""a\"",{href:\""#f1\"",className:this._prefixClasses(\""ref a_tag\""),id:\""r1\""},\""[1]\""),\"". If you've written code that deals with a lot of async I/O, you're probably familiar with this pattern:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""export default function getLikes () {\\n  getUsers((err, users) =\u003e {\\n    if (err) return fn(err);\\n    filterUsersWithFriends((err, usersWithFriends) =\u003e {\\n      if (err) return fn(err);\\n      getUsersLikes(usersWithFriends, (err, likes) =\u003e {\\n        if (err) return fn (err);\\n        fn(null, likes);\\n      });\\n    });\\n  });\\n}\\n\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""It turns out, this code can be much easier and safer to write.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""I'll show you how \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" combined with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" / \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" enables this, but also some of the lessons we've learned from using these new features in production.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Let's start with the pitfalls of the example above.\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""Callback problems\"")),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Error handling is repetitive\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In a great majority of cases, you want to just \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""pass the error along\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In the example above, however, you repeat yourself many times. It's also easy to miss a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""return\""),\"" and only discover it (with non-obvious debugging) when the error actually occurs.\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Error handling in unspecified\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""When errors occur, most popular libraries will invoke the callback with an \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Error\""),\"" parameter, or in the success case use \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""null\""),\"" instead.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Unfortunately this is not always the case. You might get \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""false\""),\"" instead of \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""null\""),\"". Some libraries omit it altogether. If several errors occur, you might even get multiple callbacks! Which leads us to…\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Scheduling is unspecified\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Does the callback fire immediately? or on a different \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://jakearchibald.com/20r5/tasks-microtasks-queues-and-schedules/\"",target:\""_blank\""},\""microtask\""),\""? or on a different tick? Sometimes? Always?\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Who knows! Reading your own code certainly won't tell you. Reading the library's documentation \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""might\""),\"" tell you, if you're lucky.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""It's possible that the callback will fire \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""more than once\""),\"" without you expecting it. Once again, this will almost certainly result in code that's \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""extremely hard to debug\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In certain cases, the code might continue to run but not doing quite what it should. In others, you might get a stack trace that doesn't exactly make the root cause obvious.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The solution to these problems is the standarization on \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},i[\""default\""].createElement(\""b\"",{className:this._prefixClasses(\""b_tag\"")},\""Promise\"")),\"".\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""How Promise works\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Promises present a clear contract and API to you. While we might disagree on whether the details and API of this contract are the best ones, they're strictly defined.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Thus, the lack of specification we mentioned above is not a concern when you're dealing with code that uses \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This is what the equivalent to \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""setTimeout\""),\"" would look like using \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"":\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""function sleep (time) {\\n  return new Promise((resolve) =\u003e setTimeout(resolve, time));\\n}\\n\\nsleep(100)\\n.then(() =\u003e console.log('100ms elapsed'))\\n.catch(() =\u003e console.error('error!'));\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Promises can be in two settled states: resolved and rejected. As seen above, you can set up a pair of callbacks to obtain the resolved value and the rejected value.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The fact that we \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""pass callbacks to a promise\""),\"" shows that we often deal with somewhat of a false dichotomy. Obviously, promises need callbacks to do anything meaningful. The real comparison is then between promises and the callback \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""pattern\""),\"" that the JavaScript community has \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""informally\""),\"" agreed upon\"",i[\""default\""].createElement(\""a\"",{href:\""#f2\"",id:\""r2\"",className:this._prefixClasses(\""ref a_tag\"")},\""[2]\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Promises represent a \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""single\""),\"" value. Unlike the callback pattern above, you can't get an error followed by success for the a certain invocation. Or get a value and an error later on.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""You can think of \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""resolve\""),\"" as the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" equivalent of \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""return\""),\"" and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""reject\""),\"" as \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""throw\""),\"". As we'll see later on, this semantic equivalency is \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""syntactically realized\""),\"" by the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" keywords.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""As far as scheduling goes, the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" spec has \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""settled\""),' on always invoking callbacks \""at a future time\"" (i.e.: the next microtask). This meants the behavior of a ',i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" is consistently asynchronous every time you call \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""then\""),\"" or \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""catch\""),\"", whether it's already been \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""settled\""),\"" or not.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""If we write our initial example with this API it would look as follows:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""export default function getUsers () {\\n  return getUsers()\\n  .then(users =\u003e filterUsersWithFriends)\\n  .then(usersWithFriends =\u003e getUsersLikes);\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This already looks much better! That said, if our logic were to change, refactoring the code gets complicated very quickly.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Imagine that in the code above, a particular type of failure of \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""filterUsersWithFriends\""),\"" needs to be handled differently:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""export default function getUsers () {\\n  return new Promise((resolve, reject) =\u003e {\\n    getUsers().then(users =\u003e {\\n      filterUsersWithFriends(users)\\n      .then(resolve)\\n      .catch((err) =\u003e {\\n        resolve(trySomethingElse(users));\\n      });\\n    }, reject)\\n  });\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},'No amount of chaining \""convenience\"" can save us. Let\\'s look at the solution.'),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""The future: async and await\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""As known for a while in the C# and F# \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""http://tirania.org/blog/archive/2013/Aug-15.html\"",target:\""_blank\""},\""world\""),\"", there's an elegant solution to our problems:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""export default async function getLikes () {\\n  const users = await getUsers();\\n  const filtered = await filterUsersWithFriends(users);\\n  return getUsersLikes(filtered);\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""For this to work, we just need to make sure that the functions that perform I/O that we depend on (like \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""getUsers\""),\"") return a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Not only is it easier to read (as the chaining example was), but now the error handling behavior is the exact same as regular synchronous JavaScript code.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""That is, when we \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" a function, errors (if any) are surfaced and thrown. If our \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""getLikes\""),\"" function is invoked, errors bubble up by default. If you want to handle a particular error differently, just wrap your \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" invocation with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""try\""),\""/\"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""catch\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This will increase your productivity and correctness as you won't be writing (or worse, ignoring!) \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""if (err) return fn(err)\""),\"" everywhere.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""How certain are we of this future?\""),i[\""default\""].createElement(\""ul\"",{className:this._prefixClasses(\""ul_tag\"")},i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" is already in all modern \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""http://caniuse.com/#feat=promises\"",target:\""_blank\""},\""mobile and desktop browsers\""),\"" and Node.js 0.12+\""),i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" / \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" has been almost completely implemented in \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://chromium.googlesource.com/v8/v8.git/+/d08c0304c5779223d6c468373af4815ec3ccdb84\"",target:\""_blank\""},\""V8\""),\"", \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://www.infoq.com/news/2015/10/async-await-javascript-edge\""},\""Edge\""),\"" and \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://bugzilla.mozilla.org/show_bug.cgi?id=1185106\""},\""Firefox\""),\"".\"")),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Lessons learned\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""We've been using these features at \"",i[\""default\""].createElement(h[\""default\""],{className:this._prefixClasses(\""Zeit_tag\""),inverse:!0}),\"" for many months now and have been extremely happy and productive with them.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""I recently \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://gist.github.com/rauchg/8199de60db48026a6670620a1c33b700\"",target:\""_blank\""},\""published a guide\""),\"" to transpiling with Babel and Node 6, which due to its great support for ES6 now only needs \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""two transformation plugins\""),\"" and exhibits great compilation performance.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""If you want support for the browser or older versions of Node, I suggest you also include the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""es2015\""),\"" preset. This will compile to a state machine instead of generators.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In order to maximize your usage of this feature, you'll want to use modules from the ecosystem that expose \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" instead of just a callback.\""),i[\""default\""].createElement(\""ul\"",{className:this._prefixClasses(\""ul_tag\"")},i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},\""Some modules already do both. \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""node_redis\""),\"", for example, exposes \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" if you suffix \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/NodeRedis/node_redis#promises\"",target:\""_blank\""},\""Async\"")),\"" to the methods it exposes.\""),i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},\""Some modules exist to wrap existing modules with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"". You can usually identify these by their prefix or suffix \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""then\""),\"" or \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""promise\""),\"". Examples: \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://www.npmjs.com/package/fs-promise\"",target:\""_blank\""},\""fs-promise\"")),\"", \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://www.npmjs.com/package/then-sleep\"",target:\""_blank\""},\""then-sleep\"")),\"".\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In addition to these, Node is considering returning \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\""s directly in the standard library. You can follow that \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/nodejs/node/pull/5020\"",target:\""_blank\""},\""discussion here\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""I also need to stress that this syntax doesn't make \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" go away from your codebase. In fact, you must have a thorough understanding of them, which you'll \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""frequently need\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""A common example where \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" makes an appearence is code that requires multiple values as part of a loop, which are requested concurrently:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""const ids = [1, 2, 3];\\nconst values = await Promise.all(ids.map((id) =\u003e {\\n  return db.query('SELECT * from products WHERE id = ?', id);\\n}));\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Notice also that in the example presented above (\"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async getLikes()\""),\""), I opted to \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""return getUserLikes()\""),\"" instead of \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""return await getUserLikes()\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Since the goal of the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" keyword is to make the function return a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"", those two snippets are therefore equivalent.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This means that the following code: \""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async function getAnswer () {\\n  return 42;\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""is perfectly valid and equivalent to its sync counter-part \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""const getAnswer = () =\u003e 42\""),\"" with the exception that when invoked with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" it will resolve \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""in the next microtask\""),\"". When called without \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"", it will return a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"".\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""The boulevard of broken Promises\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Earlier I mentioned the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" spec set out to solve a host of problems we would frequently run into with callbacks.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""I'll cover some of the problems that have remained or have been now introduced, and some behaviors that were left unspecified but are critical for our needs.\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Debugging difficulties\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""When you use a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" and don't attach an error handler, in many environments you might never find out about the error.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This is the equivalent to ignoring the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""err\""),\"" parameter in the callback pattern, with the difference that a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""TypeError\""),\"" \"",\""is likely to occur when you try to access the value you're interested in.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In the callback pattern, while you can manage to \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""ignore \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""err\"")),\"", you're likely to find out with a crash later on when the error does occur.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Ignoring errors is normally quite difficult to do with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"", however. The exception would be the \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""entry point\""),\"" of your asynchronous code:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async function run () {\\n  // your app code…\\n}\\n\\nrun().catch((err) =\u003e {\\n  // make sure to handle the error!\\n});\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Fortunately, there are workarounds and a potential definitive solution to this problem:\""),i[\""default\""].createElement(\""ul\"",{className:this._prefixClasses(\""ul_tag\"")},i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},\""Chrome and Firefox warn about unhandled rejections in the developer tools.\""),i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},\""Node.js emits \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://nodejs.org/api/process.html#process_event_unhandledrejection\"",target:\""_blank\""},\""unhandledRejection\"")),\"", with which you can log manually. I recommend you read this \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/nodejs/node/issues/830\"",\ntarget:\""_blank\""},\""discussion\""),\"" about the implications of unhandled rejections for backend systems.\""),i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/tc39/ecmascript-asyncawait/issues/9\"",target:\""_blank\""},\""Top-level\""),\"" support for \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" in the future would make the manual\"",\"" \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" instantiation and catching unnecessary!\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Finally, I mentioned earlier that \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\""s will be resolved once, unlike callbacks that could fire multiple times unexpectedly.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The problem is that once again, \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\""s will swallow subsequent resolutions and more concerningly, rejections. There might be errors that are never logged!\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h3\"",{className:this._prefixClasses(\""h3_tag\"")},\""Cancellation\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The original \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" spec left out the semantics of\"",\"" \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""cancelling\""),\"" the ongoing asynchronous retrieval of a value.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""As fate would have it, browser vendors went on to implement them as the return value of functions that have historically needed cancelation, like HTTP requests.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Namely, with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""XMLHttpRequest\""),\"" you can call \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""abort\""),\"" \"",\""on the resulting object, but with the new and shiny \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""fetch\""),\""… you can't.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""TC39 is now considering the addition of a third state: cancelled. You can read more about the \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://docs.google.com/presentation/d/1V4vmC54gJkwAss1nfEt9ywc-QOVOfleRxD5qtpMpc8U/edit?usp=sharing\"",target:\""_blank\""},\""stage 1 proposal here\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""While retro-fitted to \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\""s, cancellation is a fundamental property of the next abstraction we'll cover: the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"".\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""Observables\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Earlier in the post it became evident that waiting on a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" \"",\""to resolve is somewhat equivalent to a function doing some work and returning a value synchronously.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" is a more general (and therefore more powerful) abstraction that represents a function invokation that can return several values.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Unlike \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"", \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" objects can return synchronously (same tick) or asynchronously.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""These design decisions make an \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" suitable for a wider range of usecases.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""In the spirit of our earlier examples, here's how \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" \"",\""can work with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""setInterval\""),\"" to give us a value over time:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""function timer (ms) {\\n  return new Observable(obv =\u003e {\\n    let i = 0;\\n    const iv = setInterval(() =\u003e {\\n      obv.next(i++);\\n    }, ms);\\n    return () =\u003e clearInterval(iv);\\n  });\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""As I mentioned earlier, \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" covers a broader spectrum of possibility. From this lense, a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" is simply an\"",\"" \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" that returns a single value and completes:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""function delay(ms) {\\n  return new Observable(obv =\u003e {\\n    const t = setTimeout(() =\u003e {\\n      obv.next();\\n      obv.complete();\\n    }, ms);\\n    return () =\u003e clearTimeout(t);\\n  });\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Notice that the value returned in the setup of the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" \"",\""is a function that performs cleanup. Such a function is executed when no subscriptions are left:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""const subscription = delay(100).subscribe();\\nsubscription.unsubscribe(); // cleanup happens\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This means that \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" also fills another missing gap in \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"": cancelation. In this model, cancelation is simply a consequence of the \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""cease of observation\""),\"".\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""With this said, a lot of asynchronous work can be expressed with only the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" subset just fine. As a matter of fact, a great portion of the core library of Node.js only needs that (the exceptions being \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Stream\""),\"" and some \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""EventEmitter\""),\"").\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""What about \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\""? One could implement an operator that restricts the behavior of a given\"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" to that of a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Promise\""),\"" \"",\""(which libraries like RxJS \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/topromise.md\"",target:\""_blank\""},\""already have\""),\"") and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" it:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await toPromise(timer(1000));\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""This example shows us the generalization in action: the \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""timer\""),\"" \"",\""function is just as useful as \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""delay\""),\"", but \"",i[\""default\""].createElement(\""em\"",{className:this._prefixClasses(\""em_tag\"")},\""also\""),\"" \"",\""works for intervals!\""),i[\""default\""].createElement(b[\""default\""],{className:this._prefixClasses(\""Heading_tag\"")},i[\""default\""].createElement(\""h2\"",{className:this._prefixClasses(\""h2_tag\"")},\""Future directions\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""async\""),\"" and \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"" will enable significant improvements in your codebases.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Our open-source library \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/zeit/micro\"",target:\""_blank\""},\""micro\""),\"" \"",\""is a great example of how the request / response cycle can be made a lot more straightforward.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""The following microservice responds with a \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""JSON\""),\"" encoded array of users a database.\"",i[\""default\""].createElement(\""br\"",{className:this._prefixClasses(\""br_tag\"")}),\"" \"",\""If any of the handlers throw, the response is aborted with \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""err.statusCode\""),\"". \"",i[\""default\""].createElement(\""br\"",{className:this._prefixClasses(\""br_tag\"")}),\"" \"",\""If unhandled exceptions occur, a \"",i[\""default\""].createElement(\""strong\"",{className:this._prefixClasses(\""strong_tag\"")},\""500\""),\"" response is produced and the error logged.\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""export default async function (req, res) {\\n  await rateLimit(req);\\n  const uid = await authenticate(req);\\n  return getUsers(uid);\\n}\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""As mentioned, proposals have been made for ES6 modules to admit a top-level \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""await\""),\"". For Node.js this would mean being able to write code like this:\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""import request from 'request';\\nconst file = await fs.readFile('some-file');\\nconst res = await request.post('/some-api', { body: { file } });\\nconsole.log(res.data);\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""and then run it without any wrappers (and straight-forward error handling)!\""),i[\""default\""].createElement(\""pre\"",{className:this._prefixClasses(\""pre_tag\"")},i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""▲ node my-script.mjs\"")),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""Simultaneously, \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Observable\""),\"" continues to \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://github.com/zenparsing/es-observable\"",target:\""_blank\""},\""make progress\""),\"" within TC39 to become a first-class construct of the language.\""),i[\""default\""].createElement(\""p\"",{className:this._prefixClasses(\""p_tag\"")},\""I believe these new primitives for managing concurrency and asynchrony will have a very profound impact on the JavaScript ecosystem. \"",i[\""default\""].createElement(\""b\"",{className:this._prefixClasses(\""b_tag\"")},\""It's about time\""),\"".\""),i[\""default\""].createElement(\""ol\"",{className:this._prefixClasses(\""footnotes ol_tag\"")},i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\""),id:\""f1\""},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""#r1\""},\""^\""),\"" A litmus test for callback hell: does a Ryu performing Hadouken \"",i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""https://twitter.com/dr4goonis/status/476617165463105536\"",target:\""_blank\""},\""fit in your indentation?\"")),i[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\""),id:\""f2\""},i[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""#r2\""},\""^\""),\"" The pattern can be summarized as follows: the callback is invoked once, on a different tick, with an \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""Error\""),\"" object as the first parameter in the case of an error, or \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""null\""),\"" and the intended value as the second. However, deviations from this implicit agreement are commonly encountered in the ecosystem. Some libraries omit the error object and emit an \"",i[\""default\""].createElement(\""code\"",{className:this._prefixClasses(\""code_tag\"")},\""error\""),\"" event somewhere else. Some callbacks fire with multiple values. Et cetera.\""))),i[\""default\""].createElement(v[\""default\""],{className:this._prefixClasses(\""Footer_tag\""),inverse:!0}))}catch(t){if(\""undefined\""==typeof window)throw t;return this.renderError=t,null}}})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}t.__esModule=!0;var n=a(2),r=s(n);t[\""default\""]=r[\""default\""]||function(e){for(var t=1;t\u003carguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)\u0026\u0026(e[s]=a[s])}return e}},function(e,t,a){e.exports={\""default\"":a(3),__esModule:!0}},function(e,t,a){a(4),e.exports=a(7).Object.assign},function(e,t,a){var s=a(5);s(s.S+s.F,\""Object\"",{assign:a(20)})},function(e,t,a){var s=a(6),n=a(7),r=a(8),o=a(10),i=\""prototype\"",l=function(e,t,a){var c,f,u,d=e\u0026l.F,p=e\u0026l.G,_=e\u0026l.S,h=e\u0026l.P,m=e\u0026l.B,g=e\u0026l.W,y=p?n:n[t]||(n[t]={}),v=y[i],x=p?s:_?s[t]:(s[t]||{})[i];p\u0026\u0026(a=t);for(c in a)f=!d\u0026\u0026x\u0026\u0026void 0!==x[c],f\u0026\u0026c in y||(u=f?x[c]:a[c],y[c]=p\u0026\u0026\""function\""!=typeof x[c]?a[c]:m\u0026\u0026f?r(u,s):g\u0026\u0026x[c]==u?function(e){var t=function(t,a,s){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,a)}return new e(t,a,s)}return e.apply(this,arguments)};return t[i]=e[i],t}(u):h\u0026\u0026\""function\""==typeof u?r(Function.call,u):u,h\u0026\u0026((y.virtual||(y.virtual={}))[c]=u,e\u0026l.R\u0026\u0026v\u0026\u0026!v[c]\u0026\u0026o(v,c,u)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},function(e,t){var a=e.exports=\""undefined\""!=typeof window\u0026\u0026window.Math==Math?window:\""undefined\""!=typeof self\u0026\u0026self.Math==Math?self:Function(\""return this\"")();\""number\""==typeof __g\u0026\u0026(__g=a)},function(e,t){var a=e.exports={version:\""2.4.0\""};\""number\""==typeof __e\u0026\u0026(__e=a)},function(e,t,a){var s=a(9);e.exports=function(e,t,a){if(s(e),void 0===t)return e;switch(a){case 1:return function(a){return e.call(t,a)};case 2:return function(a,s){return e.call(t,a,s)};case 3:return function(a,s,n){return e.call(t,a,s,n)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if(\""function\""!=typeof e)throw TypeError(e+\"" is not a function!\"");return e}},function(e,t,a){var s=a(11),n=a(19);e.exports=a(15)?function(e,t,a){return s.f(e,t,n(1,a))}:function(e,t,a){return e[t]=a,e}},function(e,t,a){var s=a(12),n=a(14),r=a(18),o=Object.defineProperty;t.f=a(15)?Object.defineProperty:function(e,t,a){if(s(e),t=r(t,!0),s(a),n)try{return o(e,t,a)}catch(i){}if(\""get\""in a||\""set\""in a)throw TypeError(\""Accessors not supported!\"");return\""value\""in a\u0026\u0026(e[t]=a.value),e}},function(e,t,a){var s=a(13);e.exports=function(e){if(!s(e))throw TypeError(e+\"" is not an object!\"");return e}},function(e,t){e.exports=function(e){return\""object\""==typeof e?null!==e:\""function\""==typeof e}},function(e,t,a){e.exports=!a(15)\u0026\u0026!a(16)(function(){return 7!=Object.defineProperty(a(17)(\""div\""),\""a\"",{get:function(){return 7}}).a})},function(e,t,a){e.exports=!a(16)(function(){return 7!=Object.defineProperty({},\""a\"",{get:function(){return 7}}).a})},function(e,t){e.exports=function(e){try{return!!e()}catch(t){return!0}}},function(e,t,a){var s=a(13),n=a(6).document,r=s(n)\u0026\u0026s(n.createElement);e.exports=function(e){return r?n.createElement(e):{}}},function(e,t,a){var s=a(13);e.exports=function(e,t){if(!s(e))return e;var a,n;if(t\u0026\u0026\""function\""==typeof(a=e.toString)\u0026\u0026!s(n=a.call(e)))return n;if(\""function\""==typeof(a=e.valueOf)\u0026\u0026!s(n=a.call(e)))return n;if(!t\u0026\u0026\""function\""==typeof(a=e.toString)\u0026\u0026!s(n=a.call(e)))return n;throw TypeError(\""Can't convert object to primitive value\"")}},function(e,t){e.exports=function(e,t){return{enumerable:!(1\u0026e),configurable:!(2\u0026e),writable:!(4\u0026e),value:t}}},function(e,t,a){\""use strict\"";var s=a(21),n=a(36),r=a(37),o=a(38),i=a(25),l=Object.assign;e.exports=!l||a(16)(function(){var e={},t={},a=Symbol(),s=\""abcdefghijklmnopqrst\"";return e[a]=7,s.split(\""\"").forEach(function(e){t[e]=e}),7!=l({},e)[a]||Object.keys(l({},t)).join(\""\"")!=s})?function(e,t){for(var a=o(e),l=arguments.length,c=1,f=n.f,u=r.f;l\u003ec;)for(var d,p=i(arguments[c++]),_=f?s(p).concat(f(p)):s(p),h=_.length,m=0;h\u003em;)u.call(p,d=_[m++])\u0026\u0026(a[d]=p[d]);return a}:l},function(e,t,a){var s=a(22),n=a(35);e.exports=Object.keys||function(e){return s(e,n)}},function(e,t,a){var s=a(23),n=a(24),r=a(28)(!1),o=a(32)(\""IE_PROTO\"");e.exports=function(e,t){var a,i=n(e),l=0,c=[];for(a in i)a!=o\u0026\u0026s(i,a)\u0026\u0026c.push(a);for(;t.length\u003el;)s(i,a=t[l++])\u0026\u0026(~r(c,a)||c.push(a));return c}},function(e,t){var a={}.hasOwnProperty;e.exports=function(e,t){return a.call(e,t)}},function(e,t,a){var s=a(25),n=a(27);e.exports=function(e){return s(n(e))}},function(e,t,a){var s=a(26);e.exports=Object(\""z\"").propertyIsEnumerable(0)?Object:function(e){return\""String\""==s(e)?e.split(\""\""):Object(e)}},function(e,t){var a={}.toString;e.exports=function(e){return a.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\""Can't call method on  \""+e);return e}},function(e,t,a){var s=a(24),n=a(29),r=a(31);e.exports=function(e){return function(t,a,o){var i,l=s(t),c=n(l.length),f=r(o,c);if(e\u0026\u0026a!=a){for(;c\u003ef;)if(i=l[f++],i!=i)return!0}else for(;c\u003ef;f++)if((e||f in l)\u0026\u0026l[f]===a)return e||f||0;return!e\u0026\u0026-1}}},function(e,t,a){var s=a(30),n=Math.min;e.exports=function(e){return e\u003e0?n(s(e),9007199254740991):0}},function(e,t){var a=Math.ceil,s=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e\u003e0?s:a)(e)}},function(e,t,a){var s=a(30),n=Math.max,r=Math.min;e.exports=function(e,t){return e=s(e),0\u003ee?n(e+t,0):r(e,t)}},function(e,t,a){var s=a(33)(\""keys\""),n=a(34);e.exports=function(e){return s[e]||(s[e]=n(e))}},function(e,t,a){var s=a(6),n=\""__core-js_shared__\"",r=s[n]||(s[n]={});e.exports=function(e){return r[e]||(r[e]={})}},function(e,t){var a=0,s=Math.random();e.exports=function(e){return\""Symbol(\"".concat(void 0===e?\""\"":e,\"")_\"",(++a+s).toString(36))}},function(e,t){e.exports=\""constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\"".split(\"",\"")},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,a){var s=a(27);e.exports=function(e){return Object(s(e))}},function(e,t){e.exports=require(\""react\"")},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}function n(e){var t=r(e);return t?e.isServer?o(t).then(function(e){return(0,l[\""default\""])({},e,{token:t})}):f[\""default\""].resolve({token:t}):f[\""default\""].resolve({})}function r(){var e=arguments.length\u003c=0||void 0===arguments[0]?{}:arguments[0];if(e.req){var t=a(85).parse,s=e.req.headers.cookie;if(!s)return;var n=t(s),r=n.token;return r}var o=a(86),i=o.get(),l=i.token;return l}function o(e){return fetch(h+\""/api/www/user\"",{headers:{Authorization:\""Bearer \""+e}}).then(function(e){if(e.ok)return e.json();if(403===e.status)return{};var t=new Error(e.statusText);throw t.res=e,t})}Object.defineProperty(t,\""__esModule\"",{value:!0});var i=a(1),l=s(i),c=a(41),f=s(c);t[\""default\""]=n,t.getToken=r,t.getUser=o,a(77);var u=a(79),d=s(u),p=a(84),_=s(p);d[\""default\""].polyfill();var h=_[\""default\""].API_URL||\""https://zeit.co\""},function(e,t,a){e.exports={\""default\"":a(42),__esModule:!0}},function(e,t,a){a(43),a(44),a(57),a(61),e.exports=a(7).Promise},function(e,t){},function(e,t,a){\""use strict\"";var s=a(45)(!0);a(46)(String,\""String\"",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,a=this._i;return a\u003e=t.length?{value:void 0,done:!0}:(e=s(t,a),this._i+=e.length,{value:e,done:!1})})},function(e,t,a){var s=a(30),n=a(27);e.exports=function(e){return function(t,a){var r,o,i=String(n(t)),l=s(a),c=i.length;return 0\u003el||l\u003e=c?e?\""\"":void 0:(r=i.charCodeAt(l),55296\u003er||r\u003e56319||l+1===c||(o=i.charCodeAt(l+1))\u003c56320||o\u003e57343?e?i.charAt(l):r:e?i.slice(l,l+2):(r-55296\u003c\u003c10)+(o-56320)+65536)}}},function(e,t,a){\""use strict\"";var s=a(47),n=a(5),r=a(48),o=a(10),i=a(23),l=a(49),c=a(50),f=a(54),u=a(56),d=a(55)(\""iterator\""),p=!([].keys\u0026\u0026\""next\""in[].keys()),_=\""@@iterator\"",h=\""keys\"",m=\""values\"",g=function(){return this};e.exports=function(e,t,a,y,v,x,b){c(a,t,y);var w,E,C,N=function(e){if(!p\u0026\u0026e in P)return P[e];switch(e){case h:return function(){return new a(this,e)};case m:return function(){return new a(this,e)}}return function(){return new a(this,e)}},k=t+\"" Iterator\"",M=v==m,O=!1,P=e.prototype,T=P[d]||P[_]||v\u0026\u0026P[v],j=T||N(v),S=v?M?N(\""entries\""):j:void 0,L=\""Array\""==t?P.entries||T:T;if(L\u0026\u0026(C=u(L.call(new e)),C!==Object.prototype\u0026\u0026(f(C,k,!0),s||i(C,d)||o(C,d,g))),M\u0026\u0026T\u0026\u0026T.name!==m\u0026\u0026(O=!0,j=function(){return T.call(this)}),s\u0026\u0026!b||!p\u0026\u0026!O\u0026\u0026P[d]||o(P,d,j),l[t]=j,l[k]=g,v)if(w={values:M?j:N(m),keys:x?j:N(h),entries:S},b)for(E in w)E in P||r(P,E,w[E]);else n(n.P+n.F*(p||O),t,w);return w}},function(e,t){e.exports=!0},function(e,t,a){e.exports=a(10)},function(e,t){e.exports={}},function(e,t,a){\""use strict\"";var s=a(51),n=a(19),r=a(54),o={};a(10)(o,a(55)(\""iterator\""),function(){return this}),e.exports=function(e,t,a){e.prototype=s(o,{next:n(1,a)}),r(e,t+\"" Iterator\"")}},function(e,t,a){var s=a(12),n=a(52),r=a(35),o=a(32)(\""IE_PROTO\""),i=function(){},l=\""prototype\"",c=function(){var e,t=a(17)(\""iframe\""),s=r.length,n=\""\u003e\"";for(t.style.display=\""none\"",a(53).appendChild(t),t.src=\""javascript:\"",e=t.contentWindow.document,e.open(),e.write(\""\u003cscript\u003edocument.F=Object\u003c/script\""+n),e.close(),c=e.F;s--;)delete c[l][r[s]];return c()};e.exports=Object.create||function(e,t){var a;return null!==e?(i[l]=s(e),a=new i,i[l]=null,a[o]=e):a=c(),void 0===t?a:n(a,t)}},function(e,t,a){var s=a(11),n=a(12),r=a(21);e.exports=a(15)?Object.defineProperties:function(e,t){n(e);for(var a,o=r(t),i=o.length,l=0;i\u003el;)s.f(e,a=o[l++],t[a]);return e}},function(e,t,a){e.exports=a(6).document\u0026\u0026document.documentElement},function(e,t,a){var s=a(11).f,n=a(23),r=a(55)(\""toStringTag\"");e.exports=function(e,t,a){e\u0026\u0026!n(e=a?e:e.prototype,r)\u0026\u0026s(e,r,{configurable:!0,value:t})}},function(e,t,a){var s=a(33)(\""wks\""),n=a(34),r=a(6).Symbol,o=\""function\""==typeof r,i=e.exports=function(e){return s[e]||(s[e]=o\u0026\u0026r[e]||(o?r:n)(\""Symbol.\""+e))};i.store=s},function(e,t,a){var s=a(23),n=a(38),r=a(32)(\""IE_PROTO\""),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=n(e),s(e,r)?e[r]:\""function\""==typeof e.constructor\u0026\u0026e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t,a){a(58);for(var s=a(6),n=a(10),r=a(49),o=a(55)(\""toStringTag\""),i=[\""NodeList\"",\""DOMTokenList\"",\""MediaList\"",\""StyleSheetList\"",\""CSSRuleList\""],l=0;5\u003el;l++){var c=i[l],f=s[c],u=f\u0026\u0026f.prototype;u\u0026\u0026!u[o]\u0026\u0026n(u,o,c),r[c]=r.Array}},function(e,t,a){\""use strict\"";var s=a(59),n=a(60),r=a(49),o=a(24);e.exports=a(46)(Array,\""Array\"",function(e,t){this._t=o(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,a=this._i++;return!e||a\u003e=e.length?(this._t=void 0,n(1)):\""keys\""==t?n(0,a):\""values\""==t?n(0,e[a]):n(0,[a,e[a]])},\""values\""),r.Arguments=r.Array,s(\""keys\""),s(\""values\""),s(\""entries\"")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,a){\""use strict\"";var s,n,r,o=a(47),i=a(6),l=a(8),c=a(62),f=a(5),u=a(13),d=(a(12),a(9)),p=a(63),_=a(64),h=(a(68).set,a(70)),m=a(71).set,g=a(73)(),y=\""Promise\"",v=i.TypeError,x=i.process,b=i[y],x=i.process,w=\""process\""==c(x),E=function(){},C=!!function(){try{var e=b.resolve(1),t=(e.constructor={})[a(55)(\""species\"")]=function(e){e(E,E)};return(w||\""function\""==typeof PromiseRejectionEvent)\u0026\u0026e.then(E)instanceof t}catch(s){}}(),N=function(e,t){return e===t||e===b\u0026\u0026t===r},k=function(e){var t;return u(e)\u0026\u0026\""function\""==typeof(t=e.then)?t:!1},M=function(e){return N(b,e)?new O(e):new n(e)},O=n=function(e){var t,a;this.promise=new e(function(e,s){if(void 0!==t||void 0!==a)throw v(\""Bad Promise constructor\"");t=e,a=s}),this.resolve=d(t),this.reject=d(a)},P=function(e){try{e()}catch(t){return{error:t}}},T=function(e,t){if(!e._n){e._n=!0;var a=e._c;g(function(){for(var s=e._v,n=1==e._s,r=0,o=function(t){var a,r,o=n?t.ok:t.fail,i=t.resolve,l=t.reject,c=t.domain;try{o?(n||(2==e._h\u0026\u0026L(e),e._h=1),o===!0?a=s:(c\u0026\u0026c.enter(),a=o(s),c\u0026\u0026c.exit()),a===t.promise?l(v(\""Promise-chain cycle\"")):(r=k(a))?r.call(a,i,l):i(a)):l(s)}catch(f){l(f)}};a.length\u003er;)o(a[r++]);e._c=[],e._n=!1,t\u0026\u0026!e._h\u0026\u0026j(e)})}},j=function(e){m.call(i,function(){var t,a,s,n=e._v;if(S(e)\u0026\u0026(t=P(function(){w?x.emit(\""unhandledRejection\"",n,e):(a=i.onunhandledrejection)?a({promise:e,reason:n}):(s=i.console)\u0026\u0026s.error\u0026\u0026s.error(\""Unhandled promise rejection\"",n)}),e._h=w||S(e)?2:1),e._a=void 0,t)throw t.error})},S=function(e){if(1==e._h)return!1;for(var t,a=e._a||e._c,s=0;a.length\u003es;)if(t=a[s++],t.fail||!S(t.promise))return!1;return!0},L=function(e){m.call(i,function(){var t;w?x.emit(\""rejectionHandled\"",e):(t=i.onrejectionhandled)\u0026\u0026t({promise:e,reason:e._v})})},A=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),T(t,!0))},I=function(e){var t,a=this;if(!a._d){a._d=!0,a=a._w||a;try{if(a===e)throw v(\""Promise can't be resolved itself\"");(t=k(e))?g(function(){var s={_w:a,_d:!1};try{t.call(e,l(I,s,1),l(A,s,1))}catch(n){A.call(s,n)}}):(a._v=e,a._s=1,T(a,!1))}catch(s){A.call({_w:a,_d:!1},s)}}};C||(b=function(e){p(this,b,y,\""_h\""),d(e),s.call(this);try{e(l(I,this,1),l(A,this,1))}catch(t){A.call(this,t)}},s=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},s.prototype=a(74)(b.prototype,{then:function(e,t){var a=M(h(this,b));return a.ok=\""function\""==typeof e?e:!0,a.fail=\""function\""==typeof t\u0026\u0026t,a.domain=w?x.domain:void 0,this._c.push(a),this._a\u0026\u0026this._a.push(a),this._s\u0026\u0026T(this,!1),a.promise},\""catch\"":function(e){return this.then(void 0,e)}}),O=function(){var e=new s;this.promise=e,this.resolve=l(I,e,1),this.reject=l(A,e,1)}),f(f.G+f.W+f.F*!C,{Promise:b}),a(54)(b,y),a(75)(y),r=a(7)[y],f(f.S+f.F*!C,y,{reject:function(e){var t=M(this),a=t.reject;return a(e),t.promise}}),f(f.S+f.F*(o||!C),y,{resolve:function(e){if(e instanceof b\u0026\u0026N(e.constructor,this))return e;var t=M(this),a=t.resolve;return a(e),t.promise}}),f(f.S+f.F*!(C\u0026\u0026a(76)(function(e){b.all(e)[\""catch\""](E)})),y,{all:function(e){var t=this,a=M(t),s=a.resolve,n=a.reject,r=P(function(){var a=[],r=0,o=1;_(e,!1,function(e){var i=r++,l=!1;a.push(void 0),o++,t.resolve(e).then(function(e){l||(l=!0,a[i]=e,--o||s(a))},n)}),--o||s(a)});return r\u0026\u0026n(r.error),a.promise},race:function(e){var t=this,a=M(t),s=a.reject,n=P(function(){_(e,!1,function(e){t.resolve(e).then(a.resolve,s)})});return n\u0026\u0026s(n.error),a.promise}})},function(e,t,a){var s=a(26),n=a(55)(\""toStringTag\""),r=\""Arguments\""==s(function(){return arguments}()),o=function(e,t){try{return e[t]}catch(a){}};e.exports=function(e){var t,a,i;return void 0===e?\""Undefined\"":null===e?\""Null\"":\""string\""==typeof(a=o(t=Object(e),n))?a:r?s(t):\""Object\""==(i=s(t))\u0026\u0026\""function\""==typeof t.callee?\""Arguments\"":i}},function(e,t){e.exports=function(e,t,a,s){if(!(e instanceof t)||void 0!==s\u0026\u0026s in e)throw TypeError(a+\"": incorrect invocation!\"");return e}},function(e,t,a){var s=a(8),n=a(65),r=a(66),o=a(12),i=a(29),l=a(67),c={},f={},t=e.exports=function(e,t,a,u,d){var p,_,h,m,g=d?function(){return e}:l(e),y=s(a,u,t?2:1),v=0;if(\""function\""!=typeof g)throw TypeError(e+\"" is not iterable!\"");if(r(g)){for(p=i(e.length);p\u003ev;v++)if(m=t?y(o(_=e[v])[0],_[1]):y(e[v]),m===c||m===f)return m}else for(h=g.call(e);!(_=h.next()).done;)if(m=n(h,y,_.value,t),m===c||m===f)return m};t.BREAK=c,t.RETURN=f},function(e,t,a){var s=a(12);e.exports=function(e,t,a,n){try{return n?t(s(a)[0],a[1]):t(a)}catch(r){var o=e[\""return\""];throw void 0!==o\u0026\u0026s(o.call(e)),r}}},function(e,t,a){var s=a(49),n=a(55)(\""iterator\""),r=Array.prototype;e.exports=function(e){return void 0!==e\u0026\u0026(s.Array===e||r[n]===e)}},function(e,t,a){var s=a(62),n=a(55)(\""iterator\""),r=a(49);e.exports=a(7).getIteratorMethod=function(e){return void 0!=e?e[n]||e[\""@@iterator\""]||r[s(e)]:void 0}},function(e,t,a){var s=a(13),n=a(12),r=function(e,t){if(n(e),!s(t)\u0026\u0026null!==t)throw TypeError(t+\"": can't set as prototype!\"")};e.exports={set:Object.setPrototypeOf||(\""__proto__\""in{}?function(e,t,s){try{s=a(8)(Function.call,a(69).f(Object.prototype,\""__proto__\"").set,2),s(e,[]),t=!(e instanceof Array)}catch(n){t=!0}return function(e,a){return r(e,a),t?e.__proto__=a:s(e,a),e}}({},!1):void 0),check:r}},function(e,t,a){var s=a(37),n=a(19),r=a(24),o=a(18),i=a(23),l=a(14),c=Object.getOwnPropertyDescriptor;t.f=a(15)?c:function(e,t){if(e=r(e),t=o(t,!0),l)try{return c(e,t)}catch(a){}return i(e,t)?n(!s.f.call(e,t),e[t]):void 0}},function(e,t,a){var s=a(12),n=a(9),r=a(55)(\""species\"");e.exports=function(e,t){var a,o=s(e).constructor;return void 0===o||void 0==(a=s(o)[r])?t:n(a)}},function(e,t,a){var s,n,r,o=a(8),i=a(72),l=a(53),c=a(17),f=a(6),u=f.process,d=f.setImmediate,p=f.clearImmediate,_=f.MessageChannel,h=0,m={},g=\""onreadystatechange\"",y=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},v=function(e){y.call(e.data)};d\u0026\u0026p||(d=function(e){for(var t=[],a=1;arguments.length\u003ea;)t.push(arguments[a++]);return m[++h]=function(){i(\""function\""==typeof e?e:Function(e),t)},s(h),h},p=function(e){delete m[e]},\""process\""==a(26)(u)?s=function(e){u.nextTick(o(y,e,1))}:_?(n=new _,r=n.port2,n.port1.onmessage=v,s=o(r.postMessage,r,1)):f.addEventListener\u0026\u0026\""function\""==typeof postMessage\u0026\u0026!f.importScripts?(s=function(e){f.postMessage(e+\""\"",\""*\"")},f.addEventListener(\""message\"",v,!1)):s=g in c(\""script\"")?function(e){l.appendChild(c(\""script\""))[g]=function(){l.removeChild(this),y.call(e)}}:function(e){setTimeout(o(y,e,1),0)}),e.exports={set:d,clear:p}},function(e,t){e.exports=function(e,t,a){var s=void 0===a;switch(t.length){case 0:return s?e():e.call(a);case 1:return s?e(t[0]):e.call(a,t[0]);case 2:return s?e(t[0],t[1]):e.call(a,t[0],t[1]);case 3:return s?e(t[0],t[1],t[2]):e.call(a,t[0],t[1],t[2]);case 4:return s?e(t[0],t[1],t[2],t[3]):e.call(a,t[0],t[1],t[2],t[3])}return e.apply(a,t)}},function(e,t,a){var s=a(6),n=a(71).set,r=s.MutationObserver||s.WebKitMutationObserver,o=s.process,i=s.Promise,l=\""process\""==a(26)(o);e.exports=function(){var e,t,a,c=function(){var s,n;for(l\u0026\u0026(s=o.domain)\u0026\u0026s.exit();e;){n=e.fn,e=e.next;try{n()}catch(r){throw e?a():t=void 0,\nr}}t=void 0,s\u0026\u0026s.enter()};if(l)a=function(){o.nextTick(c)};else if(r){var f=!0,u=document.createTextNode(\""\"");new r(c).observe(u,{characterData:!0}),a=function(){u.data=f=!f}}else if(i\u0026\u0026i.resolve){var d=i.resolve();a=function(){d.then(c)}}else a=function(){n.call(s,c)};return function(s){var n={fn:s,next:void 0};t\u0026\u0026(t.next=n),e||(e=n,a()),t=n}}},function(e,t,a){var s=a(10);e.exports=function(e,t,a){for(var n in t)a\u0026\u0026e[n]?e[n]=t[n]:s(e,n,t[n]);return e}},function(e,t,a){\""use strict\"";var s=a(6),n=a(7),r=a(11),o=a(15),i=a(55)(\""species\"");e.exports=function(e){var t=\""function\""==typeof n[e]?n[e]:s[e];o\u0026\u0026t\u0026\u0026!t[i]\u0026\u0026r.f(t,i,{configurable:!0,get:function(){return this}})}},function(e,t,a){var s=a(55)(\""iterator\""),n=!1;try{var r=[7][s]();r[\""return\""]=function(){n=!0},Array.from(r,function(){throw 2})}catch(o){}e.exports=function(e,t){if(!t\u0026\u0026!n)return!1;var a=!1;try{var r=[7],o=r[s]();o.next=function(){return{done:a=!0}},r[s]=function(){return o},e(r)}catch(i){}return a}},function(e,t,a){a(78),e.exports=self.fetch.bind(self)},function(e,t){!function(e){\""use strict\"";function t(e){if(\""string\""!=typeof e\u0026\u0026(e=String(e)),/[^a-z0-9\\-#$%\u0026'*+.\\^_`|~]/i.test(e))throw new TypeError(\""Invalid character in header field name\"");return e.toLowerCase()}function a(e){return\""string\""!=typeof e\u0026\u0026(e=String(e)),e}function s(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return h.iterable\u0026\u0026(t[Symbol.iterator]=function(){return t}),t}function n(e){this.map={},e instanceof n?e.forEach(function(e,t){this.append(t,e)},this):e\u0026\u0026Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function r(e){return e.bodyUsed?Promise.reject(new TypeError(\""Already read\"")):void(e.bodyUsed=!0)}function o(e){return new Promise(function(t,a){e.onload=function(){t(e.result)},e.onerror=function(){a(e.error)}})}function i(e){var t=new FileReader;return t.readAsArrayBuffer(e),o(t)}function l(e){var t=new FileReader;return t.readAsText(e),o(t)}function c(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,\""string\""==typeof e)this._bodyText=e;else if(h.blob\u0026\u0026Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(h.formData\u0026\u0026FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(h.searchParams\u0026\u0026URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(e){if(!h.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e))throw new Error(\""unsupported BodyInit type\"")}else this._bodyText=\""\"";this.headers.get(\""content-type\"")||(\""string\""==typeof e?this.headers.set(\""content-type\"",\""text/plain;charset=UTF-8\""):this._bodyBlob\u0026\u0026this._bodyBlob.type?this.headers.set(\""content-type\"",this._bodyBlob.type):h.searchParams\u0026\u0026URLSearchParams.prototype.isPrototypeOf(e)\u0026\u0026this.headers.set(\""content-type\"",\""application/x-www-form-urlencoded;charset=UTF-8\""))},h.blob?(this.blob=function(){var e=r(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyFormData)throw new Error(\""could not read FormData body as blob\"");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this.blob().then(i)},this.text=function(){var e=r(this);if(e)return e;if(this._bodyBlob)return l(this._bodyBlob);if(this._bodyFormData)throw new Error(\""could not read FormData body as text\"");return Promise.resolve(this._bodyText)}):this.text=function(){var e=r(this);return e?e:Promise.resolve(this._bodyText)},h.formData\u0026\u0026(this.formData=function(){return this.text().then(d)}),this.json=function(){return this.text().then(JSON.parse)},this}function f(e){var t=e.toUpperCase();return m.indexOf(t)\u003e-1?t:e}function u(e,t){t=t||{};var a=t.body;if(u.prototype.isPrototypeOf(e)){if(e.bodyUsed)throw new TypeError(\""Already read\"");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new n(e.headers)),this.method=e.method,this.mode=e.mode,a||(a=e._bodyInit,e.bodyUsed=!0)}else this.url=e;if(this.credentials=t.credentials||this.credentials||\""omit\"",!t.headers\u0026\u0026this.headers||(this.headers=new n(t.headers)),this.method=f(t.method||this.method||\""GET\""),this.mode=t.mode||this.mode||null,this.referrer=null,(\""GET\""===this.method||\""HEAD\""===this.method)\u0026\u0026a)throw new TypeError(\""Body not allowed for GET or HEAD requests\"");this._initBody(a)}function d(e){var t=new FormData;return e.trim().split(\""\u0026\"").forEach(function(e){if(e){var a=e.split(\""=\""),s=a.shift().replace(/\\+/g,\"" \""),n=a.join(\""=\"").replace(/\\+/g,\"" \"");t.append(decodeURIComponent(s),decodeURIComponent(n))}}),t}function p(e){var t=new n,a=(e.getAllResponseHeaders()||\""\"").trim().split(\""\\n\"");return a.forEach(function(e){var a=e.trim().split(\"":\""),s=a.shift().trim(),n=a.join(\"":\"").trim();t.append(s,n)}),t}function _(e,t){t||(t={}),this.type=\""default\"",this.status=t.status,this.ok=this.status\u003e=200\u0026\u0026this.status\u003c300,this.statusText=t.statusText,this.headers=t.headers instanceof n?t.headers:new n(t.headers),this.url=t.url||\""\"",this._initBody(e)}if(!e.fetch){var h={searchParams:\""URLSearchParams\""in e,iterable:\""Symbol\""in e\u0026\u0026\""iterator\""in Symbol,blob:\""FileReader\""in e\u0026\u0026\""Blob\""in e\u0026\u0026function(){try{return new Blob,!0}catch(e){return!1}}(),formData:\""FormData\""in e,arrayBuffer:\""ArrayBuffer\""in e};n.prototype.append=function(e,s){e=t(e),s=a(s);var n=this.map[e];n||(n=[],this.map[e]=n),n.push(s)},n.prototype[\""delete\""]=function(e){delete this.map[t(e)]},n.prototype.get=function(e){var a=this.map[t(e)];return a?a[0]:null},n.prototype.getAll=function(e){return this.map[t(e)]||[]},n.prototype.has=function(e){return this.map.hasOwnProperty(t(e))},n.prototype.set=function(e,s){this.map[t(e)]=[a(s)]},n.prototype.forEach=function(e,t){Object.getOwnPropertyNames(this.map).forEach(function(a){this.map[a].forEach(function(s){e.call(t,s,a,this)},this)},this)},n.prototype.keys=function(){var e=[];return this.forEach(function(t,a){e.push(a)}),s(e)},n.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),s(e)},n.prototype.entries=function(){var e=[];return this.forEach(function(t,a){e.push([a,t])}),s(e)},h.iterable\u0026\u0026(n.prototype[Symbol.iterator]=n.prototype.entries);var m=[\""DELETE\"",\""GET\"",\""HEAD\"",\""OPTIONS\"",\""POST\"",\""PUT\""];u.prototype.clone=function(){return new u(this)},c.call(u.prototype),c.call(_.prototype),_.prototype.clone=function(){return new _(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new n(this.headers),url:this.url})},_.error=function(){var e=new _(null,{status:0,statusText:\""\""});return e.type=\""error\"",e};var g=[301,302,303,307,308];_.redirect=function(e,t){if(-1===g.indexOf(t))throw new RangeError(\""Invalid status code\"");return new _(null,{status:t,headers:{location:e}})},e.Headers=n,e.Request=u,e.Response=_,e.fetch=function(e,t){return new Promise(function(a,s){function n(){return\""responseURL\""in o?o.responseURL:/^X-Request-URL:/m.test(o.getAllResponseHeaders())?o.getResponseHeader(\""X-Request-URL\""):void 0}var r;r=u.prototype.isPrototypeOf(e)\u0026\u0026!t?e:new u(e,t);var o=new XMLHttpRequest;o.onload=function(){var e={status:o.status,statusText:o.statusText,headers:p(o),url:n()},t=\""response\""in o?o.response:o.responseText;a(new _(t,e))},o.onerror=function(){s(new TypeError(\""Network request failed\""))},o.ontimeout=function(){s(new TypeError(\""Network request failed\""))},o.open(r.method,r.url,!0),\""include\""===r.credentials\u0026\u0026(o.withCredentials=!0),\""responseType\""in o\u0026\u0026h.blob\u0026\u0026(o.responseType=\""blob\""),r.headers.forEach(function(e,t){o.setRequestHeader(t,e)}),o.send(\""undefined\""==typeof r._bodyInit?null:r._bodyInit)})},e.fetch.polyfill=!0}}(\""undefined\""!=typeof self?self:this)},function(e,t,a){var s;(function(e,n,r){/*!\n\t * @overview es6-promise - a tiny implementation of Promises/A+.\n\t * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n\t * @license   Licensed under MIT license\n\t *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n\t * @version   3.2.1\n\t */\n(function(){\""use strict\"";function o(e){return\""function\""==typeof e||\""object\""==typeof e\u0026\u0026null!==e}function i(e){return\""function\""==typeof e}function l(e){K=e}function c(e){ee=e}function f(){return function(){e.nextTick(h)}}function u(){return function(){Y(h)}}function d(){var e=0,t=new se(h),a=document.createTextNode(\""\"");return t.observe(a,{characterData:!0}),function(){a.data=e=++e%2}}function p(){var e=new MessageChannel;return e.port1.onmessage=h,function(){e.port2.postMessage(0)}}function _(){return function(){setTimeout(h,1)}}function h(){for(var e=0;Q\u003ee;e+=2){var t=oe[e],a=oe[e+1];t(a),oe[e]=void 0,oe[e+1]=void 0}Q=0}function m(){try{var e=a(82);return Y=e.runOnLoop||e.runOnContext,u()}catch(t){return _()}}function g(e,t){var a=this,s=new this.constructor(v);void 0===s[ce]\u0026\u0026D(s);var n=a._state;if(n){var r=arguments[n-1];ee(function(){I(n,s,r,a._result)})}else j(a,s,e,t);return s}function y(e){var t=this;if(e\u0026\u0026\""object\""==typeof e\u0026\u0026e.constructor===t)return e;var a=new t(v);return M(a,e),a}function v(){}function x(){return new TypeError(\""You cannot resolve a promise with itself\"")}function b(){return new TypeError(\""A promises callback cannot return that same promise.\"")}function w(e){try{return e.then}catch(t){return pe.error=t,pe}}function E(e,t,a,s){try{e.call(t,a,s)}catch(n){return n}}function C(e,t,a){ee(function(e){var s=!1,n=E(a,t,function(a){s||(s=!0,t!==a?M(e,a):P(e,a))},function(t){s||(s=!0,T(e,t))},\""Settle: \""+(e._label||\"" unknown promise\""));!s\u0026\u0026n\u0026\u0026(s=!0,T(e,n))},e)}function N(e,t){t._state===ue?P(e,t._result):t._state===de?T(e,t._result):j(t,void 0,function(t){M(e,t)},function(t){T(e,t)})}function k(e,t,a){t.constructor===e.constructor\u0026\u0026a===ie\u0026\u0026constructor.resolve===le?N(e,t):a===pe?T(e,pe.error):void 0===a?P(e,t):i(a)?C(e,t,a):P(e,t)}function M(e,t){e===t?T(e,x()):o(t)?k(e,t,w(t)):P(e,t)}function O(e){e._onerror\u0026\u0026e._onerror(e._result),S(e)}function P(e,t){e._state===fe\u0026\u0026(e._result=t,e._state=ue,0!==e._subscribers.length\u0026\u0026ee(S,e))}function T(e,t){e._state===fe\u0026\u0026(e._state=de,e._result=t,ee(O,e))}function j(e,t,a,s){var n=e._subscribers,r=n.length;e._onerror=null,n[r]=t,n[r+ue]=a,n[r+de]=s,0===r\u0026\u0026e._state\u0026\u0026ee(S,e)}function S(e){var t=e._subscribers,a=e._state;if(0!==t.length){for(var s,n,r=e._result,o=0;o\u003ct.length;o+=3)s=t[o],n=t[o+a],s?I(a,s,n,r):n(r);e._subscribers.length=0}}function L(){this.error=null}function A(e,t){try{return e(t)}catch(a){return _e.error=a,_e}}function I(e,t,a,s){var n,r,o,l,c=i(a);if(c){if(n=A(a,s),n===_e?(l=!0,r=n.error,n=null):o=!0,t===n)return void T(t,b())}else n=s,o=!0;t._state!==fe||(c\u0026\u0026o?M(t,n):l?T(t,r):e===ue?P(t,n):e===de\u0026\u0026T(t,n))}function z(e,t){try{t(function(t){M(e,t)},function(t){T(e,t)})}catch(a){T(e,a)}}function U(){return he++}function D(e){e[ce]=he++,e._state=void 0,e._result=void 0,e._subscribers=[]}function F(e){return new xe(this,e).promise}function R(e){var t=this;return new t($(e)?function(a,s){for(var n=e.length,r=0;n\u003er;r++)t.resolve(e[r]).then(a,s)}:function(e,t){t(new TypeError(\""You must pass an array to race.\""))})}function H(e){var t=this,a=new t(v);return T(a,e),a}function B(){throw new TypeError(\""You must pass a resolver function as the first argument to the promise constructor\"")}function q(){throw new TypeError(\""Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\"")}function W(e){this[ce]=U(),this._result=this._state=void 0,this._subscribers=[],v!==e\u0026\u0026(\""function\""!=typeof e\u0026\u0026B(),this instanceof W?z(this,e):q())}function J(e,t){this._instanceConstructor=e,this.promise=new e(v),this.promise[ce]||D(this.promise),$(t)?(this._input=t,this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?P(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining\u0026\u0026P(this.promise,this._result))):T(this.promise,G())}function G(){return new Error(\""Array Methods must be provided an Array\"")}function Z(){var e;if(\""undefined\""!=typeof n)e=n;else if(\""undefined\""!=typeof self)e=self;else try{e=Function(\""return this\"")()}catch(t){throw new Error(\""polyfill failed because global object is unavailable in this environment\"")}var a=e.Promise;a\u0026\u0026\""[object Promise]\""===Object.prototype.toString.call(a.resolve())\u0026\u0026!a.cast||(e.Promise=ve)}var V;V=Array.isArray?Array.isArray:function(e){return\""[object Array]\""===Object.prototype.toString.call(e)};var Y,K,X,$=V,Q=0,ee=function(e,t){oe[Q]=e,oe[Q+1]=t,Q+=2,2===Q\u0026\u0026(K?K(h):X())},te=\""undefined\""!=typeof window?window:void 0,ae=te||{},se=ae.MutationObserver||ae.WebKitMutationObserver,ne=\""undefined\""==typeof self\u0026\u0026\""undefined\""!=typeof e\u0026\u0026\""[object process]\""==={}.toString.call(e),re=\""undefined\""!=typeof Uint8ClampedArray\u0026\u0026\""undefined\""!=typeof importScripts\u0026\u0026\""undefined\""!=typeof MessageChannel,oe=new Array(1e3);X=ne?f():se?d():re?p():void 0===te?m():_();var ie=g,le=y,ce=Math.random().toString(36).substring(16),fe=void 0,ue=1,de=2,pe=new L,_e=new L,he=0,me=F,ge=R,ye=H,ve=W;W.all=me,W.race=ge,W.resolve=le,W.reject=ye,W._setScheduler=l,W._setAsap=c,W._asap=ee,W.prototype={constructor:W,then:ie,\""catch\"":function(e){return this.then(null,e)}};var xe=J;J.prototype._enumerate=function(){for(var e=this.length,t=this._input,a=0;this._state===fe\u0026\u0026e\u003ea;a++)this._eachEntry(t[a],a)},J.prototype._eachEntry=function(e,t){var a=this._instanceConstructor,s=a.resolve;if(s===le){var n=w(e);if(n===ie\u0026\u0026e._state!==fe)this._settledAt(e._state,t,e._result);else if(\""function\""!=typeof n)this._remaining--,this._result[t]=e;else if(a===ve){var r=new a(v);k(r,e,n),this._willSettleAt(r,t)}else this._willSettleAt(new a(function(t){t(e)}),t)}else this._willSettleAt(s(e),t)},J.prototype._settledAt=function(e,t,a){var s=this.promise;s._state===fe\u0026\u0026(this._remaining--,e===de?T(s,a):this._result[t]=a),0===this._remaining\u0026\u0026P(s,this._result)},J.prototype._willSettleAt=function(e,t){var a=this;j(e,void 0,function(e){a._settledAt(ue,t,e)},function(e){a._settledAt(de,t,e)})};var be=Z,we={Promise:ve,polyfill:be};a(83).amd?(s=function(){return we}.call(t,a,t,r),!(void 0!==s\u0026\u0026(r.exports=s))):\""undefined\""!=typeof r\u0026\u0026r.exports?r.exports=we:\""undefined\""!=typeof this\u0026\u0026(this.ES6Promise=we),be()}).call(this)}).call(t,a(80),function(){return this}(),a(81)(e))},function(e,t){function a(){c\u0026\u0026o\u0026\u0026(c=!1,o.length?l=o.concat(l):f=-1,l.length\u0026\u0026s())}function s(){if(!c){var e=setTimeout(a);c=!0;for(var t=l.length;t;){for(o=l,l=[];++f\u003ct;)o\u0026\u0026o[f].run();f=-1,t=l.length}o=null,c=!1,clearTimeout(e)}}function n(e,t){this.fun=e,this.array=t}function r(){}var o,i=e.exports={},l=[],c=!1,f=-1;i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length\u003e1)for(var a=1;a\u003carguments.length;a++)t[a-1]=arguments[a];l.push(new n(e,t)),1!==l.length||c||setTimeout(s,0)},n.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\""browser\"",i.browser=!0,i.env={},i.argv=[],i.version=\""\"",i.versions={},i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error(\""process.binding is not supported\"")},i.cwd=function(){return\""/\""},i.chdir=function(e){throw new Error(\""process.chdir is not supported\"")},i.umask=function(){return 0}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t){},function(e,t){e.exports=function(){throw new Error(\""define cannot be used indirect\"")}},function(e,t,a){(function(e){\""use strict\"";Object.defineProperty(t,\""__esModule\"",{value:!0}),t[\""default\""]=\""undefined\""!=typeof window?window.__ENV__:e.env}).call(t,a(80))},function(e,t){function a(e,t){if(\""string\""!=typeof e)throw new TypeError(\""argument str must be a string\"");var a={},s=t||{},o=e.split(i),l=s.decode||r;return o.forEach(function(e){var t=e.indexOf(\""=\"");if(!(0\u003et)){var s=e.substr(0,t).trim(),r=e.substr(++t,e.length).trim();'\""'==r[0]\u0026\u0026(r=r.slice(1,-1)),void 0==a[s]\u0026\u0026(a[s]=n(r,l))}}),a}function s(e,t,a){var s=a||{},n=s.encode||o;if(!l.test(e))throw new TypeError(\""argument name is invalid\"");var r=n(t);if(r\u0026\u0026!l.test(r))throw new TypeError(\""argument val is invalid\"");var i=[e+\""=\""+r];if(null!=s.maxAge){var c=s.maxAge-0;if(isNaN(c))throw new Error(\""maxAge should be a Number\"");i.push(\""Max-Age=\""+Math.floor(c))}if(s.domain){if(!l.test(s.domain))throw new TypeError(\""option domain is invalid\"");i.push(\""Domain=\""+s.domain)}if(s.path){if(!l.test(s.path))throw new TypeError(\""option path is invalid\"");i.push(\""Path=\""+s.path)}return s.expires\u0026\u0026i.push(\""Expires=\""+s.expires.toUTCString()),s.httpOnly\u0026\u0026i.push(\""HttpOnly\""),s.secure\u0026\u0026i.push(\""Secure\""),s.firstPartyOnly\u0026\u0026i.push(\""First-Party-Only\""),i.join(\""; \"")}function n(e,t){try{return t(e)}catch(a){return e}}/*!\r\n\t * cookie\r\n\t * Copyright(c) 2012-2014 Roman Shtylman\r\n\t * Copyright(c) 2015 Douglas Christopher Wilson\r\n\t * MIT Licensed\r\n\t */\nt.parse=a,t.serialize=s;var r=decodeURIComponent,o=encodeURIComponent,i=/; */,l=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/},function(e,t,a){var s,n;!function(r){s=r,n=\""function\""==typeof s?s.call(t,a,t,e):s,!(void 0!==n\u0026\u0026(e.exports=n))}(function(){function e(){for(var e=0,t={};e\u003carguments.length;e++){var a=arguments[e];for(var s in a)t[s]=a[s]}return t}function t(a){function s(t,n,r){var o;if(\""undefined\""!=typeof document){if(arguments.length\u003e1){if(r=e({path:\""/\""},s.defaults,r),\""number\""==typeof r.expires){var i=new Date;i.setMilliseconds(i.getMilliseconds()+864e5*r.expires),r.expires=i}try{o=JSON.stringify(n),/^[\\{\\[]/.test(o)\u0026\u0026(n=o)}catch(l){}return n=a.write?a.write(n,t):encodeURIComponent(String(n)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),t=encodeURIComponent(String(t)),t=t.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),t=t.replace(/[\\(\\)]/g,escape),document.cookie=[t,\""=\"",n,r.expires\u0026\u0026\""; expires=\""+r.expires.toUTCString(),r.path\u0026\u0026\""; path=\""+r.path,r.domain\u0026\u0026\""; domain=\""+r.domain,r.secure?\""; secure\"":\""\""].join(\""\"")}t||(o={});for(var c=document.cookie?document.cookie.split(\""; \""):[],f=/(%[0-9A-Z]{2})+/g,u=0;u\u003cc.length;u++){var d=c[u].split(\""=\""),p=d[0].replace(f,decodeURIComponent),_=d.slice(1).join(\""=\"");'\""'===_.charAt(0)\u0026\u0026(_=_.slice(1,-1));try{if(_=a.read?a.read(_,p):a(_,p)||_.replace(f,decodeURIComponent),this.json)try{_=JSON.parse(_)}catch(l){}if(t===p){o=_;break}t||(o[p]=_)}catch(l){}}return o}}return s.set=s,s.get=function(e){return s(e)},s.getJSON=function(){return s.apply({json:!0},[].slice.call(arguments))},s.defaults={},s.remove=function(t,a){s(t,\""\"",e(a,{expires:-1}))},s.withConverter=t,s}return t(function(){})})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}function n(e){var t=e.req,s={};if(t){var n=t.headers.cookie;if(n){var r=a(85).parse,o=r(n),i=o.tzOffset;i\u0026\u0026(s.tzOffset=parseInt(i,10))}}return s}function r(){var e=(new Date).getTimezoneOffset();i[\""default\""].set(\""tzOffset\"",e,{expires:365})}Object.defineProperty(t,\""__esModule\"",{value:!0}),t.getTZOffset=n,t.saveTZOffset=r;var o=a(86),i=s(o)},function(e,t){e.exports=require(\""next/component\"")},function(e,t){e.exports=require(\""next/link\"")},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(88),g=s(m),y=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{return h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""zeit-logo \""+(this.props.inverse?\""inverse\"":\""\"")+\"" span_tag\"")},\""▲\"",h[\""default\""].createElement(\""b\"",{className:this._prefixClasses(\""b_tag\"")},\""ZEIT\""))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(g[\""default\""]);y.isolationPrefix=\""__components_zeit_\"",y.style=\"".__components_zeit_zeit-logo{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:14px;display:inline-block;color:#fff}.__components_zeit_zeit-logo .__components_zeit_b_tag{font-size:11px;font-weight:700;display:inline-block;text-indent:4px}.__components_zeit_zeit-logo.__components_zeit_inverse{color:#424242}\"",y.displayName=\""ComponentsZeit\"",t[\""default\""]=y},function(e,t,a){e.exports={\""default\"":a(92),__esModule:!0}},function(e,t,a){a(93),e.exports=a(7).Object.getPrototypeOf},function(e,t,a){var s=a(38),n=a(56);a(94)(\""getPrototypeOf\"",function(){return function(e){return n(s(e))}})},function(e,t,a){var s=a(5),n=a(7),r=a(16);e.exports=function(e,t){var a=(n.Object||{})[e]||Object[e],o={};o[e]=t(a),s(s.S+s.F*r(function(){a(1)}),\""Object\"",o)}},function(e,t){\""use strict\"";t.__esModule=!0,t[\""default\""]=function(e,t){if(!(e instanceof t))throw new TypeError(\""Cannot call a class as a function\"")}},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}t.__esModule=!0;var n=a(97),r=s(n);t[\""default\""]=function(){function e(e,t){for(var a=0;a\u003ct.length;a++){var s=t[a];s.enumerable=s.enumerable||!1,s.configurable=!0,\""value\""in s\u0026\u0026(s.writable=!0),(0,r[\""default\""])(e,s.key,s)}}return function(t,a,s){return a\u0026\u0026e(t.prototype,a),s\u0026\u0026e(t,s),t}}()},function(e,t,a){e.exports={\""default\"":a(98),__esModule:!0}},function(e,t,a){a(99);var s=a(7).Object;e.exports=function(e,t,a){return s.defineProperty(e,t,a)}},function(e,t,a){var s=a(5);s(s.S+s.F*!a(15),\""Object\"",{defineProperty:a(11).f})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}t.__esModule=!0;var n=a(101),r=s(n);t[\""default\""]=function(e,t){if(!e)throw new ReferenceError(\""this hasn't been initialised - super() hasn't been called\"");return!t||\""object\""!==(\""undefined\""==typeof t?\""undefined\"":(0,r[\""default\""])(t))\u0026\u0026\""function\""!=typeof t?e:t}},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}t.__esModule=!0;var n=a(102),r=s(n),o=a(105),i=s(o),l=\""function\""==typeof i[\""default\""]\u0026\u0026\""symbol\""==typeof r[\""default\""]?function(e){return typeof e}:function(e){return e\u0026\u0026\""function\""==typeof i[\""default\""]\u0026\u0026e.constructor===i[\""default\""]?\""symbol\"":typeof e};t[\""default\""]=\""function\""==typeof i[\""default\""]\u0026\u0026\""symbol\""===l(r[\""default\""])?function(e){return\""undefined\""==typeof e?\""undefined\"":l(e)}:function(e){return e\u0026\u0026\""function\""==typeof i[\""default\""]\u0026\u0026e.constructor===i[\""default\""]?\""symbol\"":\""undefined\""==typeof e?\""undefined\"":l(e)}},function(e,t,a){e.exports={\""default\"":a(103),__esModule:!0}},function(e,t,a){a(44),a(57),e.exports=a(104).f(\""iterator\"")},function(e,t,a){t.f=a(55)},function(e,t,a){e.exports={\""default\"":a(106),__esModule:!0}},function(e,t,a){a(107),a(43),a(115),a(116),e.exports=a(7).Symbol},function(e,t,a){\""use strict\"";var s=a(6),n=a(23),r=a(15),o=a(5),i=a(48),l=a(108).KEY,c=a(16),f=a(33),u=a(54),d=a(34),p=a(55),_=a(104),h=a(109),m=a(110),g=a(111),y=a(112),v=a(12),x=a(24),b=a(18),w=a(19),E=a(51),C=a(113),N=a(69),k=a(11),M=a(21),O=N.f,P=k.f,T=C.f,j=s.Symbol,S=s.JSON,L=S\u0026\u0026S.stringify,A=\""prototype\"",I=p(\""_hidden\""),z=p(\""toPrimitive\""),U={}.propertyIsEnumerable,D=f(\""symbol-registry\""),F=f(\""symbols\""),R=f(\""op-symbols\""),H=Object[A],B=\""function\""==typeof j,q=s.QObject,W=!q||!q[A]||!q[A].findChild,J=r\u0026\u0026c(function(){return 7!=E(P({},\""a\"",{get:function(){return P(this,\""a\"",{value:7}).a}})).a})?function(e,t,a){var s=O(H,t);s\u0026\u0026delete H[t],P(e,t,a),s\u0026\u0026e!==H\u0026\u0026P(H,t,s)}:P,G=function(e){var t=F[e]=E(j[A]);return t._k=e,t},Z=B\u0026\u0026\""symbol\""==typeof j.iterator?function(e){return\""symbol\""==typeof e}:function(e){return e instanceof j},V=function(e,t,a){return e===H\u0026\u0026V(R,t,a),v(e),t=b(t,!0),v(a),n(F,t)?(a.enumerable?(n(e,I)\u0026\u0026e[I][t]\u0026\u0026(e[I][t]=!1),a=E(a,{enumerable:w(0,!1)})):(n(e,I)||P(e,I,w(1,{})),e[I][t]=!0),J(e,t,a)):P(e,t,a)},Y=function(e,t){v(e);for(var a,s=g(t=x(t)),n=0,r=s.length;r\u003en;)V(e,a=s[n++],t[a]);return e},K=function(e,t){return void 0===t?E(e):Y(E(e),t)},X=function(e){var t=U.call(this,e=b(e,!0));return this===H\u0026\u0026n(F,e)\u0026\u0026!n(R,e)?!1:t||!n(this,e)||!n(F,e)||n(this,I)\u0026\u0026this[I][e]?t:!0},$=function(e,t){if(e=x(e),t=b(t,!0),e!==H||!n(F,t)||n(R,t)){var a=O(e,t);return!a||!n(F,t)||n(e,I)\u0026\u0026e[I][t]||(a.enumerable=!0),a}},Q=function(e){for(var t,a=T(x(e)),s=[],r=0;a.length\u003er;)n(F,t=a[r++])||t==I||t==l||s.push(t);return s},ee=function(e){for(var t,a=e===H,s=T(a?R:x(e)),r=[],o=0;s.length\u003eo;)n(F,t=s[o++])\u0026\u0026(a?n(H,t):!0)\u0026\u0026r.push(F[t]);return r};B||(j=function(){if(this instanceof j)throw TypeError(\""Symbol is not a constructor!\"");var e=d(arguments.length\u003e0?arguments[0]:void 0),t=function(a){this===H\u0026\u0026t.call(R,a),n(this,I)\u0026\u0026n(this[I],e)\u0026\u0026(this[I][e]=!1),J(this,e,w(1,a))};return r\u0026\u0026W\u0026\u0026J(H,e,{configurable:!0,set:t}),G(e)},i(j[A],\""toString\"",function(){return this._k}),N.f=$,k.f=V,a(114).f=C.f=Q,a(37).f=X,a(36).f=ee,r\u0026\u0026!a(47)\u0026\u0026i(H,\""propertyIsEnumerable\"",X,!0),_.f=function(e){return G(p(e))}),o(o.G+o.W+o.F*!B,{Symbol:j});for(var te=\""hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\"".split(\"",\""),ae=0;te.length\u003eae;)p(te[ae++]);for(var te=M(p.store),ae=0;te.length\u003eae;)h(te[ae++]);o(o.S+o.F*!B,\""Symbol\"",{\""for\"":function(e){return n(D,e+=\""\"")?D[e]:D[e]=j(e)},keyFor:function(e){if(Z(e))return m(D,e);throw TypeError(e+\"" is not a symbol!\"")},useSetter:function(){W=!0},useSimple:function(){W=!1}}),o(o.S+o.F*!B,\""Object\"",{create:K,defineProperty:V,defineProperties:Y,getOwnPropertyDescriptor:$,getOwnPropertyNames:Q,getOwnPropertySymbols:ee}),S\u0026\u0026o(o.S+o.F*(!B||c(function(){var e=j();return\""[null]\""!=L([e])||\""{}\""!=L({a:e})||\""{}\""!=L(Object(e))})),\""JSON\"",{stringify:function(e){if(void 0!==e\u0026\u0026!Z(e)){for(var t,a,s=[e],n=1;arguments.length\u003en;)s.push(arguments[n++]);return t=s[1],\""function\""==typeof t\u0026\u0026(a=t),!a\u0026\u0026y(t)||(t=function(e,t){return a\u0026\u0026(t=a.call(this,e,t)),Z(t)?void 0:t}),s[1]=t,L.apply(S,s)}}}),j[A][z]||a(10)(j[A],z,j[A].valueOf),u(j,\""Symbol\""),u(Math,\""Math\"",!0),u(s.JSON,\""JSON\"",!0)},function(e,t,a){var s=a(34)(\""meta\""),n=a(13),r=a(23),o=a(11).f,i=0,l=Object.isExtensible||function(){return!0},c=!a(16)(function(){return l(Object.preventExtensions({}))}),f=function(e){o(e,s,{value:{i:\""O\""+ ++i,w:{}}})},u=function(e,t){if(!n(e))return\""symbol\""==typeof e?e:(\""string\""==typeof e?\""S\"":\""P\"")+e;if(!r(e,s)){if(!l(e))return\""F\"";if(!t)return\""E\"";f(e)}return e[s].i},d=function(e,t){if(!r(e,s)){if(!l(e))return!0;if(!t)return!1;f(e)}return e[s].w},p=function(e){return c\u0026\u0026_.NEED\u0026\u0026l(e)\u0026\u0026!r(e,s)\u0026\u0026f(e),e},_=e.exports={KEY:s,NEED:!1,fastKey:u,getWeak:d,onFreeze:p}},function(e,t,a){var s=a(6),n=a(7),r=a(47),o=a(104),i=a(11).f;e.exports=function(e){var t=n.Symbol||(n.Symbol=r?{}:s.Symbol||{});\""_\""==e.charAt(0)||e in t||i(t,e,{value:o.f(e)})}},function(e,t,a){var s=a(21),n=a(24);e.exports=function(e,t){for(var a,r=n(e),o=s(r),i=o.length,l=0;i\u003el;)if(r[a=o[l++]]===t)return a}},function(e,t,a){var s=a(21),n=a(36),r=a(37);e.exports=function(e){var t=s(e),a=n.f;if(a)for(var o,i=a(e),l=r.f,c=0;i.length\u003ec;)l.call(e,o=i[c++])\u0026\u0026t.push(o);return t}},function(e,t,a){var s=a(26);e.exports=Array.isArray||function(e){return\""Array\""==s(e)}},function(e,t,a){var s=a(24),n=a(114).f,r={}.toString,o=\""object\""==typeof window\u0026\u0026window\u0026\u0026Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],i=function(e){try{return n(e)}catch(t){return o.slice()}};e.exports.f=function(e){return o\u0026\u0026\""[object Window]\""==r.call(e)?i(e):n(s(e))}},function(e,t,a){var s=a(22),n=a(35).concat(\""length\"",\""prototype\"");t.f=Object.getOwnPropertyNames||function(e){return s(e,n)}},function(e,t,a){a(109)(\""asyncIterator\"")},function(e,t,a){a(109)(\""observable\"")},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}t.__esModule=!0;var n=a(118),r=s(n),o=a(121),i=s(o),l=a(101),c=s(l);t[\""default\""]=function(e,t){if(\""function\""!=typeof t\u0026\u0026null!==t)throw new TypeError(\""Super expression must either be null or a function, not \""+(\""undefined\""==typeof t?\""undefined\"":(0,c[\""default\""])(t)));e.prototype=(0,i[\""default\""])(t\u0026\u0026t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t\u0026\u0026(r[\""default\""]?(0,r[\""default\""])(e,t):e.__proto__=t)}},function(e,t,a){e.exports={\""default\"":a(119),__esModule:!0}},function(e,t,a){a(120),e.exports=a(7).Object.setPrototypeOf},function(e,t,a){var s=a(5);s(s.S,\""Object\"",{setPrototypeOf:a(68).set})},function(e,t,a){e.exports={\""default\"":a(122),__esModule:!0}},function(e,t,a){a(123);var s=a(7).Object;e.exports=function(e,t){return s.create(e,t)}},function(e,t,a){var s=a(5);s(s.S,\""Object\"",{create:a(51)})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(39),r=s(n),o=a(88),i=s(o),l=a(125),c=s(l),f=a(89),u=s(f),d=a(128),p=s(d),_=a(129),h=s(_);t[\""default\""]=i[\""default\""].createClass({isolationPrefix:\""__components_header_\"",style:\"".__components_header_header_tag{max-width:900px;margin:auto;padding:30px 0;position:relative}.__components_header_a_tag{color:#ccc;font-size:11px;text-decoration:none}.__components_header_inverse .__components_header_a_tag{color:#000}.__components_header_a_tag.__components_header_logo{display:block;margin:0 auto;width:39px;height:35px}.__components_header_loading .__components_header_img_tag{-webkit-animation:.5s __components_header_fadeOut,.5s 1.5s __components_header_rotateInitial,2s ease-in 2s infinite __components_header_rotate;animation:.5s __components_header_fadeOut,.5s 1.5s __components_header_rotateInitial,2s ease-in 2s infinite __components_header_rotate;-webkit-animation-delay:1.2s,1.5s,2s;animation-delay:1.2s,1.5s,2s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-direction:alternate;animation-direction:alternate}.__components_header_nav{padding:10px;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.__components_header_nav .__components_header_a_tag{padding:10px}.__components_header_nav .__components_header_a_tag.__components_header_active{font-weight:700}.__components_header_right{right:0}.__components_header_left{left:0}.__components_header_title{margin-bottom:60px;font-size:14px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;font-weight:400;text-rendering:geometricPrecision;text-align:center;color:#fff}.__components_header_title .__components_header_b_tag{font-weight:700}.__components_header_inverse .__components_header_title{color:#000}@-webkit-keyframes __components_header_fadeOut{0%{opacity:1}to{opacity:.7}}@keyframes __components_header_fadeOut{0%{opacity:1}to{opacity:.7}}@-webkit-keyframes __components_header_rotateInitial{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);transform:rotate(15deg)}}@keyframes __components_header_rotateInitial{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(15deg);transform:rotate(15deg)}}@-webkit-keyframes __components_header_rotate{0%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}}@keyframes __components_header_rotate{0%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}30%{-webkit-transform:rotate(0);transform:rotate(0)}70%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}}@media screen and (max-width:730px){.__components_header_header_tag{text-align:center}.__components_header_nav{padding-top:40px;padding-bottom:0;position:relative;-webkit-transform:none;transform:none}}\"",displayName:\""ComponentsHeader\"",constructor:function(e){var t=e.pathname.split(\""/\"").slice(0,2).join(\""/\"");this.state={section:t}},shouldComponentUpdate:function(e,t){return(0,c[\""default\""])(this,e,t)},getAccountBadgeCount:function(){var e=this.props.user;if(e){var t=0;return e.username||t++,e.billingChecked||t++,t}},render:function(){var e=this;try{var t=this.getAccountBadgeCount();return r[\""default\""].createElement(\""div\"",{className:this._prefixClasses((this.props.inverse?\""inverse\"":\""\"")+\"" div_tag\"")},r[\""default\""].createElement(\""header\"",{className:this._prefixClasses(\""header_tag\"")},r[\""default\""].createElement(u[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:this.props.user?\""/account\"":\""/\""},r[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""logo \""+(this.props.loading?\""loading\"":\""\"")+\"" a_tag\""),onContextMenu:this.props.onLogoRightClick},function(){var t=[];return e.props.logo?t.push(r[\""default\""].createElement(\""span\"",{className:e._prefixClasses(\""span_tag\""),key:\""_next0\""},e.props.logo)):t.push(r[\""default\""].createElement(p[\""default\""],{className:e._prefixClasses(\""Logo_tag\""),key:\""_next1\"",inverse:e.props.inverse})),1===t.length?t[0]:t}())),function(){var a=[];return e.props.user\u0026\u0026a.push(r[\""default\""].createElement(\""div\"",{key:\""_next2\"",className:e._prefixClasses(\""nav left div_tag\"")},r[\""default\""].createElement(u[\""default\""],{className:e._prefixClasses(\""Link_tag\""),href:\""/account\""},r[\""default\""].createElement(\""a\"",{className:e._prefixClasses((\""/account\""===e.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/account\"",function(){var a=[];return t\u0026\u0026a.push(r[\""default\""].createElement(h[\""default\""],{className:e._prefixClasses(\""Badge_tag\""),key:\""_next3\"",count:t})),1===a.length?a[0]:a}())))),1===a.length?a[0]:a}(),r[\""default\""].createElement(\""div\"",{className:this._prefixClasses(\""nav right div_tag\"")},function(){var t=[];return e.props.user\u0026\u0026t.push(r[\""default\""].createElement(u[\""default\""],{className:e._prefixClasses(\""Link_tag\""),key:\""_next4\"",href:\""/\""},r[\""default\""].createElement(\""a\"",{className:e._prefixClasses((\""/\""===e.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/\""))),1===t.length?t[0]:t}(),r[\""default\""].createElement(u[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/now\""},r[\""default\""].createElement(\""a\"",{className:this._prefixClasses((\""/now\""===this.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/now\"")),r[\""default\""].createElement(u[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/blog\""},r[\""default\""].createElement(\""a\"",{className:this._prefixClasses((\""/blog\""===this.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/blog\"")),r[\""default\""].createElement(u[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/api\""},r[\""default\""].createElement(\""a\"",{className:this._prefixClasses((\""/api\""===this.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/api\"")),r[\""default\""].createElement(u[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/about\""},r[\""default\""].createElement(\""a\"",{className:this._prefixClasses((\""/about\""===this.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/about\"")),function(){var t=[];return e.props.user||t.push(r[\""default\""].createElement(u[\""default\""],{className:e._prefixClasses(\""Link_tag\""),key:\""_next5\"",href:\""/login\""},r[\""default\""].createElement(\""a\"",{className:e._prefixClasses((\""/login\""===e.state.section?\""active\"":\""\"")+\"" a_tag\"")},\""/login\""))),1===t.length?t[0]:t}())),function(){var t=[];return e.props.title\u0026\u0026t.push(r[\""default\""].createElement(\""h1\"",{key:\""_next6\"",className:e._prefixClasses(\""title h1_tag\"")},function(){var t=[];return e.props.subtitle?(t.push(r[\""default\""].createElement(\""b\"",{className:e._prefixClasses(\""b_tag\""),key:\""_next7\""},e.props.title,\"": \"")),t.push(r[\""default\""].createElement(\""span\"",{key:\""_next8\"",className:e._prefixClasses(\""subtitle span_tag\"")},e.props.subtitle))):t.push(r[\""default\""].createElement(\""b\"",{className:e._prefixClasses(\""b_tag\""),key:\""_next9\""},e.props.title)),1===t.length?t[0]:t}())),1===t.length?t[0]:t}(),r[\""default\""].createElement(\""style\"",{className:this._prefixClasses(\""style_tag\""),dangerouslySetInnerHTML:{__html:\""    html {      height: 100%;      box-sizing: border-box;    }    *,    *:before,    *:after {      box-sizing: inherit;    }    a {      -webkit-tap-highlight-color: rgba(0,0,0,0);    }    body {      position: relative;      min-height: 100%;      margin: 0;      padding-bottom: 6rem;      font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, serif;      text-rendering: geometricPrecision;    }  \""}}),function(){var t=[];return e.props.inverse?t.push(r[\""default\""].createElement(\""style\"",{className:e._prefixClasses(\""style_tag\""),key:\""_next10\"",dangerouslySetInnerHTML:{__html:\""      html, body {        background-color: #fff;      }    \""}})):t.push(r[\""default\""].createElement(\""style\"",{className:e._prefixClasses(\""style_tag\""),key:\""_next11\"",dangerouslySetInnerHTML:{__html:\""      html, body {        background-color: #000;        color: #fff;      }    \""}})),1===t.length?t[0]:t}())}catch(a){if(\""undefined\""==typeof window)throw a;return this.renderError=a,null}}})},function(e,t,a){e.exports=a(126)},function(e,t,a){\""use strict\"";function s(e,t,a){return!n(e.props,t)||!n(e.state,a)}var n=a(127);e.exports=s},function(e,t){\""use strict\"";function a(e,t){return e===t?0!==e||1/e===1/t:e!==e\u0026\u0026t!==t}function s(e,t){if(a(e,t))return!0;if(\""object\""!=typeof e||null===e||\""object\""!=typeof t||null===t)return!1;var s=Object.keys(e),r=Object.keys(t);if(s.length!==r.length)return!1;for(var o=0;o\u003cs.length;o++)if(!n.call(t,s[o])||!a(e[s[o]],t[s[o]]))return!1;return!0}var n=Object.prototype.hasOwnProperty;e.exports=s},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(39),r=s(n),o=a(88),i=s(o),l=a(125),c=s(l);t[\""default\""]=i[\""default\""].createClass({isolationPrefix:\""__components_logo_\"",style:\"".__components_logo_linearGradient_tag .__components_logo_stop_tag:first-child{stop-color:#000}.__components_logo_inverse .__components_logo_linearGradient_tag .__components_logo_stop_tag:first-child,.__components_logo_linearGradient_tag .__components_logo_stop_tag:last-child{stop-color:#fff}.__components_logo_inverse .__components_logo_linearGradient_tag .__components_logo_stop_tag:last-child{stop-color:#000}\"",displayName:\""ComponentsLogo\"",shouldComponentUpdate:function(e,t){return(0,c[\""default\""])(this,e,t)},render:function(){try{return r[\""default\""].createElement(\""svg\"",{className:this._prefixClasses((this.props.inverse?\""inverse\"":\""\"")+\"" svg_tag\""),viewBox:\""0 0 226 200\"",version:\""1.1\"",xmlns:\""http://www.w3.org/2000/svg\""},r[\""default\""].createElement(\""defs\"",{className:this._prefixClasses(\""defs_tag\"")},r[\""default\""].createElement(\""linearGradient\"",{className:this._prefixClasses(\""linearGradient_tag\""),x1:\""196.572434%\"",y1:\""228.815483%\"",x2:\""50%\"",y2:\""50%\"",id:\""l1\""},r[\""default\""].createElement(\""stop\"",{className:this._prefixClasses(\""stop_tag\""),offset:\""0%\""}),r[\""default\""].createElement(\""stop\"",{className:this._prefixClasses(\""stop_tag\""),offset:\""100%\""}))),r[\""default\""].createElement(\""g\"",{className:this._prefixClasses(\""g_tag\""),stroke:\""none\"",strokeWidth:\""1\"",fill:\""none\"",fillRule:\""evenodd\""},r[\""default\""].createElement(\""g\"",{className:this._prefixClasses(\""g_tag\""),transform:\""translate(-141.000000, -156.000000)\"",fill:\""url(#l1)\""},r[\""default\""].createElement(\""polygon\"",{className:this._prefixClasses(\""polygon_tag\""),points:\""254 156.459299 367 356 141 356 \""}))))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(39),r=s(n),o=a(88),i=s(o),l=a(125),c=s(l);t[\""default\""]=i[\""default\""].createClass({isolationPrefix:\""__components_badge_\"",style:\"".__components_badge_badge{background:red;border-radius:50%;color:#fff;display:inline-block;font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;font-size:12px;font-weight:700;line-height:21px;width:21px;height:21px;margin:8px;text-align:center}\"",displayName:\""ComponentsBadge\"",shouldComponentUpdate:function(e,t){return(0,c[\""default\""])(this,e,t)},render:function(){try{return r[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""badge span_tag\"")},this.props.count)}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}})},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(131),g=s(m),y=a(88),v=s(y),x=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{return h[\""default\""].createElement(\""footer\"",{className:this._prefixClasses(\""footer_tag\"")},h[\""default\""].createElement(\""div\"",{className:this._prefixClasses(\""left div_tag\"")},h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""copyright span_tag\"")},h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""text span_tag\"")},\""Copyright\""),\"" © 2016 Zeit, Inc. All rights reserved.\"")),h[\""default\""].createElement(\""div\"",{className:this._prefixClasses(\""right div_tag\"")},h[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Navigation_tag\""),inverse:this.props.inverse})))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(v[\""default\""]);x.isolationPrefix=\""__components_footer_\"",x.style=\"".__components_footer_footer_tag{position:absolute;right:0;bottom:0;left:0;padding:20px;font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;vertical-align:top;max-width:900px;margin:auto}.__components_footer_left{float:left;height:20px;line-height:20px;vertical-align:middle}.__components_footer_right{float:right}.__components_footer_copyright{color:#666;font-size:11px}@media screen and (max-width:730px){.__components_footer_footer_tag{text-align:center}.__components_footer_copyright .__components_footer_text{display:none}.__components_footer_left,.__components_footer_right{float:none}}\"",x.displayName=\""ComponentsFooter\"",t[\""default\""]=x},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(89),g=s(m),y=a(132),v=s(y),x=a(88),b=s(x),w=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{return h[\""default\""].createElement(\""nav\"",{className:this._prefixClasses((this.props.inverse?\""inverse\"":\""\"")+\"" nav_tag\"")},h[\""default\""].createElement(\""ul\"",{className:this._prefixClasses(\""navigation ul_tag\"")},h[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""bird a_tag\""),href:\""https://twitter.com/zeithq\"",target:\""_blank\""},h[\""default\""].createElement(v[\""default\""],{className:this._prefixClasses(\""Bird_tag\"")}))),h[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""privacy li_tag\"")},h[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/privacy\""},h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\"")},\""Privacy\"",h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""long span_tag\"")},\"" Policy\"")))),h[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""terms li_tag\"")},h[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/terms\""},h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\"")},\""Terms\"",h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""long span_tag\"")},\"" of Service\"")))),h[\""default\""].createElement(\""li\"",{className:this._prefixClasses(\""li_tag\"")},h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""mailto:team@zeit.co\""},\""team@zeit.co\""))))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(b[\""default\""]);w.isolationPrefix=\""__components_navigation_\"",w.style=\"".__components_navigation_nav_tag{font-family:Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif}.__components_navigation_navigation{margin:0;padding:0;list-style:none}.__components_navigation_navigation .__components_navigation_li_tag{display:inline-block;vertical-align:middle;margin-right:15px;border-right:1px solid #4a4a4a;height:20px;line-height:20px}.__components_navigation_inverse .__components_navigation_navigation .__components_navigation_li_tag{border-right:1px solid #ccc}.__components_navigation_navigation .__components_navigation_li_tag .__components_navigation_a_tag{margin-right:15px;height:20px;display:inline-block}.__components_navigation_navigation .__components_navigation_li_tag:last-child{border-right:0;margin-right:0}.__components_navigation_navigation .__components_navigation_li_tag:last-child .__components_navigation_a_tag{margin-right:0}.__components_navigation_navigation .__components_navigation_a_tag{color:#666;text-decoration:none;font-size:11px}.__components_navigation_navigation .__components_navigation_a_tag:hover{color:#999}.__components_navigation_bird{padding-top:5px}.__components_navigation_bar{width:0;border-left:1px solid #5e5e5e}@media screen and (max-width:730px){.__components_navigation_privacy .__components_navigation_long,.__components_navigation_terms .__components_navigation_long{display:none}}\"",w.displayName=\""ComponentsNavigation\"",t[\""default\""]=w},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(88),g=s(m),y=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""shouldComponentUpdate\"",value:function(){return!1}},{key:\""render\"",value:function(){try{return h[\""default\""].createElement(\""svg\"",{className:this._prefixClasses(\""svg_tag\""),width:\""11\"",height:\""9\"",viewBox:\""0 0 11 9\"",xmlns:\""http://www.w3.org/2000/svg\""},h[\""default\""].createElement(\""path\"",{className:this._prefixClasses(\""path_tag\""),d:\""M11 1.029L9.969 2.058v.171c0 .188-.03.368-.075.542-.024 1.415-.475 3.292-2.332 4.773C3.913 10.458 0 7.887 0 7.887c3.094 0 3.094-1.029 3.094-1.029-.688 0-2.063-1.371-2.063-1.371.344.342 1.032 0 1.032 0C.343 4.458.343 3.429.343 3.429c.344.343 1.032 0 1.032 0C-.344 2.058.687.343.687.343c.344 1.715 4.813 2.4 4.813 2.4l.057-.028a4.056 4.056 0 0 1-.057-.657C5.5.827 6.5 0 7.734 0c.68 0 1.28.309 1.69.786l.201-.1L10.656 0 9.97 1.372 11 1.029z\"",fill:\""#5E5E5E\"",fillRule:\""evenodd\""}))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(g[\""default\""]);y.isolationPrefix=\""__components_twitter-bird_\"",y.style=\"".__components_twitter-bird_svg_tag:hover .__components_twitter-bird_path_tag{fill:#999}\"",y.displayName=\""ComponentsTwitterBird\"",t[\""default\""]=y},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(88),g=s(m),y=a(134),v=s(y),x=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){var e=this.props,t=e.component,a=e.className,s=e.children;return h[\""default\""].cloneElement(t,{className:[a,t.props.className||\""\""].join(\"" \"")},s)}}]),t}(g[\""default\""]),b=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{var e=this.props.offsetTop,t=this.props.children,a=t.props.children||\""\"",s=this.props.id;if(null==s){var n=\""string\""==typeof a?a:a.join(\""\"");s=n.toLowerCase().replace(/\\s/g,\""-\"").replace(/[?!]/g,\""\"")}var r=null!=e?{marginTop:-e+\""px\"",paddingTop:e+\""px\""}:null;return h[\""default\""].createElement(x,{className:this._prefixClasses(t.type+\"" Heading_tag\""),component:t},h[\""default\""].createElement(\""span\"",{id:s,className:this._prefixClasses(\""target span_tag\""),style:r}),\"" \"",\""  \"",h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\""),href:\""#\""+s},a),\"" \"",\""  \"",h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""permalink span_tag\"")},h[\""default\""].createElement(v[\""default\""],{className:this._prefixClasses(\""PermalinkIcon_tag\"")})))}catch(o){if(\""undefined\""==typeof window)throw o;return this.renderError=o,null}}}]),t}(g[\""default\""]);b.isolationPrefix=\""__components_heading_\"",b.style='.__components_heading_a_tag{border-bottom:1px solid transparent;color:inherit;text-decoration:none}.__components_heading_a_tag:hover{border-bottom-color:inherit}.__components_heading_h1 .__components_heading_a_tag:before{content:\""# \""}.__components_heading_h2 .__components_heading_a_tag:before{content:\""## \""}.__components_heading_h3 .__components_heading_a_tag:before{content:\""### \""}.__components_heading_h1:before,.__components_heading_h2:before,.__components_heading_h3:before{display:none}.__components_heading_target{display:block;margin-top:-20px;padding-top:20px;visibility:hidden;position:absolute}.__components_heading_permalink{text-align:center;vertical-align:middle;visibility:hidden}.__components_heading_a_tag:hover~.__components_heading_permalink{visibility:visible}',\nb.displayName=\""ComponentsHeading\"",t[\""default\""]=b},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(88),g=s(m),y=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""shouldComponentUpdate\"",value:function(){return!1}},{key:\""render\"",value:function(){try{return h[\""default\""].createElement(\""svg\"",{width:\""11px\"",height:\""11px\"",viewBox:\""0 0 11 11\"",version:\""1.1\"",xmlns:\""http://www.w3.org/2000/svg\""},h[\""default\""].createElement(\""g\"",{stroke:\""none\"",strokeWidth:\""1\"",fill:\""none\"",fillRule:\""evenodd\""},h[\""default\""].createElement(\""g\"",{transform:\""translate(-432.000000, -181.000000)\"",fill:\""#9B9B9B\""},h[\""default\""].createElement(\""path\"",{d:\""M442.36949,184.673746 L440.543368,186.500079 C440.047223,186.996013 439.369736,187.191548 438.72445,187.101937 L439.934732,185.891655 L441.760854,184.065321 C442.26505,183.561549 442.26505,182.743395 441.760854,182.238988 C441.256658,181.735003 440.438928,181.735003 439.934732,182.238988 L438.10861,184.065321 L436.897904,185.275815 C436.808293,184.630529 437.003616,183.95283 437.499762,183.456684 L439.325883,181.630775 C440.166281,180.789742 441.528881,180.789742 442.369278,181.630775 C443.209887,182.470748 443.209887,183.833772 442.36949,184.673746 L442.36949,184.673746 Z M438.717247,185.891655 L436.891125,187.717565 L436.282277,187.108928 L438.10861,185.282594 L438.717247,185.891655 L438.717247,185.891655 Z M433.238882,188.934838 C432.734686,189.439246 432.734686,190.256552 433.238882,190.760959 C433.743078,191.265579 434.560807,191.265579 435.065003,190.760959 L436.891125,188.934838 L438.101619,187.724344 C438.191442,188.369842 437.996119,189.047329 437.499974,189.543474 L435.673852,191.369384 C434.833455,192.210205 433.470854,192.210205 432.630457,191.369384 C431.789848,190.529411 431.789848,189.166387 432.630457,188.326413 L434.456579,186.500079 C434.952724,186.003722 435.630423,185.808399 436.275709,185.898222 L435.065215,187.108928 L433.238882,188.934838 L433.238882,188.934838 Z\""}))))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(g[\""default\""]);y.displayName=\""ComponentsPermalinkIcon\"",t[\""default\""]=y},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(39),r=s(n),o=a(125),i=s(o),l=a(88),c=s(l),f=a(136),u=s(f);t[\""default\""]=c[\""default\""].createClass({displayName:\""ComponentsHead\"",shouldComponentUpdate:function(e,t){return(0,i[\""default\""])(this,e,t)},render:function(){var e=this;try{var t=null!=this.props.titlePrefix?this.props.titlePrefix:\""ZEIT – \"",a=this.props.ogDescription||this.props.description;return r[\""default\""].createElement(u[\""default\""],null,r[\""default\""].createElement(\""title\"",null,t+this.props.title),r[\""default\""].createElement(\""meta\"",{name:\""viewport\"",content:\""width=device-width, user-scalable=no\""}),r[\""default\""].createElement(\""meta\"",{name:\""twitter:card\"",content:this.props.image?\""summary_large_image\"":\""summary\""}),r[\""default\""].createElement(\""meta\"",{name:\""twitter:site\"",content:\""@zeithq\""}),r[\""default\""].createElement(\""meta\"",{name:\""og:title\"",content:this.props.ogTitle||this.props.title}),r[\""default\""].createElement(\""meta\"",{name:\""og:url\"",content:this.props.url||\""https://zeit.co/now\""}),function(){var t=[];return e.props.description\u0026\u0026t.push(r[\""default\""].createElement(\""meta\"",{key:\""_next0\"",name:\""description\"",content:e.props.description})),1===t.length?t[0]:t}(),function(){var e=[];return a\u0026\u0026e.push(r[\""default\""].createElement(\""meta\"",{key:\""_next1\"",name:\""og:description\"",content:a})),1===e.length?e[0]:e}(),function(){var t=[];return e.props.image\u0026\u0026t.push(r[\""default\""].createElement(\""meta\"",{key:\""_next2\"",name:\""og:image\"",content:e.props.image})),1===t.length?t[0]:t}(),function(){var t=[];return e.props.video\u0026\u0026(t.push(r[\""default\""].createElement(\""meta\"",{key:\""_next3\"",name:\""og:type\"",content:\""video\""})),t.push(r[\""default\""].createElement(\""meta\"",{key:\""_next4\"",name:\""og:video\"",content:e.props.video})),t.push(r[\""default\""].createElement(\""meta\"",{key:\""_next5\"",name:\""og:video:type\"",content:\""video/mp4\""}))),1===t.length?t[0]:t}(),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""57x57\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-57x57.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""60x60\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-60x60.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""72x72\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-72x72.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""76x76\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-76x76.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""114x114\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-114x114.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""120x120\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-120x120.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""144x144\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-144x144.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""152x152\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-152x152.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""apple-touch-icon\"",sizes:\""180x180\"",href:\""https://cdn.zeit.co/favicon/apple-touch-icon-180x180.png\""}),r[\""default\""].createElement(\""link\"",{rel:\""icon\"",type:\""image/png\"",href:\""https://cdn.zeit.co/favicon/favicon-32x32.png\"",sizes:\""32x32\""}),r[\""default\""].createElement(\""link\"",{rel:\""icon\"",type:\""image/png\"",href:\""https://cdn.zeit.co/favicon/android-chrome-192x192.png\"",sizes:\""192x192\""}),r[\""default\""].createElement(\""link\"",{rel:\""icon\"",type:\""image/png\"",href:\""https://cdn.zeit.co/favicon/favicon-96x96.png\"",sizes:\""96x96\""}),r[\""default\""].createElement(\""link\"",{rel:\""icon\"",type:\""image/png\"",href:\""https://cdn.zeit.co/favicon/favicon-16x16.png\"",sizes:\""16x16\""}),r[\""default\""].createElement(\""link\"",{rel:\""manifest\"",href:\""https://cdn.zeit.co/favicon/manifest.json\""}),r[\""default\""].createElement(\""link\"",{rel:\""mask-icon\"",href:\""https://cdn.zeit.co/favicon/safari-pinned-tab.svg\"",color:\""#ffffff\""}),r[\""default\""].createElement(\""link\"",{rel:\""shortcut icon\"",href:\""https://cdn.zeit.co/favicon/favicon.ico\""}),r[\""default\""].createElement(\""meta\"",{name:\""theme-color\"",content:\""#000\""}),this.props.children)}catch(s){if(\""undefined\""==typeof window)throw s;return this.renderError=s,null}}})},function(e,t){e.exports=require(\""next/head\"")},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(138),g=s(m),y=a(88),v=s(y),x=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{var e=this.props.width||9,t=this.props.height||8,a=this.props.color||\""#fff\"";return h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""now span_tag\""),style:{color:a}},h[\""default\""].createElement(\""span\"",{className:this._prefixClasses(\""span_tag\""),style:{width:e+\""px\"",height:t+\""px\""}},h[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Logo_tag\""),color:a})),\""now\"")}catch(s){if(\""undefined\""==typeof window)throw s;return this.renderError=s,null}}}]),t}(v[\""default\""]);x.isolationPrefix=\""__now_components_now_\"",x.style=\"".__now_components_now_span_tag .__now_components_now_span_tag{display:inline-block;margin-right:3px}\"",x.displayName=\""NowComponentsNow\"",t[\""default\""]=x},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(88),g=s(m),y=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{var e=this.props.color||\""#fff\"";return h[\""default\""].createElement(\""svg\"",{viewBox:\""0 0 40 35\"",version:\""1.1\"",xmlns:\""http://www.w3.org/2000/svg\""},h[\""default\""].createElement(\""g\"",{stroke:\""none\"",strokeWidth:\""1\"",fill:\""none\"",fillRule:\""evenodd\""},h[\""default\""].createElement(\""g\"",{transform:\""translate(-626.000000, -61.000000)\""},h[\""default\""].createElement(\""g\"",{transform:\""translate(628.000000, 63.000000)\""},h[\""default\""].createElement(\""path\"",{stroke:\""#979797\""}),h[\""default\""].createElement(\""g\"",{strokeWidth:\""2\"",stroke:e},h[\""default\""].createElement(\""polygon\"",{points:\""17.8444809 0.0466407108 35.6889618 31.9974443 0 31.9974443 \""})),h[\""default\""].createElement(\""path\"",{d:\""M34.0851064,31.5897436 L17.2340426,1.23076923\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M34.8510638,31.5897436 L18,1.23076923\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M33.3191489,31.5897436 L17.2340426,2.05128205\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M32.5531915,31.5897436 L17.2340426,2.87179487\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M16.4680851,2.87179487 L33.3191489,31.5897436\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M31.787234,31.5897436 L16.4680851,3.69230769\"",stroke:e,strokeLinecap:\""square\""}),h[\""default\""].createElement(\""path\"",{d:\""M28.7234043,25.025641 L22.5957447,14.3589744\"",stroke:e,strokeLinecap:\""square\""})))))}catch(t){if(\""undefined\""==typeof window)throw t;return this.renderError=t,null}}}]),t}(g[\""default\""]);y.displayName=\""NowComponentsLogo\"",t[\""default\""]=y},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(91),r=s(n),o=a(95),i=s(o),l=a(96),c=s(l),f=a(100),u=s(f),d=a(117),p=s(d),_=a(39),h=s(_),m=a(89),g=s(m),y=a(137),v=s(y),x=a(88),b=s(x),w=function(e){function t(){return(0,i[\""default\""])(this,t),(0,u[\""default\""])(this,(0,r[\""default\""])(t).apply(this,arguments))}return(0,p[\""default\""])(t,e),(0,c[\""default\""])(t,[{key:\""render\"",value:function(){try{return h[\""default\""].createElement(g[\""default\""],{className:this._prefixClasses(\""Link_tag\""),href:\""/now\""},h[\""default\""].createElement(\""a\"",{className:this._prefixClasses(\""a_tag\"")},h[\""default\""].createElement(v[\""default\""],{className:this._prefixClasses(\""Now_tag\""),color:this.props.color||\""#000\"",size:this.props.size})))}catch(e){if(\""undefined\""==typeof window)throw e;return this.renderError=e,null}}}]),t}(b[\""default\""]);w.isolationPrefix=\""__blog_now-link_\"",w.style=\"".__blog_now-link_a_tag{text-decoration:none;border-bottom:1px solid #666}\"",w.displayName=\""BlogNowLink\"",t[\""default\""]=w},function(e,t,a){\""use strict\"";function s(e){return e\u0026\u0026e.__esModule?e:{\""default\"":e}}Object.defineProperty(t,\""__esModule\"",{value:!0});var n=a(39),r=s(n),o=a(88),i=s(o),l=a(141),c=s(l),f=a(142),u=s(f);t[\""default\""]=i[\""default\""].createClass({displayName:\""BlogDate\"",componentDidMount:function(){var e=this;this.interval=setInterval(function(){e.forceUpdate()},5e3)},componentWillUnmount:function(){clearInterval(this.interval)},render:function(){try{var e=new Date(this.props.value),t=void 0;if(this.props.tzOffset){var a=this.props.tzOffset-e.getTimezoneOffset();t=new Date(e.getTime()-60*a*1e3)}else t=e;return r[\""default\""].createElement(\""span\"",null,(0,u[\""default\""])(t,\""dddd, mmmm dS yyyy\""),\"" (\"",(0,c[\""default\""])(new Date-e),\"" ago)\"")}catch(s){if(\""undefined\""==typeof window)throw s;return this.renderError=s,null}}})},function(e,t){function a(e){if(e=\""\""+e,!(e.length\u003e1e4)){var t=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(t){var a=parseFloat(t[1]),s=(t[2]||\""ms\"").toLowerCase();switch(s){case\""years\"":case\""year\"":case\""yrs\"":case\""yr\"":case\""y\"":return a*f;case\""days\"":case\""day\"":case\""d\"":return a*c;case\""hours\"":case\""hour\"":case\""hrs\"":case\""hr\"":case\""h\"":return a*l;case\""minutes\"":case\""minute\"":case\""mins\"":case\""min\"":case\""m\"":return a*i;case\""seconds\"":case\""second\"":case\""secs\"":case\""sec\"":case\""s\"":return a*o;case\""milliseconds\"":case\""millisecond\"":case\""msecs\"":case\""msec\"":case\""ms\"":return a}}}}function s(e){return e\u003e=c?Math.round(e/c)+\""d\"":e\u003e=l?Math.round(e/l)+\""h\"":e\u003e=i?Math.round(e/i)+\""m\"":e\u003e=o?Math.round(e/o)+\""s\"":e+\""ms\""}function n(e){return r(e,c,\""day\"")||r(e,l,\""hour\"")||r(e,i,\""minute\"")||r(e,o,\""second\"")||e+\"" ms\""}function r(e,t,a){return t\u003ee?void 0:1.5*t\u003ee?Math.floor(e/t)+\"" \""+a:Math.ceil(e/t)+\"" \""+a+\""s\""}var o=1e3,i=60*o,l=60*i,c=24*l,f=365.25*c;e.exports=function(e,t){return t=t||{},\""string\""==typeof e?a(e):t[\""long\""]?n(e):s(e)}},function(e,t,a){var s;!function(n){\""use strict\"";function r(e,t){for(e=String(e),t=t||2;e.length\u003ct;)e=\""0\""+e;return e}function o(e){var t=new Date(e.getFullYear(),e.getMonth(),e.getDate());t.setDate(t.getDate()-(t.getDay()+6)%7+3);var a=new Date(t.getFullYear(),0,4);a.setDate(a.getDate()-(a.getDay()+6)%7+3);var s=t.getTimezoneOffset()-a.getTimezoneOffset();t.setHours(t.getHours()-s);var n=(t-a)/6048e5;return 1+Math.floor(n)}function i(e){var t=e.getDay();return 0===t\u0026\u0026(t=7),t}function l(e){return null===e?\""null\"":void 0===e?\""undefined\"":\""object\""!=typeof e?typeof e:Array.isArray(e)?\""array\"":{}.toString.call(e).slice(8,-1).toLowerCase()}var c=function(){var e=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g,t=/\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,a=/[^-+\\dA-Z]/g;return function(s,n,f,u){if(1!==arguments.length||\""string\""!==l(s)||/\\d/.test(s)||(n=s,s=void 0),s=s||new Date,s instanceof Date||(s=new Date(s)),isNaN(s))throw TypeError(\""Invalid date\"");n=String(c.masks[n]||n||c.masks[\""default\""]);var d=n.slice(0,4);\""UTC:\""!==d\u0026\u0026\""GMT:\""!==d||(n=n.slice(4),f=!0,\""GMT:\""===d\u0026\u0026(u=!0));var p=f?\""getUTC\"":\""get\"",_=s[p+\""Date\""](),h=s[p+\""Day\""](),m=s[p+\""Month\""](),g=s[p+\""FullYear\""](),y=s[p+\""Hours\""](),v=s[p+\""Minutes\""](),x=s[p+\""Seconds\""](),b=s[p+\""Milliseconds\""](),w=f?0:s.getTimezoneOffset(),E=o(s),C=i(s),N={d:_,dd:r(_),ddd:c.i18n.dayNames[h],dddd:c.i18n.dayNames[h+7],m:m+1,mm:r(m+1),mmm:c.i18n.monthNames[m],mmmm:c.i18n.monthNames[m+12],yy:String(g).slice(2),yyyy:g,h:y%12||12,hh:r(y%12||12),H:y,HH:r(y),M:v,MM:r(v),s:x,ss:r(x),l:r(b,3),L:r(Math.round(b/10)),t:12\u003ey?\""a\"":\""p\"",tt:12\u003ey?\""am\"":\""pm\"",T:12\u003ey?\""A\"":\""P\"",TT:12\u003ey?\""AM\"":\""PM\"",Z:u?\""GMT\"":f?\""UTC\"":(String(s).match(t)||[\""\""]).pop().replace(a,\""\""),o:(w\u003e0?\""-\"":\""+\"")+r(100*Math.floor(Math.abs(w)/60)+Math.abs(w)%60,4),S:[\""th\"",\""st\"",\""nd\"",\""rd\""][_%10\u003e3?0:(_%100-_%10!=10)*_%10],W:E,N:C};return n.replace(e,function(e){return e in N?N[e]:e.slice(1,e.length-1)})}}();c.masks={\""default\"":\""ddd mmm dd yyyy HH:MM:ss\"",shortDate:\""m/d/yy\"",mediumDate:\""mmm d, yyyy\"",longDate:\""mmmm d, yyyy\"",fullDate:\""dddd, mmmm d, yyyy\"",shortTime:\""h:MM TT\"",mediumTime:\""h:MM:ss TT\"",longTime:\""h:MM:ss TT Z\"",isoDate:\""yyyy-mm-dd\"",isoTime:\""HH:MM:ss\"",isoDateTime:\""yyyy-mm-dd'T'HH:MM:sso\"",isoUtcDateTime:\""UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"",expiresHeaderFormat:\""ddd, dd mmm yyyy HH:MM:ss Z\""},c.i18n={dayNames:[\""Sun\"",\""Mon\"",\""Tue\"",\""Wed\"",\""Thu\"",\""Fri\"",\""Sat\"",\""Sunday\"",\""Monday\"",\""Tuesday\"",\""Wednesday\"",\""Thursday\"",\""Friday\"",\""Saturday\""],monthNames:[\""Jan\"",\""Feb\"",\""Mar\"",\""Apr\"",\""May\"",\""Jun\"",\""Jul\"",\""Aug\"",\""Sep\"",\""Oct\"",\""Nov\"",\""Dec\"",\""January\"",\""February\"",\""March\"",\""April\"",\""May\"",\""June\"",\""July\"",\""August\"",\""September\"",\""October\"",\""November\"",\""December\""]},s=function(){return c}.call(t,a,t,e),!(void 0!==s\u0026\u0026(e.exports=s))}(this)}]);""}</script></div><script>__ENV__ = {""STRIPE_PUBLISHABLE_KEY"":""pk_live_alyEi3lN0kSwbdevK0nrGwTw""}</script> <script>
        (function() {
          load('//cdn.zeit.co/next/next-0.0.74.min.js', function(err) {
            if (err) load('/_next/next.bundle.js');
          });

          function load (src, fn) {
            fn = fn || noop;
            var script = document.createElement('script');
            script.src = src;
            script.onload = function () { fn(null) };
            script.onerror = fn;
            document.head.appendChild(script);
          }

          function noop () {}
        })();
      </script></body></html>"
